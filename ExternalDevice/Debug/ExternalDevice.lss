
ExternalDevice.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ac  00800100  00002dde  00002e72  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002dde  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000030a  008001ac  008001ac  00002f1e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002f1e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002f7c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000230  00000000  00000000  00002fc0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002ce0  00000000  00000000  000031f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d0e  00000000  00000000  00005ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001be4  00000000  00000000  00006bde  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000630  00000000  00000000  000087c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a81  00000000  00000000  00008df4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a8d  00000000  00000000  00009875  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000208  00000000  00000000  0000b302  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__ctors_end>
       4:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
       8:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
       c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      10:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      14:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      18:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      1c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      20:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      24:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__vector_9>
      28:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      2c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      30:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      34:	0c 94 e2 02 	jmp	0x5c4	; 0x5c4 <__vector_13>
      38:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      3c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      40:	0c 94 cb 02 	jmp	0x596	; 0x596 <__vector_16>
      44:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      48:	0c 94 6f 03 	jmp	0x6de	; 0x6de <__vector_18>
      4c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      50:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      54:	0c 94 4f 03 	jmp	0x69e	; 0x69e <__vector_21>
      58:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      5c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      60:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      64:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      68:	73 0b       	sbc	r23, r19
      6a:	92 0a       	sbc	r9, r18
      6c:	60 0b       	sbc	r22, r16
      6e:	92 0a       	sbc	r9, r18
      70:	60 0b       	sbc	r22, r16
      72:	92 0a       	sbc	r9, r18
      74:	42 0b       	sbc	r20, r18
      76:	92 0a       	sbc	r9, r18
      78:	34 0b       	sbc	r19, r20
      7a:	92 0a       	sbc	r9, r18
      7c:	26 0b       	sbc	r18, r22
      7e:	92 0a       	sbc	r9, r18
      80:	18 0b       	sbc	r17, r24
      82:	92 0a       	sbc	r9, r18
      84:	0b 0b       	sbc	r16, r27
      86:	92 0a       	sbc	r9, r18
      88:	0b 0b       	sbc	r16, r27
      8a:	92 0a       	sbc	r9, r18
      8c:	ee 0a       	sbc	r14, r30
      8e:	92 0a       	sbc	r9, r18
      90:	ee 0a       	sbc	r14, r30
      92:	92 0a       	sbc	r9, r18
      94:	18 0b       	sbc	r17, r24
      96:	92 0a       	sbc	r9, r18
      98:	18 0b       	sbc	r17, r24
      9a:	92 0a       	sbc	r9, r18
      9c:	18 0b       	sbc	r17, r24
      9e:	92 0a       	sbc	r9, r18
      a0:	18 0b       	sbc	r17, r24
      a2:	92 0a       	sbc	r9, r18
      a4:	d4 0a       	sbc	r13, r20
      a6:	92 0a       	sbc	r9, r18
      a8:	18 0b       	sbc	r17, r24
      aa:	92 0a       	sbc	r9, r18
      ac:	18 0b       	sbc	r17, r24
      ae:	92 0a       	sbc	r9, r18
      b0:	18 0b       	sbc	r17, r24

000000b2 <__ctors_end>:
      b2:	11 24       	eor	r1, r1
      b4:	1f be       	out	0x3f, r1	; 63
      b6:	cf ef       	ldi	r28, 0xFF	; 255
      b8:	d8 e0       	ldi	r29, 0x08	; 8
      ba:	de bf       	out	0x3e, r29	; 62
      bc:	cd bf       	out	0x3d, r28	; 61

000000be <__do_copy_data>:
      be:	11 e0       	ldi	r17, 0x01	; 1
      c0:	a0 e0       	ldi	r26, 0x00	; 0
      c2:	b1 e0       	ldi	r27, 0x01	; 1
      c4:	ee ed       	ldi	r30, 0xDE	; 222
      c6:	fd e2       	ldi	r31, 0x2D	; 45
      c8:	02 c0       	rjmp	.+4      	; 0xce <__do_copy_data+0x10>
      ca:	05 90       	lpm	r0, Z+
      cc:	0d 92       	st	X+, r0
      ce:	ac 3a       	cpi	r26, 0xAC	; 172
      d0:	b1 07       	cpc	r27, r17
      d2:	d9 f7       	brne	.-10     	; 0xca <__do_copy_data+0xc>

000000d4 <__do_clear_bss>:
      d4:	24 e0       	ldi	r18, 0x04	; 4
      d6:	ac ea       	ldi	r26, 0xAC	; 172
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	01 c0       	rjmp	.+2      	; 0xde <.do_clear_bss_start>

000000dc <.do_clear_bss_loop>:
      dc:	1d 92       	st	X+, r1

000000de <.do_clear_bss_start>:
      de:	a6 3b       	cpi	r26, 0xB6	; 182
      e0:	b2 07       	cpc	r27, r18
      e2:	e1 f7       	brne	.-8      	; 0xdc <.do_clear_bss_loop>
      e4:	0e 94 fd 0b 	call	0x17fa	; 0x17fa <main>
      e8:	0c 94 ed 16 	jmp	0x2dda	; 0x2dda <_exit>

000000ec <__bad_interrupt>:
      ec:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f0 <GetEnvironment>:
#include "dht.h"

short GetEnvironment(float *temperature, float *humidity) 
{
      f0:	cf 92       	push	r12
      f2:	df 92       	push	r13
      f4:	ef 92       	push	r14
      f6:	ff 92       	push	r15
      f8:	0f 93       	push	r16
      fa:	1f 93       	push	r17
      fc:	cf 93       	push	r28
      fe:	df 93       	push	r29
     100:	cd b7       	in	r28, 0x3d	; 61
     102:	de b7       	in	r29, 0x3e	; 62
     104:	2a 97       	sbiw	r28, 0x0a	; 10
     106:	0f b6       	in	r0, 0x3f	; 63
     108:	f8 94       	cli
     10a:	de bf       	out	0x3e, r29	; 62
     10c:	0f be       	out	0x3f, r0	; 63
     10e:	cd bf       	out	0x3d, r28	; 61
     110:	7c 01       	movw	r14, r24
	unsigned short bits[5];
	unsigned short i,j = 0;

	memset(bits, 0, sizeof(bits));
     112:	fe 01       	movw	r30, r28
     114:	31 96       	adiw	r30, 0x01	; 1
     116:	9a e0       	ldi	r25, 0x0A	; 10
     118:	df 01       	movw	r26, r30
     11a:	1d 92       	st	X+, r1
     11c:	9a 95       	dec	r25
     11e:	e9 f7       	brne	.-6      	; 0x11a <GetEnvironment+0x2a>

	DHT_DDR |= (1<<DHT_INPUTPIN); 
     120:	24 9a       	sbi	0x04, 4	; 4
	DHT_PORT |= (1<<DHT_INPUTPIN); 
     122:	2c 9a       	sbi	0x05, 4	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     124:	8f e3       	ldi	r24, 0x3F	; 63
     126:	9c e9       	ldi	r25, 0x9C	; 156
     128:	01 97       	sbiw	r24, 0x01	; 1
     12a:	f1 f7       	brne	.-4      	; 0x128 <GetEnvironment+0x38>
     12c:	00 c0       	rjmp	.+0      	; 0x12e <GetEnvironment+0x3e>
     12e:	00 00       	nop
	
	_delay_ms(10);

	DHT_PORT &= ~(1<<DHT_INPUTPIN); 
     130:	2c 98       	cbi	0x05, 4	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     132:	af ec       	ldi	r26, 0xCF	; 207
     134:	b7 e0       	ldi	r27, 0x07	; 7
     136:	11 97       	sbiw	r26, 0x01	; 1
     138:	f1 f7       	brne	.-4      	; 0x136 <GetEnvironment+0x46>
     13a:	00 c0       	rjmp	.+0      	; 0x13c <GetEnvironment+0x4c>
     13c:	00 00       	nop
	
	_delay_us(500);
	
	DHT_PORT |= (1<<DHT_INPUTPIN); 
     13e:	2c 9a       	sbi	0x05, 4	; 5
	DHT_DDR &= ~(1<<DHT_INPUTPIN); 
     140:	24 98       	cbi	0x04, 4	; 4
     142:	b5 ed       	ldi	r27, 0xD5	; 213
     144:	ba 95       	dec	r27
     146:	f1 f7       	brne	.-4      	; 0x144 <GetEnvironment+0x54>
     148:	00 00       	nop
	
	_delay_us(40);

	if((DHT_PIN & (1<<DHT_INPUTPIN))) return -1;
     14a:	1c 99       	sbic	0x03, 4	; 3
     14c:	88 c0       	rjmp	.+272    	; 0x25e <GetEnvironment+0x16e>
     14e:	8f e3       	ldi	r24, 0x3F	; 63
     150:	91 e0       	ldi	r25, 0x01	; 1
     152:	01 97       	sbiw	r24, 0x01	; 1
     154:	f1 f7       	brne	.-4      	; 0x152 <GetEnvironment+0x62>
     156:	00 c0       	rjmp	.+0      	; 0x158 <GetEnvironment+0x68>
     158:	00 00       	nop
	
	_delay_us(80);

	if(!(DHT_PIN & (1<<DHT_INPUTPIN))) return -1;
     15a:	1c 9b       	sbis	0x03, 4	; 3
     15c:	80 c0       	rjmp	.+256    	; 0x25e <GetEnvironment+0x16e>
     15e:	af e3       	ldi	r26, 0x3F	; 63
     160:	b1 e0       	ldi	r27, 0x01	; 1
     162:	11 97       	sbiw	r26, 0x01	; 1
     164:	f1 f7       	brne	.-4      	; 0x162 <GetEnvironment+0x72>
     166:	00 c0       	rjmp	.+0      	; 0x168 <GetEnvironment+0x78>
     168:	00 00       	nop
     16a:	ce 01       	movw	r24, r28
     16c:	0b 96       	adiw	r24, 0x0b	; 11
				if (timeoutcounter > DHT_TIMEOUT) return -1;
			}
			
			_delay_us(30);
			
			if (DHT_PIN & (1<<DHT_INPUTPIN)) result |= (1<<(7-i));
     16e:	01 e0       	ldi	r16, 0x01	; 1
     170:	10 e0       	ldi	r17, 0x00	; 0
#include "dht.h"

short GetEnvironment(float *temperature, float *humidity) 
{
     172:	47 e0       	ldi	r20, 0x07	; 7
     174:	50 e0       	ldi	r21, 0x00	; 0
     176:	a0 e0       	ldi	r26, 0x00	; 0
     178:	b0 e0       	ldi	r27, 0x00	; 0
     17a:	25 e6       	ldi	r18, 0x65	; 101
     17c:	30 e0       	ldi	r19, 0x00	; 0
     17e:	04 c0       	rjmp	.+8      	; 0x188 <GetEnvironment+0x98>
     180:	21 50       	subi	r18, 0x01	; 1
     182:	31 09       	sbc	r19, r1
			
			while (!(DHT_PIN & (1<<DHT_INPUTPIN))) 
			{ 
				timeoutcounter++;
				
				if (timeoutcounter > DHT_TIMEOUT) return -1;
     184:	09 f4       	brne	.+2      	; 0x188 <GetEnvironment+0x98>
     186:	6b c0       	rjmp	.+214    	; 0x25e <GetEnvironment+0x16e>
		
		for (i=0; i<8; i++) 
		{
			timeoutcounter = 0;
			
			while (!(DHT_PIN & (1<<DHT_INPUTPIN))) 
     188:	1c 9b       	sbis	0x03, 4	; 3
     18a:	fa cf       	rjmp	.-12     	; 0x180 <GetEnvironment+0x90>
     18c:	20 ea       	ldi	r18, 0xA0	; 160
     18e:	2a 95       	dec	r18
     190:	f1 f7       	brne	.-4      	; 0x18e <GetEnvironment+0x9e>
				if (timeoutcounter > DHT_TIMEOUT) return -1;
			}
			
			_delay_us(30);
			
			if (DHT_PIN & (1<<DHT_INPUTPIN)) result |= (1<<(7-i));
     192:	1c 9b       	sbis	0x03, 4	; 3
     194:	09 c0       	rjmp	.+18     	; 0x1a8 <GetEnvironment+0xb8>
     196:	98 01       	movw	r18, r16
     198:	04 2e       	mov	r0, r20
     19a:	02 c0       	rjmp	.+4      	; 0x1a0 <GetEnvironment+0xb0>
     19c:	22 0f       	add	r18, r18
     19e:	33 1f       	adc	r19, r19
     1a0:	0a 94       	dec	r0
     1a2:	e2 f7       	brpl	.-8      	; 0x19c <GetEnvironment+0xac>
     1a4:	a2 2b       	or	r26, r18
     1a6:	b3 2b       	or	r27, r19
				
			timeoutcounter = 0;
			
			while (DHT_PIN & (1<<DHT_INPUTPIN)) 
     1a8:	25 e6       	ldi	r18, 0x65	; 101
     1aa:	30 e0       	ldi	r19, 0x00	; 0
     1ac:	04 c0       	rjmp	.+8      	; 0x1b6 <GetEnvironment+0xc6>
     1ae:	21 50       	subi	r18, 0x01	; 1
     1b0:	31 09       	sbc	r19, r1
			{
				timeoutcounter++;
				
				if (timeoutcounter > DHT_TIMEOUT) return -1;
     1b2:	09 f4       	brne	.+2      	; 0x1b6 <GetEnvironment+0xc6>
     1b4:	54 c0       	rjmp	.+168    	; 0x25e <GetEnvironment+0x16e>
			
			if (DHT_PIN & (1<<DHT_INPUTPIN)) result |= (1<<(7-i));
				
			timeoutcounter = 0;
			
			while (DHT_PIN & (1<<DHT_INPUTPIN)) 
     1b6:	1c 99       	sbic	0x03, 4	; 3
     1b8:	fa cf       	rjmp	.-12     	; 0x1ae <GetEnvironment+0xbe>
     1ba:	41 50       	subi	r20, 0x01	; 1
     1bc:	51 09       	sbc	r21, r1
     1be:	e8 f6       	brcc	.-70     	; 0x17a <GetEnvironment+0x8a>
				
				if (timeoutcounter > DHT_TIMEOUT) return -1;
			}
		}
		
		bits[j] = result;
     1c0:	a1 93       	st	Z+, r26
     1c2:	b1 93       	st	Z+, r27
	
	_delay_us(80);

	unsigned short timeoutcounter = 0;
	
	for (j=0; j<5; j++) 
     1c4:	8e 17       	cp	r24, r30
     1c6:	9f 07       	cpc	r25, r31
     1c8:	a1 f6       	brne	.-88     	; 0x172 <GetEnvironment+0x82>
		}
		
		bits[j] = result;
	}

	DHT_DDR |= (1<<DHT_INPUTPIN);
     1ca:	24 9a       	sbi	0x04, 4	; 4
	DHT_PORT |= (1<<DHT_INPUTPIN);
     1cc:	2c 9a       	sbi	0x05, 4	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1ce:	8f e3       	ldi	r24, 0x3F	; 63
     1d0:	9c e9       	ldi	r25, 0x9C	; 156
     1d2:	01 97       	sbiw	r24, 0x01	; 1
     1d4:	f1 f7       	brne	.-4      	; 0x1d2 <GetEnvironment+0xe2>
     1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <GetEnvironment+0xe8>
     1d8:	00 00       	nop
	
	_delay_ms(10);

	if ((unsigned short)(bits[0] + bits[1] + bits[2] + bits[3]) == bits[4]) 
     1da:	e9 81       	ldd	r30, Y+1	; 0x01
     1dc:	fa 81       	ldd	r31, Y+2	; 0x02
     1de:	ab 81       	ldd	r26, Y+3	; 0x03
     1e0:	bc 81       	ldd	r27, Y+4	; 0x04
     1e2:	4d 81       	ldd	r20, Y+5	; 0x05
     1e4:	5e 81       	ldd	r21, Y+6	; 0x06
     1e6:	8f 81       	ldd	r24, Y+7	; 0x07
     1e8:	98 85       	ldd	r25, Y+8	; 0x08
     1ea:	9f 01       	movw	r18, r30
     1ec:	2a 0f       	add	r18, r26
     1ee:	3b 1f       	adc	r19, r27
     1f0:	24 0f       	add	r18, r20
     1f2:	35 1f       	adc	r19, r21
     1f4:	28 0f       	add	r18, r24
     1f6:	39 1f       	adc	r19, r25
     1f8:	09 85       	ldd	r16, Y+9	; 0x09
     1fa:	1a 85       	ldd	r17, Y+10	; 0x0a
     1fc:	20 17       	cp	r18, r16
     1fe:	31 07       	cpc	r19, r17
     200:	71 f5       	brne	.+92     	; 0x25e <GetEnvironment+0x16e>
     202:	6b 01       	movw	r12, r22
	{
		unsigned short rawhumidity = bits[0]<<8 | bits[1];
     204:	1e 2f       	mov	r17, r30
     206:	00 27       	eor	r16, r16
     208:	0a 2b       	or	r16, r26
     20a:	1b 2b       	or	r17, r27
		unsigned short rawtemperature = bits[2]<<8 | bits[3];
     20c:	74 2f       	mov	r23, r20
     20e:	66 27       	eor	r22, r22
     210:	68 2b       	or	r22, r24
     212:	79 2b       	or	r23, r25
		
		if (rawtemperature & 0x8000)
     214:	77 fd       	sbrc	r23, 7
     216:	34 c0       	rjmp	.+104    	; 0x280 <GetEnvironment+0x190>
			*temperature = (float)((rawtemperature & 0x7FFF) / 10.0) * -1.0;
		else 
			*temperature = (float)(rawtemperature)/10.0;
     218:	80 e0       	ldi	r24, 0x00	; 0
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	0e 94 01 12 	call	0x2402	; 0x2402 <__floatunsisf>
     220:	20 e0       	ldi	r18, 0x00	; 0
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e2       	ldi	r20, 0x20	; 32
     226:	51 e4       	ldi	r21, 0x41	; 65
     228:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     22c:	d7 01       	movw	r26, r14
     22e:	6d 93       	st	X+, r22
     230:	7d 93       	st	X+, r23
     232:	8d 93       	st	X+, r24
     234:	9c 93       	st	X, r25
     236:	13 97       	sbiw	r26, 0x03	; 3
		
		*humidity = (float)(rawhumidity)/10.0;
     238:	b8 01       	movw	r22, r16
     23a:	80 e0       	ldi	r24, 0x00	; 0
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	0e 94 01 12 	call	0x2402	; 0x2402 <__floatunsisf>
     242:	20 e0       	ldi	r18, 0x00	; 0
     244:	30 e0       	ldi	r19, 0x00	; 0
     246:	40 e2       	ldi	r20, 0x20	; 32
     248:	51 e4       	ldi	r21, 0x41	; 65
     24a:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     24e:	f6 01       	movw	r30, r12
     250:	60 83       	st	Z, r22
     252:	71 83       	std	Z+1, r23	; 0x01
     254:	82 83       	std	Z+2, r24	; 0x02
     256:	93 83       	std	Z+3, r25	; 0x03
		
		return 0;
     258:	80 e0       	ldi	r24, 0x00	; 0
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	02 c0       	rjmp	.+4      	; 0x262 <GetEnvironment+0x172>
	DHT_PORT |= (1<<DHT_INPUTPIN); 
	DHT_DDR &= ~(1<<DHT_INPUTPIN); 
	
	_delay_us(40);

	if((DHT_PIN & (1<<DHT_INPUTPIN))) return -1;
     25e:	8f ef       	ldi	r24, 0xFF	; 255
     260:	9f ef       	ldi	r25, 0xFF	; 255
		
		return 0;
	}

	return -1;
     262:	2a 96       	adiw	r28, 0x0a	; 10
     264:	0f b6       	in	r0, 0x3f	; 63
     266:	f8 94       	cli
     268:	de bf       	out	0x3e, r29	; 62
     26a:	0f be       	out	0x3f, r0	; 63
     26c:	cd bf       	out	0x3d, r28	; 61
     26e:	df 91       	pop	r29
     270:	cf 91       	pop	r28
     272:	1f 91       	pop	r17
     274:	0f 91       	pop	r16
     276:	ff 90       	pop	r15
     278:	ef 90       	pop	r14
     27a:	df 90       	pop	r13
     27c:	cf 90       	pop	r12
     27e:	08 95       	ret
	{
		unsigned short rawhumidity = bits[0]<<8 | bits[1];
		unsigned short rawtemperature = bits[2]<<8 | bits[3];
		
		if (rawtemperature & 0x8000)
			*temperature = (float)((rawtemperature & 0x7FFF) / 10.0) * -1.0;
     280:	7f 77       	andi	r23, 0x7F	; 127
     282:	80 e0       	ldi	r24, 0x00	; 0
     284:	90 e0       	ldi	r25, 0x00	; 0
     286:	0e 94 01 12 	call	0x2402	; 0x2402 <__floatunsisf>
     28a:	20 e0       	ldi	r18, 0x00	; 0
     28c:	30 e0       	ldi	r19, 0x00	; 0
     28e:	40 e2       	ldi	r20, 0x20	; 32
     290:	51 e4       	ldi	r21, 0x41	; 65
     292:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     296:	dc 01       	movw	r26, r24
     298:	cb 01       	movw	r24, r22
     29a:	b0 58       	subi	r27, 0x80	; 128
     29c:	f7 01       	movw	r30, r14
     29e:	80 83       	st	Z, r24
     2a0:	91 83       	std	Z+1, r25	; 0x01
     2a2:	a2 83       	std	Z+2, r26	; 0x02
     2a4:	b3 83       	std	Z+3, r27	; 0x03
     2a6:	c8 cf       	rjmp	.-112    	; 0x238 <GetEnvironment+0x148>

000002a8 <Timer0.part.0>:
	Timer1(true);
	CurrentError = Off;
	DisplayMode = Current;
	DisplayTimeoutCount = DisplayTimeout;
	return true;
}
     2a8:	87 e0       	ldi	r24, 0x07	; 7
     2aa:	85 bd       	out	0x25, r24	; 37
     2ac:	ee e6       	ldi	r30, 0x6E	; 110
     2ae:	f0 e0       	ldi	r31, 0x00	; 0
     2b0:	80 81       	ld	r24, Z
     2b2:	81 60       	ori	r24, 0x01	; 1
     2b4:	80 83       	st	Z, r24
     2b6:	16 bc       	out	0x26, r1	; 38
     2b8:	08 95       	ret

000002ba <Timer1.part.1>:
     2ba:	87 e0       	ldi	r24, 0x07	; 7
     2bc:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
     2c0:	ef e6       	ldi	r30, 0x6F	; 111
     2c2:	f0 e0       	ldi	r31, 0x00	; 0
     2c4:	80 81       	ld	r24, Z
     2c6:	81 60       	ori	r24, 0x01	; 1
     2c8:	80 83       	st	Z, r24
     2ca:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
     2ce:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
     2d2:	08 95       	ret

000002d4 <SetDirection.part.5>:
     2d4:	fc 01       	movw	r30, r24
     2d6:	80 81       	ld	r24, Z
     2d8:	91 81       	ldd	r25, Z+1	; 0x01
     2da:	9c 01       	movw	r18, r24
     2dc:	97 fd       	sbrc	r25, 7
     2de:	20 c1       	rjmp	.+576    	; 0x520 <__EEPROM_REGION_LENGTH__+0x120>
     2e0:	40 91 9a 03 	lds	r20, 0x039A	; 0x80039a <Setpoint>
     2e4:	50 91 9b 03 	lds	r21, 0x039B	; 0x80039b <Setpoint+0x1>
     2e8:	42 17       	cp	r20, r18
     2ea:	53 07       	cpc	r21, r19
     2ec:	0c f4       	brge	.+2      	; 0x2f0 <SetDirection.part.5+0x1c>
     2ee:	84 c0       	rjmp	.+264    	; 0x3f8 <SetDirection.part.5+0x124>
     2f0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     2f4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     2f8:	84 36       	cpi	r24, 0x64	; 100
     2fa:	91 05       	cpc	r25, r1
     2fc:	09 f4       	brne	.+2      	; 0x300 <SetDirection.part.5+0x2c>
     2fe:	7b c0       	rjmp	.+246    	; 0x3f6 <SetDirection.part.5+0x122>
     300:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <overtimeCount.2462>
     304:	90 91 c9 01 	lds	r25, 0x01C9	; 0x8001c9 <overtimeCount.2462+0x1>
     308:	89 2b       	or	r24, r25
     30a:	21 f0       	breq	.+8      	; 0x314 <SetDirection.part.5+0x40>
     30c:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <overtimeCount.2462+0x1>
     310:	10 92 c8 01 	sts	0x01C8, r1	; 0x8001c8 <overtimeCount.2462>
     314:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <moveLackCount.2463>
     318:	90 91 c7 01 	lds	r25, 0x01C7	; 0x8001c7 <moveLackCount.2463+0x1>
     31c:	89 2b       	or	r24, r25
     31e:	21 f0       	breq	.+8      	; 0x328 <SetDirection.part.5+0x54>
     320:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <moveLackCount.2463+0x1>
     324:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <moveLackCount.2463>
     328:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     32c:	8f 7d       	andi	r24, 0xDF	; 223
     32e:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     332:	84 e6       	ldi	r24, 0x64	; 100
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     33a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     33e:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <stepCount.2460+0x1>
     342:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <stepCount.2460>
     346:	80 91 92 03 	lds	r24, 0x0392	; 0x800392 <PulsesInterval>
     34a:	90 91 93 03 	lds	r25, 0x0393	; 0x800393 <PulsesInterval+0x1>
     34e:	90 93 cb 01 	sts	0x01CB, r25	; 0x8001cb <stepsInterval.2461+0x1>
     352:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <stepsInterval.2461>
     356:	08 95       	ret
     358:	20 91 96 03 	lds	r18, 0x0396	; 0x800396 <HysteresisDown>
     35c:	30 91 97 03 	lds	r19, 0x0397	; 0x800397 <HysteresisDown+0x1>
     360:	28 17       	cp	r18, r24
     362:	39 07       	cpc	r19, r25
     364:	4c f4       	brge	.+18     	; 0x378 <SetDirection.part.5+0xa4>
     366:	97 ff       	sbrs	r25, 7
     368:	2c c0       	rjmp	.+88     	; 0x3c2 <SetDirection.part.5+0xee>
     36a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     36e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     372:	84 36       	cpi	r24, 0x64	; 100
     374:	91 05       	cpc	r25, r1
     376:	29 f1       	breq	.+74     	; 0x3c2 <SetDirection.part.5+0xee>
     378:	87 e8       	ldi	r24, 0x87	; 135
     37a:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     37e:	87 e8       	ldi	r24, 0x87	; 135
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     386:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     38a:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <OvertimeLimit>
     38e:	90 91 73 03 	lds	r25, 0x0373	; 0x800373 <OvertimeLimit+0x1>
     392:	89 2b       	or	r24, r25
     394:	49 f0       	breq	.+18     	; 0x3a8 <SetDirection.part.5+0xd4>
     396:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <overtimeCount.2462>
     39a:	90 91 c9 01 	lds	r25, 0x01C9	; 0x8001c9 <overtimeCount.2462+0x1>
     39e:	01 96       	adiw	r24, 0x01	; 1
     3a0:	90 93 c9 01 	sts	0x01C9, r25	; 0x8001c9 <overtimeCount.2462+0x1>
     3a4:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <overtimeCount.2462>
     3a8:	80 91 94 03 	lds	r24, 0x0394	; 0x800394 <PulseDuration>
     3ac:	90 91 95 03 	lds	r25, 0x0395	; 0x800395 <PulseDuration+0x1>
     3b0:	90 93 cd 01 	sts	0x01CD, r25	; 0x8001cd <stepCount.2460+0x1>
     3b4:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <stepCount.2460>
     3b8:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     3bc:	80 62       	ori	r24, 0x20	; 32
     3be:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     3c2:	20 91 c8 01 	lds	r18, 0x01C8	; 0x8001c8 <overtimeCount.2462>
     3c6:	30 91 c9 01 	lds	r19, 0x01C9	; 0x8001c9 <overtimeCount.2462+0x1>
     3ca:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <OvertimeLimit>
     3ce:	90 91 73 03 	lds	r25, 0x0373	; 0x800373 <OvertimeLimit+0x1>
     3d2:	82 17       	cp	r24, r18
     3d4:	93 07       	cpc	r25, r19
     3d6:	78 f4       	brcc	.+30     	; 0x3f6 <SetDirection.part.5+0x122>
     3d8:	85 e0       	ldi	r24, 0x05	; 5
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	90 93 68 03 	sts	0x0368, r25	; 0x800368 <DisplayMode+0x1>
     3e0:	80 93 67 03 	sts	0x0367, r24	; 0x800367 <DisplayMode>
     3e4:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <CurrentError+0x1>
     3e8:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <CurrentError>
     3ec:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <overtimeCount.2462+0x1>
     3f0:	10 92 c8 01 	sts	0x01C8, r1	; 0x8001c8 <overtimeCount.2462>
     3f4:	2a 9a       	sbi	0x05, 2	; 5
     3f6:	08 95       	ret
     3f8:	40 91 cc 01 	lds	r20, 0x01CC	; 0x8001cc <stepCount.2460>
     3fc:	50 91 cd 01 	lds	r21, 0x01CD	; 0x8001cd <stepCount.2460+0x1>
     400:	41 15       	cp	r20, r1
     402:	51 05       	cpc	r21, r1
     404:	b1 f0       	breq	.+44     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     406:	41 50       	subi	r20, 0x01	; 1
     408:	51 09       	sbc	r21, r1
     40a:	50 93 cd 01 	sts	0x01CD, r21	; 0x8001cd <stepCount.2460+0x1>
     40e:	40 93 cc 01 	sts	0x01CC, r20	; 0x8001cc <stepCount.2460>
     412:	45 2b       	or	r20, r21
     414:	81 f7       	brne	.-32     	; 0x3f6 <SetDirection.part.5+0x122>
     416:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     41a:	8f 7d       	andi	r24, 0xDF	; 223
     41c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     420:	80 91 92 03 	lds	r24, 0x0392	; 0x800392 <PulsesInterval>
     424:	90 91 93 03 	lds	r25, 0x0393	; 0x800393 <PulsesInterval+0x1>
     428:	90 93 cb 01 	sts	0x01CB, r25	; 0x8001cb <stepsInterval.2461+0x1>
     42c:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <stepsInterval.2461>
     430:	08 95       	ret
     432:	40 91 58 03 	lds	r20, 0x0358	; 0x800358 <CurrentError>
     436:	50 91 59 03 	lds	r21, 0x0359	; 0x800359 <CurrentError+0x1>
     43a:	41 50       	subi	r20, 0x01	; 1
     43c:	51 09       	sbc	r21, r1
     43e:	43 30       	cpi	r20, 0x03	; 3
     440:	51 05       	cpc	r21, r1
     442:	c8 f2       	brcs	.-78     	; 0x3f6 <SetDirection.part.5+0x122>
     444:	40 91 74 03 	lds	r20, 0x0374	; 0x800374 <MoveLackLimit>
     448:	50 91 75 03 	lds	r21, 0x0375	; 0x800375 <MoveLackLimit+0x1>
     44c:	41 15       	cp	r20, r1
     44e:	51 05       	cpc	r21, r1
     450:	09 f4       	brne	.+2      	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
     452:	73 c0       	rjmp	.+230    	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
     454:	60 91 98 03 	lds	r22, 0x0398	; 0x800398 <HysteresisUp>
     458:	70 91 99 03 	lds	r23, 0x0399	; 0x800399 <HysteresisUp+0x1>
     45c:	86 17       	cp	r24, r22
     45e:	97 07       	cpc	r25, r23
     460:	0c f4       	brge	.+2      	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
     462:	63 c0       	rjmp	.+198    	; 0x52a <__EEPROM_REGION_LENGTH__+0x12a>
     464:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     468:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     46c:	64 36       	cpi	r22, 0x64	; 100
     46e:	71 05       	cpc	r23, r1
     470:	09 f4       	brne	.+2      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
     472:	7d c0       	rjmp	.+250    	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
     474:	60 91 c4 01 	lds	r22, 0x01C4	; 0x8001c4 <lastDifference.2464>
     478:	70 91 c5 01 	lds	r23, 0x01C5	; 0x8001c5 <lastDifference.2464+0x1>
     47c:	62 1b       	sub	r22, r18
     47e:	73 0b       	sbc	r23, r19
     480:	6f 3f       	cpi	r22, 0xFF	; 255
     482:	ff ef       	ldi	r31, 0xFF	; 255
     484:	7f 07       	cpc	r23, r31
     486:	24 f0       	brlt	.+8      	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
     488:	62 30       	cpi	r22, 0x02	; 2
     48a:	71 05       	cpc	r23, r1
     48c:	0c f4       	brge	.+2      	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
     48e:	78 c0       	rjmp	.+240    	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
     490:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <moveLackCount.2463+0x1>
     494:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <moveLackCount.2463>
     498:	30 93 c5 01 	sts	0x01C5, r19	; 0x8001c5 <lastDifference.2464+0x1>
     49c:	20 93 c4 01 	sts	0x01C4, r18	; 0x8001c4 <lastDifference.2464>
     4a0:	20 91 94 03 	lds	r18, 0x0394	; 0x800394 <PulseDuration>
     4a4:	30 91 95 03 	lds	r19, 0x0395	; 0x800395 <PulseDuration+0x1>
     4a8:	23 2b       	or	r18, r19
     4aa:	09 f4       	brne	.+2      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
     4ac:	8a cf       	rjmp	.-236    	; 0x3c2 <SetDirection.part.5+0xee>
     4ae:	20 91 98 03 	lds	r18, 0x0398	; 0x800398 <HysteresisUp>
     4b2:	30 91 99 03 	lds	r19, 0x0399	; 0x800399 <HysteresisUp+0x1>
     4b6:	82 17       	cp	r24, r18
     4b8:	93 07       	cpc	r25, r19
     4ba:	64 f4       	brge	.+24     	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
     4bc:	18 16       	cp	r1, r24
     4be:	19 06       	cpc	r1, r25
     4c0:	0c f0       	brlt	.+2      	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
     4c2:	4a cf       	rjmp	.-364    	; 0x358 <SetDirection.part.5+0x84>
     4c4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4c8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     4cc:	24 36       	cpi	r18, 0x64	; 100
     4ce:	31 05       	cpc	r19, r1
     4d0:	09 f4       	brne	.+2      	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
     4d2:	42 cf       	rjmp	.-380    	; 0x358 <SetDirection.part.5+0x84>
     4d4:	8a ef       	ldi	r24, 0xFA	; 250
     4d6:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     4da:	8a ef       	ldi	r24, 0xFA	; 250
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     4e2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     4e6:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <OvertimeLimit>
     4ea:	90 91 73 03 	lds	r25, 0x0373	; 0x800373 <OvertimeLimit+0x1>
     4ee:	89 2b       	or	r24, r25
     4f0:	49 f0       	breq	.+18     	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
     4f2:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <overtimeCount.2462>
     4f6:	90 91 c9 01 	lds	r25, 0x01C9	; 0x8001c9 <overtimeCount.2462+0x1>
     4fa:	01 96       	adiw	r24, 0x01	; 1
     4fc:	90 93 c9 01 	sts	0x01C9, r25	; 0x8001c9 <overtimeCount.2462+0x1>
     500:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <overtimeCount.2462>
     504:	80 91 94 03 	lds	r24, 0x0394	; 0x800394 <PulseDuration>
     508:	90 91 95 03 	lds	r25, 0x0395	; 0x800395 <PulseDuration+0x1>
     50c:	90 93 cd 01 	sts	0x01CD, r25	; 0x8001cd <stepCount.2460+0x1>
     510:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <stepCount.2460>
     514:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     518:	80 62       	ori	r24, 0x20	; 32
     51a:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     51e:	08 95       	ret
     520:	22 27       	eor	r18, r18
     522:	33 27       	eor	r19, r19
     524:	28 1b       	sub	r18, r24
     526:	39 0b       	sbc	r19, r25
     528:	db ce       	rjmp	.-586    	; 0x2e0 <SetDirection.part.5+0xc>
     52a:	60 91 96 03 	lds	r22, 0x0396	; 0x800396 <HysteresisDown>
     52e:	70 91 97 03 	lds	r23, 0x0397	; 0x800397 <HysteresisDown+0x1>
     532:	68 17       	cp	r22, r24
     534:	79 07       	cpc	r23, r25
     536:	0c f0       	brlt	.+2      	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
     538:	95 cf       	rjmp	.-214    	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
     53a:	20 91 c6 01 	lds	r18, 0x01C6	; 0x8001c6 <moveLackCount.2463>
     53e:	30 91 c7 01 	lds	r19, 0x01C7	; 0x8001c7 <moveLackCount.2463+0x1>
     542:	42 17       	cp	r20, r18
     544:	53 07       	cpc	r21, r19
     546:	08 f0       	brcs	.+2      	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
     548:	ab cf       	rjmp	.-170    	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
     54a:	85 e0       	ldi	r24, 0x05	; 5
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	90 93 68 03 	sts	0x0368, r25	; 0x800368 <DisplayMode+0x1>
     552:	80 93 67 03 	sts	0x0367, r24	; 0x800367 <DisplayMode>
     556:	84 e0       	ldi	r24, 0x04	; 4
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <CurrentError+0x1>
     55e:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <CurrentError>
     562:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <moveLackCount.2463+0x1>
     566:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <moveLackCount.2463>
     56a:	2a 9a       	sbi	0x05, 2	; 5
     56c:	08 95       	ret
     56e:	30 93 c5 01 	sts	0x01C5, r19	; 0x8001c5 <lastDifference.2464+0x1>
     572:	20 93 c4 01 	sts	0x01C4, r18	; 0x8001c4 <lastDifference.2464>
     576:	20 91 c6 01 	lds	r18, 0x01C6	; 0x8001c6 <moveLackCount.2463>
     57a:	30 91 c7 01 	lds	r19, 0x01C7	; 0x8001c7 <moveLackCount.2463+0x1>
     57e:	e1 cf       	rjmp	.-62     	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
     580:	20 91 c6 01 	lds	r18, 0x01C6	; 0x8001c6 <moveLackCount.2463>
     584:	30 91 c7 01 	lds	r19, 0x01C7	; 0x8001c7 <moveLackCount.2463+0x1>
     588:	2f 5f       	subi	r18, 0xFF	; 255
     58a:	3f 4f       	sbci	r19, 0xFF	; 255
     58c:	30 93 c7 01 	sts	0x01C7, r19	; 0x8001c7 <moveLackCount.2463+0x1>
     590:	20 93 c6 01 	sts	0x01C6, r18	; 0x8001c6 <moveLackCount.2463>
     594:	d6 cf       	rjmp	.-84     	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>

00000596 <__vector_16>:
     596:	1f 92       	push	r1
     598:	0f 92       	push	r0
     59a:	0f b6       	in	r0, 0x3f	; 63
     59c:	0f 92       	push	r0
     59e:	11 24       	eor	r1, r1
     5a0:	8f 93       	push	r24
     5a2:	9f 93       	push	r25
     5a4:	80 91 70 03 	lds	r24, 0x0370	; 0x800370 <Timer0_OverflowCount>
     5a8:	90 91 71 03 	lds	r25, 0x0371	; 0x800371 <Timer0_OverflowCount+0x1>
     5ac:	01 96       	adiw	r24, 0x01	; 1
     5ae:	90 93 71 03 	sts	0x0371, r25	; 0x800371 <Timer0_OverflowCount+0x1>
     5b2:	80 93 70 03 	sts	0x0370, r24	; 0x800370 <Timer0_OverflowCount>
     5b6:	9f 91       	pop	r25
     5b8:	8f 91       	pop	r24
     5ba:	0f 90       	pop	r0
     5bc:	0f be       	out	0x3f, r0	; 63
     5be:	0f 90       	pop	r0
     5c0:	1f 90       	pop	r1
     5c2:	18 95       	reti

000005c4 <__vector_13>:
     5c4:	1f 92       	push	r1
     5c6:	0f 92       	push	r0
     5c8:	0f b6       	in	r0, 0x3f	; 63
     5ca:	0f 92       	push	r0
     5cc:	11 24       	eor	r1, r1
     5ce:	8f 93       	push	r24
     5d0:	9f 93       	push	r25
     5d2:	80 91 6e 03 	lds	r24, 0x036E	; 0x80036e <Timer1_OverflowCount>
     5d6:	90 91 6f 03 	lds	r25, 0x036F	; 0x80036f <Timer1_OverflowCount+0x1>
     5da:	01 96       	adiw	r24, 0x01	; 1
     5dc:	90 93 6f 03 	sts	0x036F, r25	; 0x80036f <Timer1_OverflowCount+0x1>
     5e0:	80 93 6e 03 	sts	0x036E, r24	; 0x80036e <Timer1_OverflowCount>
     5e4:	9f 91       	pop	r25
     5e6:	8f 91       	pop	r24
     5e8:	0f 90       	pop	r0
     5ea:	0f be       	out	0x3f, r0	; 63
     5ec:	0f 90       	pop	r0
     5ee:	1f 90       	pop	r1
     5f0:	18 95       	reti

000005f2 <__vector_9>:
     5f2:	1f 92       	push	r1
     5f4:	0f 92       	push	r0
     5f6:	0f b6       	in	r0, 0x3f	; 63
     5f8:	0f 92       	push	r0
     5fa:	11 24       	eor	r1, r1
     5fc:	2f 93       	push	r18
     5fe:	3f 93       	push	r19
     600:	4f 93       	push	r20
     602:	5f 93       	push	r21
     604:	6f 93       	push	r22
     606:	7f 93       	push	r23
     608:	8f 93       	push	r24
     60a:	9f 93       	push	r25
     60c:	af 93       	push	r26
     60e:	bf 93       	push	r27
     610:	ef 93       	push	r30
     612:	40 91 6c 03 	lds	r20, 0x036C	; 0x80036c <Timer2_OverflowCount>
     616:	50 91 6d 03 	lds	r21, 0x036D	; 0x80036d <Timer2_OverflowCount+0x1>
     61a:	4f 5f       	subi	r20, 0xFF	; 255
     61c:	5f 4f       	sbci	r21, 0xFF	; 255
     61e:	50 93 6d 03 	sts	0x036D, r21	; 0x80036d <Timer2_OverflowCount+0x1>
     622:	40 93 6c 03 	sts	0x036C, r20	; 0x80036c <Timer2_OverflowCount>
     626:	e1 e0       	ldi	r30, 0x01	; 1
     628:	e0 93 69 03 	sts	0x0369, r30	; 0x800369 <HandleAfter8ms>
     62c:	9a 01       	movw	r18, r20
     62e:	af ea       	ldi	r26, 0xAF	; 175
     630:	b7 e4       	ldi	r27, 0x47	; 71
     632:	0e 94 90 13 	call	0x2720	; 0x2720 <__umulhisi3>
     636:	28 1b       	sub	r18, r24
     638:	39 0b       	sbc	r19, r25
     63a:	36 95       	lsr	r19
     63c:	27 95       	ror	r18
     63e:	82 0f       	add	r24, r18
     640:	93 1f       	adc	r25, r19
     642:	92 95       	swap	r25
     644:	82 95       	swap	r24
     646:	8f 70       	andi	r24, 0x0F	; 15
     648:	89 27       	eor	r24, r25
     64a:	9f 70       	andi	r25, 0x0F	; 15
     64c:	89 27       	eor	r24, r25
     64e:	69 e1       	ldi	r22, 0x19	; 25
     650:	68 9f       	mul	r22, r24
     652:	90 01       	movw	r18, r0
     654:	69 9f       	mul	r22, r25
     656:	30 0d       	add	r19, r0
     658:	11 24       	eor	r1, r1
     65a:	42 17       	cp	r20, r18
     65c:	53 07       	cpc	r21, r19
     65e:	11 f4       	brne	.+4      	; 0x664 <__vector_9+0x72>
     660:	e0 93 6a 03 	sts	0x036A, r30	; 0x80036a <HandleAfter200ms>
     664:	4d 37       	cpi	r20, 0x7D	; 125
     666:	51 05       	cpc	r21, r1
     668:	38 f0       	brcs	.+14     	; 0x678 <__vector_9+0x86>
     66a:	81 e0       	ldi	r24, 0x01	; 1
     66c:	80 93 6b 03 	sts	0x036B, r24	; 0x80036b <HandleAfterSecond>
     670:	10 92 6d 03 	sts	0x036D, r1	; 0x80036d <Timer2_OverflowCount+0x1>
     674:	10 92 6c 03 	sts	0x036C, r1	; 0x80036c <Timer2_OverflowCount>
     678:	83 e8       	ldi	r24, 0x83	; 131
     67a:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
     67e:	ef 91       	pop	r30
     680:	bf 91       	pop	r27
     682:	af 91       	pop	r26
     684:	9f 91       	pop	r25
     686:	8f 91       	pop	r24
     688:	7f 91       	pop	r23
     68a:	6f 91       	pop	r22
     68c:	5f 91       	pop	r21
     68e:	4f 91       	pop	r20
     690:	3f 91       	pop	r19
     692:	2f 91       	pop	r18
     694:	0f 90       	pop	r0
     696:	0f be       	out	0x3f, r0	; 63
     698:	0f 90       	pop	r0
     69a:	1f 90       	pop	r1
     69c:	18 95       	reti

0000069e <__vector_21>:
     69e:	1f 92       	push	r1
     6a0:	0f 92       	push	r0
     6a2:	0f b6       	in	r0, 0x3f	; 63
     6a4:	0f 92       	push	r0
     6a6:	11 24       	eor	r1, r1
     6a8:	8f 93       	push	r24
     6aa:	9f 93       	push	r25
     6ac:	ef 93       	push	r30
     6ae:	ff 93       	push	r31
     6b0:	ea e7       	ldi	r30, 0x7A	; 122
     6b2:	f0 e0       	ldi	r31, 0x00	; 0
     6b4:	80 81       	ld	r24, Z
     6b6:	80 83       	st	Z, r24
     6b8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     6bc:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     6c0:	e3 e5       	ldi	r30, 0x53	; 83
     6c2:	f3 e0       	ldi	r31, 0x03	; 3
     6c4:	91 83       	std	Z+1, r25	; 0x01
     6c6:	80 83       	st	Z, r24
     6c8:	81 e0       	ldi	r24, 0x01	; 1
     6ca:	82 83       	std	Z+2, r24	; 0x02
     6cc:	ff 91       	pop	r31
     6ce:	ef 91       	pop	r30
     6d0:	9f 91       	pop	r25
     6d2:	8f 91       	pop	r24
     6d4:	0f 90       	pop	r0
     6d6:	0f be       	out	0x3f, r0	; 63
     6d8:	0f 90       	pop	r0
     6da:	1f 90       	pop	r1
     6dc:	18 95       	reti

000006de <__vector_18>:
     6de:	1f 92       	push	r1
     6e0:	0f 92       	push	r0
     6e2:	0f b6       	in	r0, 0x3f	; 63
     6e4:	0f 92       	push	r0
     6e6:	11 24       	eor	r1, r1
     6e8:	2f 93       	push	r18
     6ea:	3f 93       	push	r19
     6ec:	4f 93       	push	r20
     6ee:	8f 93       	push	r24
     6f0:	9f 93       	push	r25
     6f2:	ef 93       	push	r30
     6f4:	ff 93       	push	r31
     6f6:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <Rx+0xd>
     6fa:	88 23       	and	r24, r24
     6fc:	81 f0       	breq	.+32     	; 0x71e <__vector_18+0x40>
     6fe:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     702:	84 32       	cpi	r24, 0x24	; 36
     704:	a1 f1       	breq	.+104    	; 0x76e <__vector_18+0x90>
     706:	ff 91       	pop	r31
     708:	ef 91       	pop	r30
     70a:	9f 91       	pop	r25
     70c:	8f 91       	pop	r24
     70e:	4f 91       	pop	r20
     710:	3f 91       	pop	r19
     712:	2f 91       	pop	r18
     714:	0f 90       	pop	r0
     716:	0f be       	out	0x3f, r0	; 63
     718:	0f 90       	pop	r0
     71a:	1f 90       	pop	r1
     71c:	18 95       	reti
     71e:	20 91 4c 03 	lds	r18, 0x034C	; 0x80034c <Rx+0x8>
     722:	30 91 4d 03 	lds	r19, 0x034D	; 0x80034d <Rx+0x9>
     726:	c9 01       	movw	r24, r18
     728:	01 96       	adiw	r24, 0x01	; 1
     72a:	90 93 4d 03 	sts	0x034D, r25	; 0x80034d <Rx+0x9>
     72e:	80 93 4c 03 	sts	0x034C, r24	; 0x80034c <Rx+0x8>
     732:	40 91 c6 00 	lds	r20, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     736:	f9 01       	movw	r30, r18
     738:	ec 5b       	subi	r30, 0xBC	; 188
     73a:	fc 4f       	sbci	r31, 0xFC	; 252
     73c:	40 83       	st	Z, r20
     73e:	89 30       	cpi	r24, 0x09	; 9
     740:	91 05       	cpc	r25, r1
     742:	80 f4       	brcc	.+32     	; 0x764 <__vector_18+0x86>
     744:	fc 01       	movw	r30, r24
     746:	ec 5b       	subi	r30, 0xBC	; 188
     748:	fc 4f       	sbci	r31, 0xFC	; 252
     74a:	82 91       	ld	r24, -Z
     74c:	84 32       	cpi	r24, 0x24	; 36
     74e:	d9 f6       	brne	.-74     	; 0x706 <__vector_18+0x28>
     750:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     754:	8f 77       	andi	r24, 0x7F	; 127
     756:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     75a:	10 82       	st	Z, r1
     75c:	81 e0       	ldi	r24, 0x01	; 1
     75e:	80 93 50 03 	sts	0x0350, r24	; 0x800350 <Rx+0xc>
     762:	d1 cf       	rjmp	.-94     	; 0x706 <__vector_18+0x28>
     764:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <Rx+0x9>
     768:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <Rx+0x8>
     76c:	cc cf       	rjmp	.-104    	; 0x706 <__vector_18+0x28>
     76e:	81 e0       	ldi	r24, 0x01	; 1
     770:	80 93 52 03 	sts	0x0352, r24	; 0x800352 <Rx+0xe>
     774:	10 92 4f 03 	sts	0x034F, r1	; 0x80034f <Rx+0xb>
     778:	10 92 4e 03 	sts	0x034E, r1	; 0x80034e <Rx+0xa>
     77c:	c4 cf       	rjmp	.-120    	; 0x706 <__vector_18+0x28>

0000077e <UploadMemory>:
     77e:	cf 92       	push	r12
     780:	df 92       	push	r13
     782:	ef 92       	push	r14
     784:	ff 92       	push	r15
     786:	0f 93       	push	r16
     788:	1f 93       	push	r17
     78a:	cf 93       	push	r28
     78c:	df 93       	push	r29
     78e:	cd b7       	in	r28, 0x3d	; 61
     790:	de b7       	in	r29, 0x3e	; 62
     792:	60 97       	sbiw	r28, 0x10	; 16
     794:	0f b6       	in	r0, 0x3f	; 63
     796:	f8 94       	cli
     798:	de bf       	out	0x3e, r29	; 62
     79a:	0f be       	out	0x3f, r0	; 63
     79c:	cd bf       	out	0x3d, r28	; 61
     79e:	ce 01       	movw	r24, r28
     7a0:	01 96       	adiw	r24, 0x01	; 1
     7a2:	7c 01       	movw	r14, r24
     7a4:	80 e1       	ldi	r24, 0x10	; 16
     7a6:	f7 01       	movw	r30, r14
     7a8:	11 92       	st	Z+, r1
     7aa:	8a 95       	dec	r24
     7ac:	e9 f7       	brne	.-6      	; 0x7a8 <UploadMemory+0x2a>
     7ae:	8b e5       	ldi	r24, 0x5B	; 91
     7b0:	91 e0       	ldi	r25, 0x01	; 1
     7b2:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     7b6:	f8 94       	cli
     7b8:	0a e2       	ldi	r16, 0x2A	; 42
     7ba:	11 e0       	ldi	r17, 0x01	; 1
     7bc:	88 e5       	ldi	r24, 0x58	; 88
     7be:	c8 2e       	mov	r12, r24
     7c0:	81 e0       	ldi	r24, 0x01	; 1
     7c2:	d8 2e       	mov	r13, r24
     7c4:	f8 01       	movw	r30, r16
     7c6:	81 91       	ld	r24, Z+
     7c8:	91 91       	ld	r25, Z+
     7ca:	8f 01       	movw	r16, r30
     7cc:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     7d0:	9f 93       	push	r25
     7d2:	8f 93       	push	r24
     7d4:	df 92       	push	r13
     7d6:	cf 92       	push	r12
     7d8:	ff 92       	push	r15
     7da:	ef 92       	push	r14
     7dc:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     7e0:	c7 01       	movw	r24, r14
     7e2:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     7e6:	0f 90       	pop	r0
     7e8:	0f 90       	pop	r0
     7ea:	0f 90       	pop	r0
     7ec:	0f 90       	pop	r0
     7ee:	0f 90       	pop	r0
     7f0:	0f 90       	pop	r0
     7f2:	f1 e0       	ldi	r31, 0x01	; 1
     7f4:	00 35       	cpi	r16, 0x50	; 80
     7f6:	1f 07       	cpc	r17, r31
     7f8:	29 f7       	brne	.-54     	; 0x7c4 <UploadMemory+0x46>
     7fa:	78 94       	sei
     7fc:	60 96       	adiw	r28, 0x10	; 16
     7fe:	0f b6       	in	r0, 0x3f	; 63
     800:	f8 94       	cli
     802:	de bf       	out	0x3e, r29	; 62
     804:	0f be       	out	0x3f, r0	; 63
     806:	cd bf       	out	0x3d, r28	; 61
     808:	df 91       	pop	r29
     80a:	cf 91       	pop	r28
     80c:	1f 91       	pop	r17
     80e:	0f 91       	pop	r16
     810:	ff 90       	pop	r15
     812:	ef 90       	pop	r14
     814:	df 90       	pop	r13
     816:	cf 90       	pop	r12
     818:	08 95       	ret

0000081a <UploadVariables>:
     81a:	cf 92       	push	r12
     81c:	df 92       	push	r13
     81e:	ef 92       	push	r14
     820:	ff 92       	push	r15
     822:	0f 93       	push	r16
     824:	1f 93       	push	r17
     826:	cf 93       	push	r28
     828:	df 93       	push	r29
     82a:	cd b7       	in	r28, 0x3d	; 61
     82c:	de b7       	in	r29, 0x3e	; 62
     82e:	60 97       	sbiw	r28, 0x10	; 16
     830:	0f b6       	in	r0, 0x3f	; 63
     832:	f8 94       	cli
     834:	de bf       	out	0x3e, r29	; 62
     836:	0f be       	out	0x3f, r0	; 63
     838:	cd bf       	out	0x3d, r28	; 61
     83a:	8e 01       	movw	r16, r28
     83c:	0f 5f       	subi	r16, 0xFF	; 255
     83e:	1f 4f       	sbci	r17, 0xFF	; 255
     840:	80 e1       	ldi	r24, 0x10	; 16
     842:	f8 01       	movw	r30, r16
     844:	11 92       	st	Z+, r1
     846:	8a 95       	dec	r24
     848:	e9 f7       	brne	.-6      	; 0x844 <UploadVariables+0x2a>
     84a:	80 91 9d 03 	lds	r24, 0x039D	; 0x80039d <Overfeed+0x1>
     84e:	8f 93       	push	r24
     850:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <Overfeed>
     854:	8f 93       	push	r24
     856:	86 e5       	ldi	r24, 0x56	; 86
     858:	91 e0       	ldi	r25, 0x01	; 1
     85a:	9f 93       	push	r25
     85c:	8f 93       	push	r24
     85e:	1f 93       	push	r17
     860:	0f 93       	push	r16
     862:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     866:	c8 01       	movw	r24, r16
     868:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     86c:	80 91 9b 03 	lds	r24, 0x039B	; 0x80039b <Setpoint+0x1>
     870:	8f 93       	push	r24
     872:	80 91 9a 03 	lds	r24, 0x039A	; 0x80039a <Setpoint>
     876:	8f 93       	push	r24
     878:	88 e5       	ldi	r24, 0x58	; 88
     87a:	e8 2e       	mov	r14, r24
     87c:	81 e0       	ldi	r24, 0x01	; 1
     87e:	f8 2e       	mov	r15, r24
     880:	ff 92       	push	r15
     882:	ef 92       	push	r14
     884:	1f 93       	push	r17
     886:	0f 93       	push	r16
     888:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     88c:	c8 01       	movw	r24, r16
     88e:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     892:	80 91 99 03 	lds	r24, 0x0399	; 0x800399 <HysteresisUp+0x1>
     896:	8f 93       	push	r24
     898:	80 91 98 03 	lds	r24, 0x0398	; 0x800398 <HysteresisUp>
     89c:	8f 93       	push	r24
     89e:	ff 92       	push	r15
     8a0:	ef 92       	push	r14
     8a2:	1f 93       	push	r17
     8a4:	0f 93       	push	r16
     8a6:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     8aa:	c8 01       	movw	r24, r16
     8ac:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     8b0:	80 91 97 03 	lds	r24, 0x0397	; 0x800397 <HysteresisDown+0x1>
     8b4:	8f 93       	push	r24
     8b6:	80 91 96 03 	lds	r24, 0x0396	; 0x800396 <HysteresisDown>
     8ba:	8f 93       	push	r24
     8bc:	ff 92       	push	r15
     8be:	ef 92       	push	r14
     8c0:	1f 93       	push	r17
     8c2:	0f 93       	push	r16
     8c4:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     8c8:	c8 01       	movw	r24, r16
     8ca:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     8ce:	80 91 95 03 	lds	r24, 0x0395	; 0x800395 <PulseDuration+0x1>
     8d2:	8f 93       	push	r24
     8d4:	80 91 94 03 	lds	r24, 0x0394	; 0x800394 <PulseDuration>
     8d8:	8f 93       	push	r24
     8da:	ff 92       	push	r15
     8dc:	ef 92       	push	r14
     8de:	1f 93       	push	r17
     8e0:	0f 93       	push	r16
     8e2:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     8e6:	c8 01       	movw	r24, r16
     8e8:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     8ec:	80 91 93 03 	lds	r24, 0x0393	; 0x800393 <PulsesInterval+0x1>
     8f0:	8f 93       	push	r24
     8f2:	80 91 92 03 	lds	r24, 0x0392	; 0x800392 <PulsesInterval>
     8f6:	8f 93       	push	r24
     8f8:	ff 92       	push	r15
     8fa:	ef 92       	push	r14
     8fc:	1f 93       	push	r17
     8fe:	0f 93       	push	r16
     900:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     904:	0f b6       	in	r0, 0x3f	; 63
     906:	f8 94       	cli
     908:	de bf       	out	0x3e, r29	; 62
     90a:	0f be       	out	0x3f, r0	; 63
     90c:	cd bf       	out	0x3d, r28	; 61
     90e:	c8 01       	movw	r24, r16
     910:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     914:	80 91 91 03 	lds	r24, 0x0391	; 0x800391 <StartDelay+0x1>
     918:	8f 93       	push	r24
     91a:	80 91 90 03 	lds	r24, 0x0390	; 0x800390 <StartDelay>
     91e:	8f 93       	push	r24
     920:	ff 92       	push	r15
     922:	ef 92       	push	r14
     924:	1f 93       	push	r17
     926:	0f 93       	push	r16
     928:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     92c:	c8 01       	movw	r24, r16
     92e:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     932:	80 91 8f 03 	lds	r24, 0x038F	; 0x80038f <FactorA+0x3>
     936:	8f 93       	push	r24
     938:	80 91 8e 03 	lds	r24, 0x038E	; 0x80038e <FactorA+0x2>
     93c:	8f 93       	push	r24
     93e:	80 91 8d 03 	lds	r24, 0x038D	; 0x80038d <FactorA+0x1>
     942:	8f 93       	push	r24
     944:	80 91 8c 03 	lds	r24, 0x038C	; 0x80038c <FactorA>
     948:	8f 93       	push	r24
     94a:	9e e5       	ldi	r25, 0x5E	; 94
     94c:	c9 2e       	mov	r12, r25
     94e:	91 e0       	ldi	r25, 0x01	; 1
     950:	d9 2e       	mov	r13, r25
     952:	df 92       	push	r13
     954:	cf 92       	push	r12
     956:	1f 93       	push	r17
     958:	0f 93       	push	r16
     95a:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     95e:	c8 01       	movw	r24, r16
     960:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     964:	80 91 8b 03 	lds	r24, 0x038B	; 0x80038b <FactorB+0x3>
     968:	8f 93       	push	r24
     96a:	80 91 8a 03 	lds	r24, 0x038A	; 0x80038a <FactorB+0x2>
     96e:	8f 93       	push	r24
     970:	80 91 89 03 	lds	r24, 0x0389	; 0x800389 <FactorB+0x1>
     974:	8f 93       	push	r24
     976:	80 91 88 03 	lds	r24, 0x0388	; 0x800388 <FactorB>
     97a:	8f 93       	push	r24
     97c:	df 92       	push	r13
     97e:	cf 92       	push	r12
     980:	1f 93       	push	r17
     982:	0f 93       	push	r16
     984:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     988:	c8 01       	movw	r24, r16
     98a:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     98e:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <DividerA+0x1>
     992:	8f 93       	push	r24
     994:	80 91 86 03 	lds	r24, 0x0386	; 0x800386 <DividerA>
     998:	8f 93       	push	r24
     99a:	ff 92       	push	r15
     99c:	ef 92       	push	r14
     99e:	1f 93       	push	r17
     9a0:	0f 93       	push	r16
     9a2:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     9a6:	c8 01       	movw	r24, r16
     9a8:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     9ac:	80 91 85 03 	lds	r24, 0x0385	; 0x800385 <DividerB+0x1>
     9b0:	8f 93       	push	r24
     9b2:	80 91 84 03 	lds	r24, 0x0384	; 0x800384 <DividerB>
     9b6:	8f 93       	push	r24
     9b8:	ff 92       	push	r15
     9ba:	ef 92       	push	r14
     9bc:	1f 93       	push	r17
     9be:	0f 93       	push	r16
     9c0:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     9c4:	0f b6       	in	r0, 0x3f	; 63
     9c6:	f8 94       	cli
     9c8:	de bf       	out	0x3e, r29	; 62
     9ca:	0f be       	out	0x3f, r0	; 63
     9cc:	cd bf       	out	0x3d, r28	; 61
     9ce:	c8 01       	movw	r24, r16
     9d0:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     9d4:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <FactorMeasure+0x1>
     9d8:	8f 93       	push	r24
     9da:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <FactorMeasure>
     9de:	8f 93       	push	r24
     9e0:	ff 92       	push	r15
     9e2:	ef 92       	push	r14
     9e4:	1f 93       	push	r17
     9e6:	0f 93       	push	r16
     9e8:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     9ec:	c8 01       	movw	r24, r16
     9ee:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     9f2:	80 91 81 03 	lds	r24, 0x0381	; 0x800381 <FactorEstimate+0x1>
     9f6:	8f 93       	push	r24
     9f8:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <FactorEstimate>
     9fc:	8f 93       	push	r24
     9fe:	ff 92       	push	r15
     a00:	ef 92       	push	r14
     a02:	1f 93       	push	r17
     a04:	0f 93       	push	r16
     a06:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     a0a:	c8 01       	movw	r24, r16
     a0c:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     a10:	80 91 7f 03 	lds	r24, 0x037F	; 0x80037f <FactorSpeed+0x3>
     a14:	8f 93       	push	r24
     a16:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <FactorSpeed+0x2>
     a1a:	8f 93       	push	r24
     a1c:	80 91 7d 03 	lds	r24, 0x037D	; 0x80037d <FactorSpeed+0x1>
     a20:	8f 93       	push	r24
     a22:	80 91 7c 03 	lds	r24, 0x037C	; 0x80037c <FactorSpeed>
     a26:	8f 93       	push	r24
     a28:	df 92       	push	r13
     a2a:	cf 92       	push	r12
     a2c:	1f 93       	push	r17
     a2e:	0f 93       	push	r16
     a30:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     a34:	c8 01       	movw	r24, r16
     a36:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     a3a:	80 91 7b 03 	lds	r24, 0x037B	; 0x80037b <DisplayTimeout+0x1>
     a3e:	8f 93       	push	r24
     a40:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <DisplayTimeout>
     a44:	8f 93       	push	r24
     a46:	ff 92       	push	r15
     a48:	ef 92       	push	r14
     a4a:	1f 93       	push	r17
     a4c:	0f 93       	push	r16
     a4e:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     a52:	c8 01       	movw	r24, r16
     a54:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     a58:	80 91 79 03 	lds	r24, 0x0379	; 0x800379 <IsTransmit+0x1>
     a5c:	8f 93       	push	r24
     a5e:	80 91 78 03 	lds	r24, 0x0378	; 0x800378 <IsTransmit>
     a62:	8f 93       	push	r24
     a64:	ff 92       	push	r15
     a66:	ef 92       	push	r14
     a68:	1f 93       	push	r17
     a6a:	0f 93       	push	r16
     a6c:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     a70:	0f b6       	in	r0, 0x3f	; 63
     a72:	f8 94       	cli
     a74:	de bf       	out	0x3e, r29	; 62
     a76:	0f be       	out	0x3f, r0	; 63
     a78:	cd bf       	out	0x3d, r28	; 61
     a7a:	c8 01       	movw	r24, r16
     a7c:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     a80:	80 91 77 03 	lds	r24, 0x0377	; 0x800377 <MeasuresLimit+0x1>
     a84:	8f 93       	push	r24
     a86:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <MeasuresLimit>
     a8a:	8f 93       	push	r24
     a8c:	ff 92       	push	r15
     a8e:	ef 92       	push	r14
     a90:	1f 93       	push	r17
     a92:	0f 93       	push	r16
     a94:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     a98:	c8 01       	movw	r24, r16
     a9a:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     a9e:	80 91 75 03 	lds	r24, 0x0375	; 0x800375 <MoveLackLimit+0x1>
     aa2:	8f 93       	push	r24
     aa4:	80 91 74 03 	lds	r24, 0x0374	; 0x800374 <MoveLackLimit>
     aa8:	8f 93       	push	r24
     aaa:	ff 92       	push	r15
     aac:	ef 92       	push	r14
     aae:	1f 93       	push	r17
     ab0:	0f 93       	push	r16
     ab2:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     ab6:	c8 01       	movw	r24, r16
     ab8:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     abc:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <OvertimeLimit+0x1>
     ac0:	8f 93       	push	r24
     ac2:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <OvertimeLimit>
     ac6:	8f 93       	push	r24
     ac8:	ff 92       	push	r15
     aca:	ef 92       	push	r14
     acc:	1f 93       	push	r17
     ace:	0f 93       	push	r16
     ad0:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     ad4:	c8 01       	movw	r24, r16
     ad6:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     ada:	0f b6       	in	r0, 0x3f	; 63
     adc:	f8 94       	cli
     ade:	de bf       	out	0x3e, r29	; 62
     ae0:	0f be       	out	0x3f, r0	; 63
     ae2:	cd bf       	out	0x3d, r28	; 61
     ae4:	60 96       	adiw	r28, 0x10	; 16
     ae6:	0f b6       	in	r0, 0x3f	; 63
     ae8:	f8 94       	cli
     aea:	de bf       	out	0x3e, r29	; 62
     aec:	0f be       	out	0x3f, r0	; 63
     aee:	cd bf       	out	0x3d, r28	; 61
     af0:	df 91       	pop	r29
     af2:	cf 91       	pop	r28
     af4:	1f 91       	pop	r17
     af6:	0f 91       	pop	r16
     af8:	ff 90       	pop	r15
     afa:	ef 90       	pop	r14
     afc:	df 90       	pop	r13
     afe:	cf 90       	pop	r12
     b00:	08 95       	ret

00000b02 <SetDefaultSettings>:
     b02:	0f 93       	push	r16
     b04:	1f 93       	push	r17
     b06:	cf 93       	push	r28
     b08:	df 93       	push	r29
     b0a:	f8 94       	cli
     b0c:	c4 e0       	ldi	r28, 0x04	; 4
     b0e:	d1 e0       	ldi	r29, 0x01	; 1
     b10:	0a e2       	ldi	r16, 0x2A	; 42
     b12:	11 e0       	ldi	r17, 0x01	; 1
     b14:	69 91       	ld	r22, Y+
     b16:	79 91       	ld	r23, Y+
     b18:	f8 01       	movw	r30, r16
     b1a:	81 91       	ld	r24, Z+
     b1c:	91 91       	ld	r25, Z+
     b1e:	8f 01       	movw	r16, r30
     b20:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <eeprom_update_word>
     b24:	f1 e0       	ldi	r31, 0x01	; 1
     b26:	ca 32       	cpi	r28, 0x2A	; 42
     b28:	df 07       	cpc	r29, r31
     b2a:	a1 f7       	brne	.-24     	; 0xb14 <SetDefaultSettings+0x12>
     b2c:	78 94       	sei
     b2e:	df 91       	pop	r29
     b30:	cf 91       	pop	r28
     b32:	1f 91       	pop	r17
     b34:	0f 91       	pop	r16
     b36:	08 95       	ret

00000b38 <LoadSettings>:
     b38:	f8 94       	cli
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	90 e0       	ldi	r25, 0x00	; 0
     b3e:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     b42:	90 93 9d 03 	sts	0x039D, r25	; 0x80039d <Overfeed+0x1>
     b46:	80 93 9c 03 	sts	0x039C, r24	; 0x80039c <Overfeed>
     b4a:	82 e0       	ldi	r24, 0x02	; 2
     b4c:	90 e0       	ldi	r25, 0x00	; 0
     b4e:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     b52:	90 93 9b 03 	sts	0x039B, r25	; 0x80039b <Setpoint+0x1>
     b56:	80 93 9a 03 	sts	0x039A, r24	; 0x80039a <Setpoint>
     b5a:	84 e0       	ldi	r24, 0x04	; 4
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     b62:	90 93 99 03 	sts	0x0399, r25	; 0x800399 <HysteresisUp+0x1>
     b66:	80 93 98 03 	sts	0x0398, r24	; 0x800398 <HysteresisUp>
     b6a:	86 e0       	ldi	r24, 0x06	; 6
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     b72:	90 93 97 03 	sts	0x0397, r25	; 0x800397 <HysteresisDown+0x1>
     b76:	80 93 96 03 	sts	0x0396, r24	; 0x800396 <HysteresisDown>
     b7a:	88 e0       	ldi	r24, 0x08	; 8
     b7c:	90 e0       	ldi	r25, 0x00	; 0
     b7e:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     b82:	90 93 95 03 	sts	0x0395, r25	; 0x800395 <PulseDuration+0x1>
     b86:	80 93 94 03 	sts	0x0394, r24	; 0x800394 <PulseDuration>
     b8a:	8a e0       	ldi	r24, 0x0A	; 10
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     b92:	90 93 93 03 	sts	0x0393, r25	; 0x800393 <PulsesInterval+0x1>
     b96:	80 93 92 03 	sts	0x0392, r24	; 0x800392 <PulsesInterval>
     b9a:	8c e0       	ldi	r24, 0x0C	; 12
     b9c:	90 e0       	ldi	r25, 0x00	; 0
     b9e:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     ba2:	90 93 91 03 	sts	0x0391, r25	; 0x800391 <StartDelay+0x1>
     ba6:	80 93 90 03 	sts	0x0390, r24	; 0x800390 <StartDelay>
     baa:	8e e0       	ldi	r24, 0x0E	; 14
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     bb2:	bc 01       	movw	r22, r24
     bb4:	80 e0       	ldi	r24, 0x00	; 0
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	0e 94 01 12 	call	0x2402	; 0x2402 <__floatunsisf>
     bbc:	20 e0       	ldi	r18, 0x00	; 0
     bbe:	30 e0       	ldi	r19, 0x00	; 0
     bc0:	4a e7       	ldi	r20, 0x7A	; 122
     bc2:	54 e4       	ldi	r21, 0x44	; 68
     bc4:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     bc8:	9b 01       	movw	r18, r22
     bca:	ac 01       	movw	r20, r24
     bcc:	60 e0       	ldi	r22, 0x00	; 0
     bce:	70 e0       	ldi	r23, 0x00	; 0
     bd0:	80 e8       	ldi	r24, 0x80	; 128
     bd2:	9f e3       	ldi	r25, 0x3F	; 63
     bd4:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <__subsf3>
     bd8:	60 93 8c 03 	sts	0x038C, r22	; 0x80038c <FactorA>
     bdc:	70 93 8d 03 	sts	0x038D, r23	; 0x80038d <FactorA+0x1>
     be0:	80 93 8e 03 	sts	0x038E, r24	; 0x80038e <FactorA+0x2>
     be4:	90 93 8f 03 	sts	0x038F, r25	; 0x80038f <FactorA+0x3>
     be8:	80 e1       	ldi	r24, 0x10	; 16
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     bf0:	bc 01       	movw	r22, r24
     bf2:	80 e0       	ldi	r24, 0x00	; 0
     bf4:	90 e0       	ldi	r25, 0x00	; 0
     bf6:	0e 94 01 12 	call	0x2402	; 0x2402 <__floatunsisf>
     bfa:	20 e0       	ldi	r18, 0x00	; 0
     bfc:	30 e0       	ldi	r19, 0x00	; 0
     bfe:	4a e7       	ldi	r20, 0x7A	; 122
     c00:	54 e4       	ldi	r21, 0x44	; 68
     c02:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     c06:	9b 01       	movw	r18, r22
     c08:	ac 01       	movw	r20, r24
     c0a:	60 e0       	ldi	r22, 0x00	; 0
     c0c:	70 e0       	ldi	r23, 0x00	; 0
     c0e:	80 e8       	ldi	r24, 0x80	; 128
     c10:	9f e3       	ldi	r25, 0x3F	; 63
     c12:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <__subsf3>
     c16:	60 93 88 03 	sts	0x0388, r22	; 0x800388 <FactorB>
     c1a:	70 93 89 03 	sts	0x0389, r23	; 0x800389 <FactorB+0x1>
     c1e:	80 93 8a 03 	sts	0x038A, r24	; 0x80038a <FactorB+0x2>
     c22:	90 93 8b 03 	sts	0x038B, r25	; 0x80038b <FactorB+0x3>
     c26:	82 e1       	ldi	r24, 0x12	; 18
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     c2e:	90 93 87 03 	sts	0x0387, r25	; 0x800387 <DividerA+0x1>
     c32:	80 93 86 03 	sts	0x0386, r24	; 0x800386 <DividerA>
     c36:	84 e1       	ldi	r24, 0x14	; 20
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     c3e:	90 93 85 03 	sts	0x0385, r25	; 0x800385 <DividerB+0x1>
     c42:	80 93 84 03 	sts	0x0384, r24	; 0x800384 <DividerB>
     c46:	86 e1       	ldi	r24, 0x16	; 22
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     c4e:	90 93 83 03 	sts	0x0383, r25	; 0x800383 <FactorMeasure+0x1>
     c52:	80 93 82 03 	sts	0x0382, r24	; 0x800382 <FactorMeasure>
     c56:	88 e1       	ldi	r24, 0x18	; 24
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     c5e:	90 93 81 03 	sts	0x0381, r25	; 0x800381 <FactorEstimate+0x1>
     c62:	80 93 80 03 	sts	0x0380, r24	; 0x800380 <FactorEstimate>
     c66:	8a e1       	ldi	r24, 0x1A	; 26
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     c6e:	bc 01       	movw	r22, r24
     c70:	80 e0       	ldi	r24, 0x00	; 0
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	0e 94 01 12 	call	0x2402	; 0x2402 <__floatunsisf>
     c78:	20 e0       	ldi	r18, 0x00	; 0
     c7a:	30 e0       	ldi	r19, 0x00	; 0
     c7c:	4a e7       	ldi	r20, 0x7A	; 122
     c7e:	54 e4       	ldi	r21, 0x44	; 68
     c80:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     c84:	60 93 7c 03 	sts	0x037C, r22	; 0x80037c <FactorSpeed>
     c88:	70 93 7d 03 	sts	0x037D, r23	; 0x80037d <FactorSpeed+0x1>
     c8c:	80 93 7e 03 	sts	0x037E, r24	; 0x80037e <FactorSpeed+0x2>
     c90:	90 93 7f 03 	sts	0x037F, r25	; 0x80037f <FactorSpeed+0x3>
     c94:	8c e1       	ldi	r24, 0x1C	; 28
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     c9c:	90 93 7b 03 	sts	0x037B, r25	; 0x80037b <DisplayTimeout+0x1>
     ca0:	80 93 7a 03 	sts	0x037A, r24	; 0x80037a <DisplayTimeout>
     ca4:	8e e1       	ldi	r24, 0x1E	; 30
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     cac:	90 93 79 03 	sts	0x0379, r25	; 0x800379 <IsTransmit+0x1>
     cb0:	80 93 78 03 	sts	0x0378, r24	; 0x800378 <IsTransmit>
     cb4:	80 e2       	ldi	r24, 0x20	; 32
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     cbc:	90 93 77 03 	sts	0x0377, r25	; 0x800377 <MeasuresLimit+0x1>
     cc0:	80 93 76 03 	sts	0x0376, r24	; 0x800376 <MeasuresLimit>
     cc4:	82 e2       	ldi	r24, 0x22	; 34
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     ccc:	90 93 75 03 	sts	0x0375, r25	; 0x800375 <MoveLackLimit+0x1>
     cd0:	80 93 74 03 	sts	0x0374, r24	; 0x800374 <MoveLackLimit>
     cd4:	84 e2       	ldi	r24, 0x24	; 36
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
     cdc:	90 93 73 03 	sts	0x0373, r25	; 0x800373 <OvertimeLimit+0x1>
     ce0:	80 93 72 03 	sts	0x0372, r24	; 0x800372 <OvertimeLimit>
     ce4:	78 94       	sei
     ce6:	08 95       	ret

00000ce8 <Receive>:
     ce8:	66 e6       	ldi	r22, 0x66	; 102
     cea:	71 e0       	ldi	r23, 0x01	; 1
     cec:	84 e4       	ldi	r24, 0x44	; 68
     cee:	93 e0       	ldi	r25, 0x03	; 3
     cf0:	0e 94 cc 13 	call	0x2798	; 0x2798 <strcmp>
     cf4:	89 2b       	or	r24, r25
     cf6:	99 f1       	breq	.+102    	; 0xd5e <Receive+0x76>
     cf8:	6d e6       	ldi	r22, 0x6D	; 109
     cfa:	71 e0       	ldi	r23, 0x01	; 1
     cfc:	84 e4       	ldi	r24, 0x44	; 68
     cfe:	93 e0       	ldi	r25, 0x03	; 3
     d00:	0e 94 cc 13 	call	0x2798	; 0x2798 <strcmp>
     d04:	89 2b       	or	r24, r25
     d06:	39 f1       	breq	.+78     	; 0xd56 <Receive+0x6e>
     d08:	6f e6       	ldi	r22, 0x6F	; 111
     d0a:	71 e0       	ldi	r23, 0x01	; 1
     d0c:	84 e4       	ldi	r24, 0x44	; 68
     d0e:	93 e0       	ldi	r25, 0x03	; 3
     d10:	0e 94 cc 13 	call	0x2798	; 0x2798 <strcmp>
     d14:	89 2b       	or	r24, r25
     d16:	71 f1       	breq	.+92     	; 0xd74 <Receive+0x8c>
     d18:	64 e7       	ldi	r22, 0x74	; 116
     d1a:	71 e0       	ldi	r23, 0x01	; 1
     d1c:	84 e4       	ldi	r24, 0x44	; 68
     d1e:	93 e0       	ldi	r25, 0x03	; 3
     d20:	0e 94 cc 13 	call	0x2798	; 0x2798 <strcmp>
     d24:	89 2b       	or	r24, r25
     d26:	19 f1       	breq	.+70     	; 0xd6e <Receive+0x86>
     d28:	88 e7       	ldi	r24, 0x78	; 120
     d2a:	91 e0       	ldi	r25, 0x01	; 1
     d2c:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     d30:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <Rx+0x9>
     d34:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <Rx+0x8>
     d38:	88 e0       	ldi	r24, 0x08	; 8
     d3a:	e4 e4       	ldi	r30, 0x44	; 68
     d3c:	f3 e0       	ldi	r31, 0x03	; 3
     d3e:	df 01       	movw	r26, r30
     d40:	1d 92       	st	X+, r1
     d42:	8a 95       	dec	r24
     d44:	e9 f7       	brne	.-6      	; 0xd40 <Receive+0x58>
     d46:	10 92 50 03 	sts	0x0350, r1	; 0x800350 <Rx+0xc>
     d4a:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     d4e:	80 68       	ori	r24, 0x80	; 128
     d50:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     d54:	08 95       	ret
     d56:	81 e0       	ldi	r24, 0x01	; 1
     d58:	80 93 51 03 	sts	0x0351, r24	; 0x800351 <Rx+0xd>
     d5c:	e9 cf       	rjmp	.-46     	; 0xd30 <Receive+0x48>
     d5e:	8b e6       	ldi	r24, 0x6B	; 107
     d60:	91 e0       	ldi	r25, 0x01	; 1
     d62:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     d66:	81 e0       	ldi	r24, 0x01	; 1
     d68:	80 93 51 03 	sts	0x0351, r24	; 0x800351 <Rx+0xd>
     d6c:	e1 cf       	rjmp	.-62     	; 0xd30 <Receive+0x48>
     d6e:	0e 94 bf 03 	call	0x77e	; 0x77e <UploadMemory>
     d72:	de cf       	rjmp	.-68     	; 0xd30 <Receive+0x48>
     d74:	0e 94 0d 04 	call	0x81a	; 0x81a <UploadVariables>
     d78:	db cf       	rjmp	.-74     	; 0xd30 <Receive+0x48>

00000d7a <Transmit>:
     d7a:	af 92       	push	r10
     d7c:	bf 92       	push	r11
     d7e:	cf 92       	push	r12
     d80:	df 92       	push	r13
     d82:	ef 92       	push	r14
     d84:	ff 92       	push	r15
     d86:	0f 93       	push	r16
     d88:	1f 93       	push	r17
     d8a:	cf 93       	push	r28
     d8c:	df 93       	push	r29
     d8e:	5b 01       	movw	r10, r22
     d90:	6a 01       	movw	r12, r20
     d92:	79 01       	movw	r14, r18
     d94:	e8 01       	movw	r28, r16
     d96:	dc 01       	movw	r26, r24
     d98:	11 96       	adiw	r26, 0x01	; 1
     d9a:	2c 91       	ld	r18, X
     d9c:	11 97       	sbiw	r26, 0x01	; 1
     d9e:	2f 93       	push	r18
     da0:	8c 91       	ld	r24, X
     da2:	8f 93       	push	r24
     da4:	84 e8       	ldi	r24, 0x84	; 132
     da6:	91 e0       	ldi	r25, 0x01	; 1
     da8:	9f 93       	push	r25
     daa:	8f 93       	push	r24
     dac:	8c e3       	ldi	r24, 0x3C	; 60
     dae:	93 e0       	ldi	r25, 0x03	; 3
     db0:	9f 93       	push	r25
     db2:	8f 93       	push	r24
     db4:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     db8:	f5 01       	movw	r30, r10
     dba:	81 81       	ldd	r24, Z+1	; 0x01
     dbc:	8f 93       	push	r24
     dbe:	80 81       	ld	r24, Z
     dc0:	8f 93       	push	r24
     dc2:	8a e8       	ldi	r24, 0x8A	; 138
     dc4:	91 e0       	ldi	r25, 0x01	; 1
     dc6:	9f 93       	push	r25
     dc8:	8f 93       	push	r24
     dca:	84 e3       	ldi	r24, 0x34	; 52
     dcc:	93 e0       	ldi	r25, 0x03	; 3
     dce:	9f 93       	push	r25
     dd0:	8f 93       	push	r24
     dd2:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     dd6:	d6 01       	movw	r26, r12
     dd8:	13 96       	adiw	r26, 0x03	; 3
     dda:	8c 91       	ld	r24, X
     ddc:	13 97       	sbiw	r26, 0x03	; 3
     dde:	8f 93       	push	r24
     de0:	12 96       	adiw	r26, 0x02	; 2
     de2:	8c 91       	ld	r24, X
     de4:	12 97       	sbiw	r26, 0x02	; 2
     de6:	8f 93       	push	r24
     de8:	11 96       	adiw	r26, 0x01	; 1
     dea:	8c 91       	ld	r24, X
     dec:	11 97       	sbiw	r26, 0x01	; 1
     dee:	8f 93       	push	r24
     df0:	8c 91       	ld	r24, X
     df2:	8f 93       	push	r24
     df4:	8f e8       	ldi	r24, 0x8F	; 143
     df6:	91 e0       	ldi	r25, 0x01	; 1
     df8:	9f 93       	push	r25
     dfa:	8f 93       	push	r24
     dfc:	8c e2       	ldi	r24, 0x2C	; 44
     dfe:	93 e0       	ldi	r25, 0x03	; 3
     e00:	9f 93       	push	r25
     e02:	8f 93       	push	r24
     e04:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     e08:	f7 01       	movw	r30, r14
     e0a:	83 81       	ldd	r24, Z+3	; 0x03
     e0c:	8f 93       	push	r24
     e0e:	82 81       	ldd	r24, Z+2	; 0x02
     e10:	8f 93       	push	r24
     e12:	81 81       	ldd	r24, Z+1	; 0x01
     e14:	8f 93       	push	r24
     e16:	80 81       	ld	r24, Z
     e18:	8f 93       	push	r24
     e1a:	86 e9       	ldi	r24, 0x96	; 150
     e1c:	91 e0       	ldi	r25, 0x01	; 1
     e1e:	9f 93       	push	r25
     e20:	8f 93       	push	r24
     e22:	84 e2       	ldi	r24, 0x24	; 36
     e24:	93 e0       	ldi	r25, 0x03	; 3
     e26:	9f 93       	push	r25
     e28:	8f 93       	push	r24
     e2a:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     e2e:	8b 81       	ldd	r24, Y+3	; 0x03
     e30:	8f 93       	push	r24
     e32:	8a 81       	ldd	r24, Y+2	; 0x02
     e34:	8f 93       	push	r24
     e36:	89 81       	ldd	r24, Y+1	; 0x01
     e38:	8f 93       	push	r24
     e3a:	88 81       	ld	r24, Y
     e3c:	8f 93       	push	r24
     e3e:	8f e9       	ldi	r24, 0x9F	; 159
     e40:	91 e0       	ldi	r25, 0x01	; 1
     e42:	9f 93       	push	r25
     e44:	8f 93       	push	r24
     e46:	8c e1       	ldi	r24, 0x1C	; 28
     e48:	93 e0       	ldi	r25, 0x03	; 3
     e4a:	9f 93       	push	r25
     e4c:	8f 93       	push	r24
     e4e:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     e52:	8d b7       	in	r24, 0x3d	; 61
     e54:	9e b7       	in	r25, 0x3e	; 62
     e56:	84 96       	adiw	r24, 0x24	; 36
     e58:	0f b6       	in	r0, 0x3f	; 63
     e5a:	f8 94       	cli
     e5c:	9e bf       	out	0x3e, r25	; 62
     e5e:	0f be       	out	0x3f, r0	; 63
     e60:	8d bf       	out	0x3d, r24	; 61
     e62:	6c e3       	ldi	r22, 0x3C	; 60
     e64:	73 e0       	ldi	r23, 0x03	; 3
     e66:	8c ed       	ldi	r24, 0xDC	; 220
     e68:	92 e0       	ldi	r25, 0x02	; 2
     e6a:	0e 94 c1 13 	call	0x2782	; 0x2782 <strcat>
     e6e:	64 e3       	ldi	r22, 0x34	; 52
     e70:	73 e0       	ldi	r23, 0x03	; 3
     e72:	8c ed       	ldi	r24, 0xDC	; 220
     e74:	92 e0       	ldi	r25, 0x02	; 2
     e76:	0e 94 c1 13 	call	0x2782	; 0x2782 <strcat>
     e7a:	6c e2       	ldi	r22, 0x2C	; 44
     e7c:	73 e0       	ldi	r23, 0x03	; 3
     e7e:	8c ed       	ldi	r24, 0xDC	; 220
     e80:	92 e0       	ldi	r25, 0x02	; 2
     e82:	0e 94 c1 13 	call	0x2782	; 0x2782 <strcat>
     e86:	64 e2       	ldi	r22, 0x24	; 36
     e88:	73 e0       	ldi	r23, 0x03	; 3
     e8a:	8c ed       	ldi	r24, 0xDC	; 220
     e8c:	92 e0       	ldi	r25, 0x02	; 2
     e8e:	0e 94 c1 13 	call	0x2782	; 0x2782 <strcat>
     e92:	6c e1       	ldi	r22, 0x1C	; 28
     e94:	73 e0       	ldi	r23, 0x03	; 3
     e96:	8c ed       	ldi	r24, 0xDC	; 220
     e98:	92 e0       	ldi	r25, 0x02	; 2
     e9a:	0e 94 c1 13 	call	0x2782	; 0x2782 <strcat>
     e9e:	8c ed       	ldi	r24, 0xDC	; 220
     ea0:	92 e0       	ldi	r25, 0x02	; 2
     ea2:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <GetCRC8>
     ea6:	1f 92       	push	r1
     ea8:	8f 93       	push	r24
     eaa:	86 ea       	ldi	r24, 0xA6	; 166
     eac:	91 e0       	ldi	r25, 0x01	; 1
     eae:	9f 93       	push	r25
     eb0:	8f 93       	push	r24
     eb2:	84 ed       	ldi	r24, 0xD4	; 212
     eb4:	92 e0       	ldi	r25, 0x02	; 2
     eb6:	9f 93       	push	r25
     eb8:	8f 93       	push	r24
     eba:	0e 94 d5 13 	call	0x27aa	; 0x27aa <sprintf>
     ebe:	64 ed       	ldi	r22, 0xD4	; 212
     ec0:	72 e0       	ldi	r23, 0x02	; 2
     ec2:	8c ed       	ldi	r24, 0xDC	; 220
     ec4:	92 e0       	ldi	r25, 0x02	; 2
     ec6:	0e 94 c1 13 	call	0x2782	; 0x2782 <strcat>
     eca:	8c ed       	ldi	r24, 0xDC	; 220
     ecc:	92 e0       	ldi	r25, 0x02	; 2
     ece:	0e 94 c9 10 	call	0x2192	; 0x2192 <TxString>
     ed2:	80 e4       	ldi	r24, 0x40	; 64
     ed4:	ec ed       	ldi	r30, 0xDC	; 220
     ed6:	f2 e0       	ldi	r31, 0x02	; 2
     ed8:	df 01       	movw	r26, r30
     eda:	1d 92       	st	X+, r1
     edc:	8a 95       	dec	r24
     ede:	e9 f7       	brne	.-6      	; 0xeda <Transmit+0x160>
     ee0:	0f 90       	pop	r0
     ee2:	0f 90       	pop	r0
     ee4:	0f 90       	pop	r0
     ee6:	0f 90       	pop	r0
     ee8:	0f 90       	pop	r0
     eea:	0f 90       	pop	r0
     eec:	df 91       	pop	r29
     eee:	cf 91       	pop	r28
     ef0:	1f 91       	pop	r17
     ef2:	0f 91       	pop	r16
     ef4:	ff 90       	pop	r15
     ef6:	ef 90       	pop	r14
     ef8:	df 90       	pop	r13
     efa:	cf 90       	pop	r12
     efc:	bf 90       	pop	r11
     efe:	af 90       	pop	r10
     f00:	08 95       	ret

00000f02 <SecantA>:
     f02:	cf 93       	push	r28
     f04:	df 93       	push	r29
     f06:	66 23       	and	r22, r22
     f08:	d1 f0       	breq	.+52     	; 0xf3e <SecantA+0x3c>
     f0a:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <index.2446+0x1>
     f0e:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <index.2446>
     f12:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <average.2447+0x1>
     f16:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <average.2447>
     f1a:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <stdev.2448+0x1>
     f1e:	10 92 ce 02 	sts	0x02CE, r1	; 0x8002ce <stdev.2448>
     f22:	ee ec       	ldi	r30, 0xCE	; 206
     f24:	f1 e0       	ldi	r31, 0x01	; 1
     f26:	8e ec       	ldi	r24, 0xCE	; 206
     f28:	92 e0       	ldi	r25, 0x02	; 2
     f2a:	11 92       	st	Z+, r1
     f2c:	11 92       	st	Z+, r1
     f2e:	8e 17       	cp	r24, r30
     f30:	9f 07       	cpc	r25, r31
     f32:	d9 f7       	brne	.-10     	; 0xf2a <SecantA+0x28>
     f34:	80 e0       	ldi	r24, 0x00	; 0
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	df 91       	pop	r29
     f3a:	cf 91       	pop	r28
     f3c:	08 95       	ret
     f3e:	ec 01       	movw	r28, r24
     f40:	80 91 d2 02 	lds	r24, 0x02D2	; 0x8002d2 <index.2446>
     f44:	90 91 d3 02 	lds	r25, 0x02D3	; 0x8002d3 <index.2446+0x1>
     f48:	80 38       	cpi	r24, 0x80	; 128
     f4a:	91 05       	cpc	r25, r1
     f4c:	b0 f0       	brcs	.+44     	; 0xf7a <SecantA+0x78>
     f4e:	80 91 ce 02 	lds	r24, 0x02CE	; 0x8002ce <stdev.2448>
     f52:	90 91 cf 02 	lds	r25, 0x02CF	; 0x8002cf <stdev.2448+0x1>
     f56:	00 97       	sbiw	r24, 0x00	; 0
     f58:	51 f1       	breq	.+84     	; 0xfae <SecantA+0xac>
     f5a:	40 91 d0 02 	lds	r20, 0x02D0	; 0x8002d0 <average.2447>
     f5e:	50 91 d1 02 	lds	r21, 0x02D1	; 0x8002d1 <average.2447+0x1>
     f62:	9a 01       	movw	r18, r20
     f64:	2c 1b       	sub	r18, r28
     f66:	3d 0b       	sbc	r19, r29
     f68:	37 fd       	sbrc	r19, 7
     f6a:	34 c0       	rjmp	.+104    	; 0xfd4 <SecantA+0xd2>
     f6c:	82 17       	cp	r24, r18
     f6e:	93 07       	cpc	r25, r19
     f70:	90 f4       	brcc	.+36     	; 0xf96 <SecantA+0x94>
     f72:	ca 01       	movw	r24, r20
     f74:	df 91       	pop	r29
     f76:	cf 91       	pop	r28
     f78:	08 95       	ret
     f7a:	9c 01       	movw	r18, r24
     f7c:	2f 5f       	subi	r18, 0xFF	; 255
     f7e:	3f 4f       	sbci	r19, 0xFF	; 255
     f80:	30 93 d3 02 	sts	0x02D3, r19	; 0x8002d3 <index.2446+0x1>
     f84:	20 93 d2 02 	sts	0x02D2, r18	; 0x8002d2 <index.2446>
     f88:	88 0f       	add	r24, r24
     f8a:	99 1f       	adc	r25, r25
     f8c:	fc 01       	movw	r30, r24
     f8e:	e2 53       	subi	r30, 0x32	; 50
     f90:	fe 4f       	sbci	r31, 0xFE	; 254
     f92:	d1 83       	std	Z+1, r29	; 0x01
     f94:	c0 83       	st	Z, r28
     f96:	60 e0       	ldi	r22, 0x00	; 0
     f98:	ce 01       	movw	r24, r28
     f9a:	0e 94 23 0f 	call	0x1e46	; 0x1e46 <RunningAverageA>
     f9e:	90 93 d1 02 	sts	0x02D1, r25	; 0x8002d1 <average.2447+0x1>
     fa2:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <average.2447>
     fa6:	ce 01       	movw	r24, r28
     fa8:	df 91       	pop	r29
     faa:	cf 91       	pop	r28
     fac:	08 95       	ret
     fae:	60 e0       	ldi	r22, 0x00	; 0
     fb0:	ce 01       	movw	r24, r28
     fb2:	0e 94 23 0f 	call	0x1e46	; 0x1e46 <RunningAverageA>
     fb6:	90 93 d1 02 	sts	0x02D1, r25	; 0x8002d1 <average.2447+0x1>
     fba:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <average.2447>
     fbe:	60 ed       	ldi	r22, 0xD0	; 208
     fc0:	72 e0       	ldi	r23, 0x02	; 2
     fc2:	8e ec       	ldi	r24, 0xCE	; 206
     fc4:	91 e0       	ldi	r25, 0x01	; 1
     fc6:	0e 94 bf 0e 	call	0x1d7e	; 0x1d7e <StandartDeviation>
     fca:	90 93 cf 02 	sts	0x02CF, r25	; 0x8002cf <stdev.2448+0x1>
     fce:	80 93 ce 02 	sts	0x02CE, r24	; 0x8002ce <stdev.2448>
     fd2:	c3 cf       	rjmp	.-122    	; 0xf5a <SecantA+0x58>
     fd4:	31 95       	neg	r19
     fd6:	21 95       	neg	r18
     fd8:	31 09       	sbc	r19, r1
     fda:	c8 cf       	rjmp	.-112    	; 0xf6c <SecantA+0x6a>

00000fdc <Initialization>:
     fdc:	86 e0       	ldi	r24, 0x06	; 6
     fde:	84 b9       	out	0x04, r24	; 4
     fe0:	89 e3       	ldi	r24, 0x39	; 57
     fe2:	85 b9       	out	0x05, r24	; 5
     fe4:	8f e3       	ldi	r24, 0x3F	; 63
     fe6:	87 b9       	out	0x07, r24	; 7
     fe8:	80 ec       	ldi	r24, 0xC0	; 192
     fea:	88 b9       	out	0x08, r24	; 8
     fec:	8c e0       	ldi	r24, 0x0C	; 12
     fee:	8a b9       	out	0x0a, r24	; 10
     ff0:	83 ef       	ldi	r24, 0xF3	; 243
     ff2:	8b b9       	out	0x0b, r24	; 11
     ff4:	0e 94 9c 05 	call	0xb38	; 0xb38 <LoadSettings>
     ff8:	61 e0       	ldi	r22, 0x01	; 1
     ffa:	80 e0       	ldi	r24, 0x00	; 0
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <KalmanA>
    1002:	61 e0       	ldi	r22, 0x01	; 1
    1004:	80 e0       	ldi	r24, 0x00	; 0
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	0e 94 13 10 	call	0x2026	; 0x2026 <KalmanB>
    100c:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1010:	83 e0       	ldi	r24, 0x03	; 3
    1012:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1016:	87 e0       	ldi	r24, 0x07	; 7
    1018:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    101c:	e0 e7       	ldi	r30, 0x70	; 112
    101e:	f0 e0       	ldi	r31, 0x00	; 0
    1020:	80 81       	ld	r24, Z
    1022:	81 60       	ori	r24, 0x01	; 1
    1024:	80 83       	st	Z, r24
    1026:	82 e0       	ldi	r24, 0x02	; 2
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	0e 94 ab 10 	call	0x2156	; 0x2156 <USART>
    102e:	81 e0       	ldi	r24, 0x01	; 1
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	0e 94 ab 10 	call	0x2156	; 0x2156 <USART>
    1036:	8f e8       	ldi	r24, 0x8F	; 143
    1038:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    103c:	87 e4       	ldi	r24, 0x47	; 71
    103e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1042:	78 94       	sei
    1044:	a8 95       	wdr
    1046:	99 e2       	ldi	r25, 0x29	; 41
    1048:	88 e1       	ldi	r24, 0x18	; 24
    104a:	0f b6       	in	r0, 0x3f	; 63
    104c:	f8 94       	cli
    104e:	a8 95       	wdr
    1050:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7f8060>
    1054:	0f be       	out	0x3f, r0	; 63
    1056:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x7f8060>
    105a:	08 95       	ret

0000105c <Print>:
    105c:	fc 01       	movw	r30, r24
    105e:	40 81       	ld	r20, Z
    1060:	51 81       	ldd	r21, Z+1	; 0x01
    1062:	57 fd       	sbrc	r21, 7
    1064:	95 c0       	rjmp	.+298    	; 0x1190 <Print+0x134>
    1066:	50 93 c3 01 	sts	0x01C3, r21	; 0x8001c3 <uvalue.2470+0x1>
    106a:	40 93 c2 01 	sts	0x01C2, r20	; 0x8001c2 <uvalue.2470>
    106e:	48 3e       	cpi	r20, 0xE8	; 232
    1070:	83 e0       	ldi	r24, 0x03	; 3
    1072:	58 07       	cpc	r21, r24
    1074:	bc f0       	brlt	.+46     	; 0x10a4 <Print+0x48>
    1076:	89 e0       	ldi	r24, 0x09	; 9
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	90 93 c1 01 	sts	0x01C1, r25	; 0x8001c1 <dozens.2468+0x1>
    107e:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <dozens.2468>
    1082:	90 93 bf 01 	sts	0x01BF, r25	; 0x8001bf <units.2469+0x1>
    1086:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <units.2469>
    108a:	45 9b       	sbis	0x08, 5	; 8
    108c:	31 c0       	rjmp	.+98     	; 0x10f0 <Print+0x94>
    108e:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <units.2469>
    1092:	80 6d       	ori	r24, 0xD0	; 208
    1094:	88 b9       	out	0x08, r24	; 8
    1096:	5a 9b       	sbis	0x0b, 2	; 11
    1098:	76 c0       	rjmp	.+236    	; 0x1186 <Print+0x12a>
    109a:	80 81       	ld	r24, Z
    109c:	91 81       	ldd	r25, Z+1	; 0x01
    109e:	97 ff       	sbrs	r25, 7
    10a0:	5a 98       	cbi	0x0b, 2	; 11
    10a2:	08 95       	ret
    10a4:	9a 01       	movw	r18, r20
    10a6:	45 36       	cpi	r20, 0x65	; 101
    10a8:	51 05       	cpc	r21, r1
    10aa:	0c f0       	brlt	.+2      	; 0x10ae <Print+0x52>
    10ac:	48 c0       	rjmp	.+144    	; 0x113e <Print+0xe2>
    10ae:	ad ec       	ldi	r26, 0xCD	; 205
    10b0:	bc ec       	ldi	r27, 0xCC	; 204
    10b2:	0e 94 90 13 	call	0x2720	; 0x2720 <__umulhisi3>
    10b6:	96 95       	lsr	r25
    10b8:	87 95       	ror	r24
    10ba:	96 95       	lsr	r25
    10bc:	87 95       	ror	r24
    10be:	96 95       	lsr	r25
    10c0:	87 95       	ror	r24
    10c2:	90 93 c1 01 	sts	0x01C1, r25	; 0x8001c1 <dozens.2468+0x1>
    10c6:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <dozens.2468>
    10ca:	9c 01       	movw	r18, r24
    10cc:	22 0f       	add	r18, r18
    10ce:	33 1f       	adc	r19, r19
    10d0:	88 0f       	add	r24, r24
    10d2:	99 1f       	adc	r25, r25
    10d4:	88 0f       	add	r24, r24
    10d6:	99 1f       	adc	r25, r25
    10d8:	88 0f       	add	r24, r24
    10da:	99 1f       	adc	r25, r25
    10dc:	82 0f       	add	r24, r18
    10de:	93 1f       	adc	r25, r19
    10e0:	48 1b       	sub	r20, r24
    10e2:	59 0b       	sbc	r21, r25
    10e4:	50 93 bf 01 	sts	0x01BF, r21	; 0x8001bf <units.2469+0x1>
    10e8:	40 93 be 01 	sts	0x01BE, r20	; 0x8001be <units.2469>
    10ec:	45 99       	sbic	0x08, 5	; 8
    10ee:	cf cf       	rjmp	.-98     	; 0x108e <Print+0x32>
    10f0:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <dozens.2468>
    10f4:	80 6e       	ori	r24, 0xE0	; 224
    10f6:	88 b9       	out	0x08, r24	; 8
    10f8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <InterfaceMode>
    10fc:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <InterfaceMode+0x1>
    1100:	07 97       	sbiw	r24, 0x07	; 7
    1102:	71 f2       	breq	.-100    	; 0x10a0 <Print+0x44>
    1104:	e0 91 65 03 	lds	r30, 0x0365	; 0x800365 <IndexCurrentSetting>
    1108:	f0 91 66 03 	lds	r31, 0x0366	; 0x800366 <IndexCurrentSetting+0x1>
    110c:	ee 0f       	add	r30, r30
    110e:	ff 1f       	adc	r31, r31
    1110:	e6 5d       	subi	r30, 0xD6	; 214
    1112:	fe 4f       	sbci	r31, 0xFE	; 254
    1114:	80 81       	ld	r24, Z
    1116:	91 81       	ldd	r25, Z+1	; 0x01
    1118:	9c 01       	movw	r18, r24
    111a:	2f 7e       	andi	r18, 0xEF	; 239
    111c:	23 2b       	or	r18, r19
    111e:	19 f0       	breq	.+6      	; 0x1126 <Print+0xca>
    1120:	0e 97       	sbiw	r24, 0x0e	; 14
    1122:	09 f0       	breq	.+2      	; 0x1126 <Print+0xca>
    1124:	bd cf       	rjmp	.-134    	; 0x10a0 <Print+0x44>
    1126:	5a 99       	sbic	0x0b, 2	; 11
    1128:	37 c0       	rjmp	.+110    	; 0x1198 <Print+0x13c>
    112a:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <uvalue.2470>
    112e:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <uvalue.2470+0x1>
    1132:	84 36       	cpi	r24, 0x64	; 100
    1134:	91 05       	cpc	r25, r1
    1136:	08 f0       	brcs	.+2      	; 0x113a <Print+0xde>
    1138:	b4 cf       	rjmp	.-152    	; 0x10a2 <Print+0x46>
    113a:	5a 9a       	sbi	0x0b, 2	; 11
    113c:	08 95       	ret
    113e:	36 95       	lsr	r19
    1140:	27 95       	ror	r18
    1142:	36 95       	lsr	r19
    1144:	27 95       	ror	r18
    1146:	ab e7       	ldi	r26, 0x7B	; 123
    1148:	b4 e1       	ldi	r27, 0x14	; 20
    114a:	0e 94 90 13 	call	0x2720	; 0x2720 <__umulhisi3>
    114e:	96 95       	lsr	r25
    1150:	87 95       	ror	r24
    1152:	90 93 c1 01 	sts	0x01C1, r25	; 0x8001c1 <dozens.2468+0x1>
    1156:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <dozens.2468>
    115a:	9a 01       	movw	r18, r20
    115c:	ad ec       	ldi	r26, 0xCD	; 205
    115e:	bc ec       	ldi	r27, 0xCC	; 204
    1160:	0e 94 90 13 	call	0x2720	; 0x2720 <__umulhisi3>
    1164:	ac 01       	movw	r20, r24
    1166:	56 95       	lsr	r21
    1168:	47 95       	ror	r20
    116a:	56 95       	lsr	r21
    116c:	47 95       	ror	r20
    116e:	56 95       	lsr	r21
    1170:	47 95       	ror	r20
    1172:	9a 01       	movw	r18, r20
    1174:	0e 94 90 13 	call	0x2720	; 0x2720 <__umulhisi3>
    1178:	96 95       	lsr	r25
    117a:	87 95       	ror	r24
    117c:	96 95       	lsr	r25
    117e:	87 95       	ror	r24
    1180:	96 95       	lsr	r25
    1182:	87 95       	ror	r24
    1184:	a2 cf       	rjmp	.-188    	; 0x10ca <Print+0x6e>
    1186:	80 81       	ld	r24, Z
    1188:	91 81       	ldd	r25, Z+1	; 0x01
    118a:	97 fd       	sbrc	r25, 7
    118c:	d6 cf       	rjmp	.-84     	; 0x113a <Print+0xde>
    118e:	08 95       	ret
    1190:	51 95       	neg	r21
    1192:	41 95       	neg	r20
    1194:	51 09       	sbc	r21, r1
    1196:	67 cf       	rjmp	.-306    	; 0x1066 <Print+0xa>
    1198:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <uvalue.2470>
    119c:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <uvalue.2470+0x1>
    11a0:	84 36       	cpi	r24, 0x64	; 100
    11a2:	91 05       	cpc	r25, r1
    11a4:	08 f4       	brcc	.+2      	; 0x11a8 <Print+0x14c>
    11a6:	7d cf       	rjmp	.-262    	; 0x10a2 <Print+0x46>
    11a8:	5a 98       	cbi	0x0b, 2	; 11
    11aa:	7b cf       	rjmp	.-266    	; 0x10a2 <Print+0x46>

000011ac <PrintError>:
    11ac:	98 b1       	in	r25, 0x08	; 8
    11ae:	88 b1       	in	r24, 0x08	; 8
    11b0:	90 71       	andi	r25, 0x10	; 16
    11b2:	80 72       	andi	r24, 0x20	; 32
    11b4:	89 2b       	or	r24, r25
    11b6:	41 f4       	brne	.+16     	; 0x11c8 <PrintError+0x1c>
    11b8:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <CurrentError>
    11bc:	80 6e       	ori	r24, 0xE0	; 224
    11be:	88 b9       	out	0x08, r24	; 8
    11c0:	5a 9b       	sbis	0x0b, 2	; 11
    11c2:	05 c0       	rjmp	.+10     	; 0x11ce <PrintError+0x22>
    11c4:	5a 98       	cbi	0x0b, 2	; 11
    11c6:	08 95       	ret
    11c8:	88 b1       	in	r24, 0x08	; 8
    11ca:	80 7c       	andi	r24, 0xC0	; 192
    11cc:	88 b9       	out	0x08, r24	; 8
    11ce:	08 95       	ret

000011d0 <ControlButtons>:
    11d0:	4e 9b       	sbis	0x09, 6	; 9
    11d2:	14 c0       	rjmp	.+40     	; 0x11fc <ControlButtons+0x2c>
    11d4:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <plus.2475>
    11d8:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <plus.2475+0x1>
    11dc:	01 97       	sbiw	r24, 0x01	; 1
    11de:	c9 f0       	breq	.+50     	; 0x1212 <ControlButtons+0x42>
    11e0:	4f 99       	sbic	0x09, 7	; 9
    11e2:	20 c0       	rjmp	.+64     	; 0x1224 <ControlButtons+0x54>
    11e4:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <minus.2476>
    11e8:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <minus.2476+0x1>
    11ec:	01 96       	adiw	r24, 0x01	; 1
    11ee:	90 93 bb 01 	sts	0x01BB, r25	; 0x8001bb <minus.2476+0x1>
    11f2:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <minus.2476>
    11f6:	01 97       	sbiw	r24, 0x01	; 1
    11f8:	d9 f0       	breq	.+54     	; 0x1230 <ControlButtons+0x60>
    11fa:	08 95       	ret
    11fc:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <plus.2475>
    1200:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <plus.2475+0x1>
    1204:	01 96       	adiw	r24, 0x01	; 1
    1206:	90 93 bd 01 	sts	0x01BD, r25	; 0x8001bd <plus.2475+0x1>
    120a:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <plus.2475>
    120e:	01 97       	sbiw	r24, 0x01	; 1
    1210:	39 f7       	brne	.-50     	; 0x11e0 <ControlButtons+0x10>
    1212:	81 e0       	ldi	r24, 0x01	; 1
    1214:	80 93 5b 03 	sts	0x035B, r24	; 0x80035b <PlusPushed>
    1218:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <plus.2475+0x1>
    121c:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <plus.2475>
    1220:	4f 9b       	sbis	0x09, 7	; 9
    1222:	e0 cf       	rjmp	.-64     	; 0x11e4 <ControlButtons+0x14>
    1224:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <minus.2476>
    1228:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <minus.2476+0x1>
    122c:	01 97       	sbiw	r24, 0x01	; 1
    122e:	29 f7       	brne	.-54     	; 0x11fa <ControlButtons+0x2a>
    1230:	81 e0       	ldi	r24, 0x01	; 1
    1232:	80 93 5a 03 	sts	0x035A, r24	; 0x80035a <MinusPushed>
    1236:	10 92 bb 01 	sts	0x01BB, r1	; 0x8001bb <minus.2476+0x1>
    123a:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <minus.2476>
    123e:	08 95       	ret

00001240 <ControlModes>:
    1240:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <InterfaceMode>
    1244:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <InterfaceMode+0x1>
    1248:	20 91 5b 03 	lds	r18, 0x035B	; 0x80035b <PlusPushed>
    124c:	86 30       	cpi	r24, 0x06	; 6
    124e:	91 05       	cpc	r25, r1
    1250:	31 f0       	breq	.+12     	; 0x125e <ControlModes+0x1e>
    1252:	22 23       	and	r18, r18
    1254:	c1 f0       	breq	.+48     	; 0x1286 <ControlModes+0x46>
    1256:	10 92 60 03 	sts	0x0360, r1	; 0x800360 <SettingAutoExitCount+0x1>
    125a:	10 92 5f 03 	sts	0x035F, r1	; 0x80035f <SettingAutoExitCount>
    125e:	22 23       	and	r18, r18
    1260:	89 f0       	breq	.+34     	; 0x1284 <ControlModes+0x44>
    1262:	20 91 5a 03 	lds	r18, 0x035A	; 0x80035a <MinusPushed>
    1266:	22 23       	and	r18, r18
    1268:	69 f0       	breq	.+26     	; 0x1284 <ControlModes+0x44>
    126a:	86 30       	cpi	r24, 0x06	; 6
    126c:	91 05       	cpc	r25, r1
    126e:	09 f4       	brne	.+2      	; 0x1272 <ControlModes+0x32>
    1270:	40 c0       	rjmp	.+128    	; 0x12f2 <ControlModes+0xb2>
    1272:	07 97       	sbiw	r24, 0x07	; 7
    1274:	69 f0       	breq	.+26     	; 0x1290 <ControlModes+0x50>
    1276:	81 e0       	ldi	r24, 0x01	; 1
    1278:	80 93 5d 03 	sts	0x035D, r24	; 0x80035d <SaveSetting>
    127c:	10 92 5b 03 	sts	0x035B, r1	; 0x80035b <PlusPushed>
    1280:	10 92 5a 03 	sts	0x035A, r1	; 0x80035a <MinusPushed>
    1284:	08 95       	ret
    1286:	30 91 5a 03 	lds	r19, 0x035A	; 0x80035a <MinusPushed>
    128a:	31 11       	cpse	r19, r1
    128c:	e4 cf       	rjmp	.-56     	; 0x1256 <ControlModes+0x16>
    128e:	08 95       	ret
    1290:	e0 91 65 03 	lds	r30, 0x0365	; 0x800365 <IndexCurrentSetting>
    1294:	f0 91 66 03 	lds	r31, 0x0366	; 0x800366 <IndexCurrentSetting+0x1>
    1298:	ee 0f       	add	r30, r30
    129a:	ff 1f       	adc	r31, r31
    129c:	e6 5d       	subi	r30, 0xD6	; 214
    129e:	fe 4f       	sbci	r31, 0xFE	; 254
    12a0:	80 81       	ld	r24, Z
    12a2:	91 81       	ldd	r25, Z+1	; 0x01
    12a4:	8c 35       	cpi	r24, 0x5C	; 92
    12a6:	91 05       	cpc	r25, r1
    12a8:	09 f4       	brne	.+2      	; 0x12ac <ControlModes+0x6c>
    12aa:	3d c0       	rjmp	.+122    	; 0x1326 <ControlModes+0xe6>
    12ac:	83 36       	cpi	r24, 0x63	; 99
    12ae:	91 05       	cpc	r25, r1
    12b0:	a1 f1       	breq	.+104    	; 0x131a <ControlModes+0xda>
    12b2:	8a 35       	cpi	r24, 0x5A	; 90
    12b4:	91 05       	cpc	r25, r1
    12b6:	d1 f1       	breq	.+116    	; 0x132c <ControlModes+0xec>
    12b8:	83 e0       	ldi	r24, 0x03	; 3
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <InterfaceMode+0x1>
    12c0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <InterfaceMode>
    12c4:	90 93 68 03 	sts	0x0368, r25	; 0x800368 <DisplayMode+0x1>
    12c8:	80 93 67 03 	sts	0x0367, r24	; 0x800367 <DisplayMode>
    12cc:	f8 94       	cli
    12ce:	e0 91 65 03 	lds	r30, 0x0365	; 0x800365 <IndexCurrentSetting>
    12d2:	f0 91 66 03 	lds	r31, 0x0366	; 0x800366 <IndexCurrentSetting+0x1>
    12d6:	ee 0f       	add	r30, r30
    12d8:	ff 1f       	adc	r31, r31
    12da:	e6 5d       	subi	r30, 0xD6	; 214
    12dc:	fe 4f       	sbci	r31, 0xFE	; 254
    12de:	80 81       	ld	r24, Z
    12e0:	91 81       	ldd	r25, Z+1	; 0x01
    12e2:	0e 94 88 16 	call	0x2d10	; 0x2d10 <eeprom_read_word>
    12e6:	90 93 9f 03 	sts	0x039F, r25	; 0x80039f <ChangableValue+0x1>
    12ea:	80 93 9e 03 	sts	0x039E, r24	; 0x80039e <ChangableValue>
    12ee:	78 94       	sei
    12f0:	c5 cf       	rjmp	.-118    	; 0x127c <ControlModes+0x3c>
    12f2:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    12f6:	8f 7d       	andi	r24, 0xDF	; 223
    12f8:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    12fc:	87 e0       	ldi	r24, 0x07	; 7
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <InterfaceMode+0x1>
    1304:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <InterfaceMode>
    1308:	90 93 68 03 	sts	0x0368, r25	; 0x800368 <DisplayMode+0x1>
    130c:	80 93 67 03 	sts	0x0367, r24	; 0x800367 <DisplayMode>
    1310:	10 92 64 03 	sts	0x0364, r1	; 0x800364 <DisplayTimeoutCount+0x1>
    1314:	10 92 63 03 	sts	0x0363, r1	; 0x800363 <DisplayTimeoutCount>
    1318:	b1 cf       	rjmp	.-158    	; 0x127c <ControlModes+0x3c>
    131a:	0e 94 81 05 	call	0xb02	; 0xb02 <SetDefaultSettings>
    131e:	81 e0       	ldi	r24, 0x01	; 1
    1320:	80 93 57 03 	sts	0x0357, r24	; 0x800357 <IsReloadSettings>
    1324:	ab cf       	rjmp	.-170    	; 0x127c <ControlModes+0x3c>
    1326:	0e 94 0d 04 	call	0x81a	; 0x81a <UploadVariables>
    132a:	a8 cf       	rjmp	.-176    	; 0x127c <ControlModes+0x3c>
    132c:	0e 94 bf 03 	call	0x77e	; 0x77e <UploadMemory>
    1330:	a5 cf       	rjmp	.-182    	; 0x127c <ControlModes+0x3c>

00001332 <CountrolInstant>:
    1332:	20 91 76 03 	lds	r18, 0x0376	; 0x800376 <MeasuresLimit>
    1336:	30 91 77 03 	lds	r19, 0x0377	; 0x800377 <MeasuresLimit+0x1>
    133a:	21 15       	cp	r18, r1
    133c:	31 05       	cpc	r19, r1
    133e:	81 f1       	breq	.+96     	; 0x13a0 <CountrolInstant+0x6e>
    1340:	dc 01       	movw	r26, r24
    1342:	4d 91       	ld	r20, X+
    1344:	5c 91       	ld	r21, X
    1346:	4a 30       	cpi	r20, 0x0A	; 10
    1348:	51 05       	cpc	r21, r1
    134a:	20 f5       	brcc	.+72     	; 0x1394 <CountrolInstant+0x62>
    134c:	40 91 b8 01 	lds	r20, 0x01B8	; 0x8001b8 <errorCount.2488>
    1350:	50 91 b9 01 	lds	r21, 0x01B9	; 0x8001b9 <errorCount.2488+0x1>
    1354:	4f 5f       	subi	r20, 0xFF	; 255
    1356:	5f 4f       	sbci	r21, 0xFF	; 255
    1358:	50 93 b9 01 	sts	0x01B9, r21	; 0x8001b9 <errorCount.2488+0x1>
    135c:	40 93 b8 01 	sts	0x01B8, r20	; 0x8001b8 <errorCount.2488>
    1360:	e1 e0       	ldi	r30, 0x01	; 1
    1362:	f0 e0       	ldi	r31, 0x00	; 0
    1364:	f0 93 59 03 	sts	0x0359, r31	; 0x800359 <CurrentError+0x1>
    1368:	e0 93 58 03 	sts	0x0358, r30	; 0x800358 <CurrentError>
    136c:	db 01       	movw	r26, r22
    136e:	ed 91       	ld	r30, X+
    1370:	fc 91       	ld	r31, X
    1372:	3a 97       	sbiw	r30, 0x0a	; 10
    1374:	78 f1       	brcs	.+94     	; 0x13d4 <CountrolInstant+0xa2>
    1376:	24 17       	cp	r18, r20
    1378:	35 07       	cpc	r19, r21
    137a:	08 f5       	brcc	.+66     	; 0x13be <CountrolInstant+0x8c>
    137c:	2a 9a       	sbi	0x05, 2	; 5
    137e:	85 e0       	ldi	r24, 0x05	; 5
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	90 93 68 03 	sts	0x0368, r25	; 0x800368 <DisplayMode+0x1>
    1386:	80 93 67 03 	sts	0x0367, r24	; 0x800367 <DisplayMode>
    138a:	10 92 b9 01 	sts	0x01B9, r1	; 0x8001b9 <errorCount.2488+0x1>
    138e:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <errorCount.2488>
    1392:	08 95       	ret
    1394:	fb 01       	movw	r30, r22
    1396:	40 81       	ld	r20, Z
    1398:	51 81       	ldd	r21, Z+1	; 0x01
    139a:	4a 30       	cpi	r20, 0x0A	; 10
    139c:	51 05       	cpc	r21, r1
    139e:	80 f0       	brcs	.+32     	; 0x13c0 <CountrolInstant+0x8e>
    13a0:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <errorCount.2488>
    13a4:	90 91 b9 01 	lds	r25, 0x01B9	; 0x8001b9 <errorCount.2488+0x1>
    13a8:	89 2b       	or	r24, r25
    13aa:	49 f0       	breq	.+18     	; 0x13be <CountrolInstant+0x8c>
    13ac:	10 92 b9 01 	sts	0x01B9, r1	; 0x8001b9 <errorCount.2488+0x1>
    13b0:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <errorCount.2488>
    13b4:	10 92 59 03 	sts	0x0359, r1	; 0x800359 <CurrentError+0x1>
    13b8:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <CurrentError>
    13bc:	08 95       	ret
    13be:	08 95       	ret
    13c0:	40 91 b8 01 	lds	r20, 0x01B8	; 0x8001b8 <errorCount.2488>
    13c4:	50 91 b9 01 	lds	r21, 0x01B9	; 0x8001b9 <errorCount.2488+0x1>
    13c8:	4f 5f       	subi	r20, 0xFF	; 255
    13ca:	5f 4f       	sbci	r21, 0xFF	; 255
    13cc:	50 93 b9 01 	sts	0x01B9, r21	; 0x8001b9 <errorCount.2488+0x1>
    13d0:	40 93 b8 01 	sts	0x01B8, r20	; 0x8001b8 <errorCount.2488>
    13d4:	e2 e0       	ldi	r30, 0x02	; 2
    13d6:	f0 e0       	ldi	r31, 0x00	; 0
    13d8:	f0 93 59 03 	sts	0x0359, r31	; 0x800359 <CurrentError+0x1>
    13dc:	e0 93 58 03 	sts	0x0358, r30	; 0x800358 <CurrentError>
    13e0:	dc 01       	movw	r26, r24
    13e2:	8d 91       	ld	r24, X+
    13e4:	9c 91       	ld	r25, X
    13e6:	0a 97       	sbiw	r24, 0x0a	; 10
    13e8:	30 f6       	brcc	.-116    	; 0x1376 <CountrolInstant+0x44>
    13ea:	fb 01       	movw	r30, r22
    13ec:	80 81       	ld	r24, Z
    13ee:	91 81       	ldd	r25, Z+1	; 0x01
    13f0:	0a 97       	sbiw	r24, 0x0a	; 10
    13f2:	08 f6       	brcc	.-126    	; 0x1376 <CountrolInstant+0x44>
    13f4:	83 e0       	ldi	r24, 0x03	; 3
    13f6:	90 e0       	ldi	r25, 0x00	; 0
    13f8:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <CurrentError+0x1>
    13fc:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <CurrentError>
    1400:	ba cf       	rjmp	.-140    	; 0x1376 <CountrolInstant+0x44>

00001402 <ControlCommon>:
    1402:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <IsRun>
    1406:	88 23       	and	r24, r24
    1408:	09 f1       	breq	.+66     	; 0x144c <ControlCommon+0x4a>
    140a:	80 91 67 03 	lds	r24, 0x0367	; 0x800367 <DisplayMode>
    140e:	90 91 68 03 	lds	r25, 0x0368	; 0x800368 <DisplayMode+0x1>
    1412:	89 2b       	or	r24, r25
    1414:	d9 f4       	brne	.+54     	; 0x144c <ControlCommon+0x4a>
    1416:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <PlusPushed>
    141a:	81 11       	cpse	r24, r1
    141c:	04 c0       	rjmp	.+8      	; 0x1426 <ControlCommon+0x24>
    141e:	80 91 5a 03 	lds	r24, 0x035A	; 0x80035a <MinusPushed>
    1422:	88 23       	and	r24, r24
    1424:	e9 f1       	breq	.+122    	; 0x14a0 <ControlCommon+0x9e>
    1426:	84 e0       	ldi	r24, 0x04	; 4
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	90 93 68 03 	sts	0x0368, r25	; 0x800368 <DisplayMode+0x1>
    142e:	80 93 67 03 	sts	0x0367, r24	; 0x800367 <DisplayMode>
    1432:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <DisplayTimeout>
    1436:	90 91 7b 03 	lds	r25, 0x037B	; 0x80037b <DisplayTimeout+0x1>
    143a:	90 93 64 03 	sts	0x0364, r25	; 0x800364 <DisplayTimeoutCount+0x1>
    143e:	80 93 63 03 	sts	0x0363, r24	; 0x800363 <DisplayTimeoutCount>
    1442:	10 92 5b 03 	sts	0x035B, r1	; 0x80035b <PlusPushed>
    1446:	10 92 5a 03 	sts	0x035A, r1	; 0x80035a <MinusPushed>
    144a:	08 95       	ret
    144c:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <PlusPushed>
    1450:	88 23       	and	r24, r24
    1452:	89 f0       	breq	.+34     	; 0x1476 <ControlCommon+0x74>
    1454:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    1458:	8a 3f       	cpi	r24, 0xFA	; 250
    145a:	41 f1       	breq	.+80     	; 0x14ac <ControlCommon+0xaa>
    145c:	8a ef       	ldi	r24, 0xFA	; 250
    145e:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    1462:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1466:	80 62       	ori	r24, 0x20	; 32
    1468:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    146c:	81 e0       	ldi	r24, 0x01	; 1
    146e:	80 93 5c 03 	sts	0x035C, r24	; 0x80035c <ManualControl>
    1472:	10 92 5b 03 	sts	0x035B, r1	; 0x80035b <PlusPushed>
    1476:	80 91 5a 03 	lds	r24, 0x035A	; 0x80035a <MinusPushed>
    147a:	88 23       	and	r24, r24
    147c:	89 f0       	breq	.+34     	; 0x14a0 <ControlCommon+0x9e>
    147e:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    1482:	87 38       	cpi	r24, 0x87	; 135
    1484:	71 f0       	breq	.+28     	; 0x14a2 <ControlCommon+0xa0>
    1486:	87 e8       	ldi	r24, 0x87	; 135
    1488:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    148c:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1490:	80 62       	ori	r24, 0x20	; 32
    1492:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1496:	81 e0       	ldi	r24, 0x01	; 1
    1498:	80 93 5c 03 	sts	0x035C, r24	; 0x80035c <ManualControl>
    149c:	10 92 5a 03 	sts	0x035A, r1	; 0x80035a <MinusPushed>
    14a0:	08 95       	ret
    14a2:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    14a6:	85 fd       	sbrc	r24, 5
    14a8:	f6 cf       	rjmp	.-20     	; 0x1496 <ControlCommon+0x94>
    14aa:	ed cf       	rjmp	.-38     	; 0x1486 <ControlCommon+0x84>
    14ac:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    14b0:	85 fd       	sbrc	r24, 5
    14b2:	dc cf       	rjmp	.-72     	; 0x146c <ControlCommon+0x6a>
    14b4:	d3 cf       	rjmp	.-90     	; 0x145c <ControlCommon+0x5a>

000014b6 <ControlSettings>:
    14b6:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <PlusPushed>
    14ba:	88 23       	and	r24, r24
    14bc:	79 f0       	breq	.+30     	; 0x14dc <ControlSettings+0x26>
    14be:	80 91 65 03 	lds	r24, 0x0365	; 0x800365 <IndexCurrentSetting>
    14c2:	90 91 66 03 	lds	r25, 0x0366	; 0x800366 <IndexCurrentSetting+0x1>
    14c6:	85 31       	cpi	r24, 0x15	; 21
    14c8:	91 05       	cpc	r25, r1
    14ca:	28 f4       	brcc	.+10     	; 0x14d6 <ControlSettings+0x20>
    14cc:	01 96       	adiw	r24, 0x01	; 1
    14ce:	90 93 66 03 	sts	0x0366, r25	; 0x800366 <IndexCurrentSetting+0x1>
    14d2:	80 93 65 03 	sts	0x0365, r24	; 0x800365 <IndexCurrentSetting>
    14d6:	10 92 5b 03 	sts	0x035B, r1	; 0x80035b <PlusPushed>
    14da:	08 95       	ret
    14dc:	80 91 5a 03 	lds	r24, 0x035A	; 0x80035a <MinusPushed>
    14e0:	88 23       	and	r24, r24
    14e2:	69 f0       	breq	.+26     	; 0x14fe <ControlSettings+0x48>
    14e4:	80 91 65 03 	lds	r24, 0x0365	; 0x800365 <IndexCurrentSetting>
    14e8:	90 91 66 03 	lds	r25, 0x0366	; 0x800366 <IndexCurrentSetting+0x1>
    14ec:	00 97       	sbiw	r24, 0x00	; 0
    14ee:	29 f0       	breq	.+10     	; 0x14fa <ControlSettings+0x44>
    14f0:	01 97       	sbiw	r24, 0x01	; 1
    14f2:	90 93 66 03 	sts	0x0366, r25	; 0x800366 <IndexCurrentSetting+0x1>
    14f6:	80 93 65 03 	sts	0x0365, r24	; 0x800365 <IndexCurrentSetting>
    14fa:	10 92 5a 03 	sts	0x035A, r1	; 0x80035a <MinusPushed>
    14fe:	08 95       	ret

00001500 <ControlSetting>:
    1500:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <SaveSetting>
    1504:	81 11       	cpse	r24, r1
    1506:	29 c0       	rjmp	.+82     	; 0x155a <ControlSetting+0x5a>
    1508:	e0 91 65 03 	lds	r30, 0x0365	; 0x800365 <IndexCurrentSetting>
    150c:	f0 91 66 03 	lds	r31, 0x0366	; 0x800366 <IndexCurrentSetting+0x1>
    1510:	ee 0f       	add	r30, r30
    1512:	ff 1f       	adc	r31, r31
    1514:	e6 5d       	subi	r30, 0xD6	; 214
    1516:	fe 4f       	sbci	r31, 0xFE	; 254
    1518:	01 90       	ld	r0, Z+
    151a:	f0 81       	ld	r31, Z
    151c:	e0 2d       	mov	r30, r0
    151e:	e5 32       	cpi	r30, 0x25	; 37
    1520:	f1 05       	cpc	r31, r1
    1522:	b8 f0       	brcs	.+46     	; 0x1552 <ControlSetting+0x52>
    1524:	87 e0       	ldi	r24, 0x07	; 7
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <InterfaceMode+0x1>
    152c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <InterfaceMode>
    1530:	90 93 68 03 	sts	0x0368, r25	; 0x800368 <DisplayMode+0x1>
    1534:	80 93 67 03 	sts	0x0367, r24	; 0x800367 <DisplayMode>
    1538:	10 92 66 03 	sts	0x0366, r1	; 0x800366 <IndexCurrentSetting+0x1>
    153c:	10 92 65 03 	sts	0x0365, r1	; 0x800365 <IndexCurrentSetting>
    1540:	10 92 9f 03 	sts	0x039F, r1	; 0x80039f <ChangableValue+0x1>
    1544:	10 92 9e 03 	sts	0x039E, r1	; 0x80039e <ChangableValue>
    1548:	10 92 5b 03 	sts	0x035B, r1	; 0x80035b <PlusPushed>
    154c:	10 92 5a 03 	sts	0x035A, r1	; 0x80035a <MinusPushed>
    1550:	08 95       	ret
    1552:	ec 5c       	subi	r30, 0xCC	; 204
    1554:	ff 4f       	sbci	r31, 0xFF	; 255
    1556:	0c 94 8a 13 	jmp	0x2714	; 0x2714 <__tablejump2__>
    155a:	f8 94       	cli
    155c:	60 91 9e 03 	lds	r22, 0x039E	; 0x80039e <ChangableValue>
    1560:	70 91 9f 03 	lds	r23, 0x039F	; 0x80039f <ChangableValue+0x1>
    1564:	e0 91 65 03 	lds	r30, 0x0365	; 0x800365 <IndexCurrentSetting>
    1568:	f0 91 66 03 	lds	r31, 0x0366	; 0x800366 <IndexCurrentSetting+0x1>
    156c:	ee 0f       	add	r30, r30
    156e:	ff 1f       	adc	r31, r31
    1570:	e6 5d       	subi	r30, 0xD6	; 214
    1572:	fe 4f       	sbci	r31, 0xFE	; 254
    1574:	80 81       	ld	r24, Z
    1576:	91 81       	ldd	r25, Z+1	; 0x01
    1578:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <eeprom_update_word>
    157c:	78 94       	sei
    157e:	10 92 9f 03 	sts	0x039F, r1	; 0x80039f <ChangableValue+0x1>
    1582:	10 92 9e 03 	sts	0x039E, r1	; 0x80039e <ChangableValue>
    1586:	10 92 5b 03 	sts	0x035B, r1	; 0x80035b <PlusPushed>
    158a:	10 92 5a 03 	sts	0x035A, r1	; 0x80035a <MinusPushed>
    158e:	87 e0       	ldi	r24, 0x07	; 7
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <InterfaceMode+0x1>
    1596:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <InterfaceMode>
    159a:	90 93 68 03 	sts	0x0368, r25	; 0x800368 <DisplayMode+0x1>
    159e:	80 93 67 03 	sts	0x0367, r24	; 0x800367 <DisplayMode>
    15a2:	10 92 5d 03 	sts	0x035D, r1	; 0x80035d <SaveSetting>
    15a6:	08 95       	ret
    15a8:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <PlusPushed>
    15ac:	81 11       	cpse	r24, r1
    15ae:	ba c0       	rjmp	.+372    	; 0x1724 <ControlSetting+0x224>
    15b0:	80 91 5a 03 	lds	r24, 0x035A	; 0x80035a <MinusPushed>
    15b4:	88 23       	and	r24, r24
    15b6:	41 f2       	breq	.-112    	; 0x1548 <ControlSetting+0x48>
    15b8:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <ChangableValue>
    15bc:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <ChangableValue+0x1>
    15c0:	18 16       	cp	r1, r24
    15c2:	19 06       	cpc	r1, r25
    15c4:	0c f0       	brlt	.+2      	; 0x15c8 <ControlSetting+0xc8>
    15c6:	c0 cf       	rjmp	.-128    	; 0x1548 <ControlSetting+0x48>
    15c8:	01 97       	sbiw	r24, 0x01	; 1
    15ca:	90 93 9f 03 	sts	0x039F, r25	; 0x80039f <ChangableValue+0x1>
    15ce:	80 93 9e 03 	sts	0x039E, r24	; 0x80039e <ChangableValue>
    15d2:	10 92 5b 03 	sts	0x035B, r1	; 0x80035b <PlusPushed>
    15d6:	10 92 5a 03 	sts	0x035A, r1	; 0x80035a <MinusPushed>
    15da:	08 95       	ret
    15dc:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <PlusPushed>
    15e0:	88 23       	and	r24, r24
    15e2:	61 f0       	breq	.+24     	; 0x15fc <ControlSetting+0xfc>
    15e4:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <ChangableValue>
    15e8:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <ChangableValue+0x1>
    15ec:	83 36       	cpi	r24, 0x63	; 99
    15ee:	91 05       	cpc	r25, r1
    15f0:	2c f4       	brge	.+10     	; 0x15fc <ControlSetting+0xfc>
    15f2:	01 96       	adiw	r24, 0x01	; 1
    15f4:	90 93 9f 03 	sts	0x039F, r25	; 0x80039f <ChangableValue+0x1>
    15f8:	80 93 9e 03 	sts	0x039E, r24	; 0x80039e <ChangableValue>
    15fc:	80 91 5a 03 	lds	r24, 0x035A	; 0x80035a <MinusPushed>
    1600:	88 23       	and	r24, r24
    1602:	09 f4       	brne	.+2      	; 0x1606 <ControlSetting+0x106>
    1604:	a1 cf       	rjmp	.-190    	; 0x1548 <ControlSetting+0x48>
    1606:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <ChangableValue>
    160a:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <ChangableValue+0x1>
    160e:	82 30       	cpi	r24, 0x02	; 2
    1610:	91 05       	cpc	r25, r1
    1612:	d4 f6       	brge	.-76     	; 0x15c8 <ControlSetting+0xc8>
    1614:	99 cf       	rjmp	.-206    	; 0x1548 <ControlSetting+0x48>
    1616:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <PlusPushed>
    161a:	88 23       	and	r24, r24
    161c:	49 f2       	breq	.-110    	; 0x15b0 <ControlSetting+0xb0>
    161e:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <ChangableValue>
    1622:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <ChangableValue+0x1>
    1626:	87 3e       	cpi	r24, 0xE7	; 231
    1628:	23 e0       	ldi	r18, 0x03	; 3
    162a:	92 07       	cpc	r25, r18
    162c:	0c f6       	brge	.-126    	; 0x15b0 <ControlSetting+0xb0>
    162e:	55 c0       	rjmp	.+170    	; 0x16da <ControlSetting+0x1da>
    1630:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <PlusPushed>
    1634:	88 23       	and	r24, r24
    1636:	09 f4       	brne	.+2      	; 0x163a <ControlSetting+0x13a>
    1638:	bb cf       	rjmp	.-138    	; 0x15b0 <ControlSetting+0xb0>
    163a:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <ChangableValue>
    163e:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <ChangableValue+0x1>
    1642:	83 36       	cpi	r24, 0x63	; 99
    1644:	91 05       	cpc	r25, r1
    1646:	0c f0       	brlt	.+2      	; 0x164a <ControlSetting+0x14a>
    1648:	b3 cf       	rjmp	.-154    	; 0x15b0 <ControlSetting+0xb0>
    164a:	47 c0       	rjmp	.+142    	; 0x16da <ControlSetting+0x1da>
    164c:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <PlusPushed>
    1650:	88 23       	and	r24, r24
    1652:	09 f4       	brne	.+2      	; 0x1656 <ControlSetting+0x156>
    1654:	ad cf       	rjmp	.-166    	; 0x15b0 <ControlSetting+0xb0>
    1656:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <ChangableValue>
    165a:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <ChangableValue+0x1>
    165e:	8c 33       	cpi	r24, 0x3C	; 60
    1660:	91 05       	cpc	r25, r1
    1662:	0c f0       	brlt	.+2      	; 0x1666 <ControlSetting+0x166>
    1664:	a5 cf       	rjmp	.-182    	; 0x15b0 <ControlSetting+0xb0>
    1666:	39 c0       	rjmp	.+114    	; 0x16da <ControlSetting+0x1da>
    1668:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <PlusPushed>
    166c:	88 23       	and	r24, r24
    166e:	09 f4       	brne	.+2      	; 0x1672 <ControlSetting+0x172>
    1670:	9f cf       	rjmp	.-194    	; 0x15b0 <ControlSetting+0xb0>
    1672:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <ChangableValue>
    1676:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <ChangableValue+0x1>
    167a:	83 30       	cpi	r24, 0x03	; 3
    167c:	91 05       	cpc	r25, r1
    167e:	0c f0       	brlt	.+2      	; 0x1682 <ControlSetting+0x182>
    1680:	97 cf       	rjmp	.-210    	; 0x15b0 <ControlSetting+0xb0>
    1682:	2b c0       	rjmp	.+86     	; 0x16da <ControlSetting+0x1da>
    1684:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <PlusPushed>
    1688:	88 23       	and	r24, r24
    168a:	59 f0       	breq	.+22     	; 0x16a2 <ControlSetting+0x1a2>
    168c:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <ChangableValue>
    1690:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <ChangableValue+0x1>
    1694:	97 ff       	sbrs	r25, 7
    1696:	05 c0       	rjmp	.+10     	; 0x16a2 <ControlSetting+0x1a2>
    1698:	01 96       	adiw	r24, 0x01	; 1
    169a:	90 93 9f 03 	sts	0x039F, r25	; 0x80039f <ChangableValue+0x1>
    169e:	80 93 9e 03 	sts	0x039E, r24	; 0x80039e <ChangableValue>
    16a2:	80 91 5a 03 	lds	r24, 0x035A	; 0x80035a <MinusPushed>
    16a6:	88 23       	and	r24, r24
    16a8:	09 f4       	brne	.+2      	; 0x16ac <ControlSetting+0x1ac>
    16aa:	4e cf       	rjmp	.-356    	; 0x1548 <ControlSetting+0x48>
    16ac:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <ChangableValue>
    16b0:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <ChangableValue+0x1>
    16b4:	8c 3f       	cpi	r24, 0xFC	; 252
    16b6:	2f ef       	ldi	r18, 0xFF	; 255
    16b8:	92 07       	cpc	r25, r18
    16ba:	0c f4       	brge	.+2      	; 0x16be <ControlSetting+0x1be>
    16bc:	45 cf       	rjmp	.-374    	; 0x1548 <ControlSetting+0x48>
    16be:	84 cf       	rjmp	.-248    	; 0x15c8 <ControlSetting+0xc8>
    16c0:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <PlusPushed>
    16c4:	88 23       	and	r24, r24
    16c6:	09 f4       	brne	.+2      	; 0x16ca <ControlSetting+0x1ca>
    16c8:	73 cf       	rjmp	.-282    	; 0x15b0 <ControlSetting+0xb0>
    16ca:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <ChangableValue>
    16ce:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <ChangableValue+0x1>
    16d2:	85 30       	cpi	r24, 0x05	; 5
    16d4:	91 05       	cpc	r25, r1
    16d6:	0c f0       	brlt	.+2      	; 0x16da <ControlSetting+0x1da>
    16d8:	6b cf       	rjmp	.-298    	; 0x15b0 <ControlSetting+0xb0>
    16da:	01 96       	adiw	r24, 0x01	; 1
    16dc:	90 93 9f 03 	sts	0x039F, r25	; 0x80039f <ChangableValue+0x1>
    16e0:	80 93 9e 03 	sts	0x039E, r24	; 0x80039e <ChangableValue>
    16e4:	65 cf       	rjmp	.-310    	; 0x15b0 <ControlSetting+0xb0>
    16e6:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <PlusPushed>
    16ea:	88 23       	and	r24, r24
    16ec:	61 f0       	breq	.+24     	; 0x1706 <ControlSetting+0x206>
    16ee:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <ChangableValue>
    16f2:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <ChangableValue+0x1>
    16f6:	88 3c       	cpi	r24, 0xC8	; 200
    16f8:	91 05       	cpc	r25, r1
    16fa:	2c f4       	brge	.+10     	; 0x1706 <ControlSetting+0x206>
    16fc:	01 96       	adiw	r24, 0x01	; 1
    16fe:	90 93 9f 03 	sts	0x039F, r25	; 0x80039f <ChangableValue+0x1>
    1702:	80 93 9e 03 	sts	0x039E, r24	; 0x80039e <ChangableValue>
    1706:	80 91 5a 03 	lds	r24, 0x035A	; 0x80035a <MinusPushed>
    170a:	88 23       	and	r24, r24
    170c:	09 f4       	brne	.+2      	; 0x1710 <ControlSetting+0x210>
    170e:	1c cf       	rjmp	.-456    	; 0x1548 <ControlSetting+0x48>
    1710:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <ChangableValue>
    1714:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <ChangableValue+0x1>
    1718:	89 33       	cpi	r24, 0x39	; 57
    171a:	2f ef       	ldi	r18, 0xFF	; 255
    171c:	92 07       	cpc	r25, r18
    171e:	0c f4       	brge	.+2      	; 0x1722 <ControlSetting+0x222>
    1720:	13 cf       	rjmp	.-474    	; 0x1548 <ControlSetting+0x48>
    1722:	52 cf       	rjmp	.-348    	; 0x15c8 <ControlSetting+0xc8>
    1724:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <ChangableValue>
    1728:	90 91 9f 03 	lds	r25, 0x039F	; 0x80039f <ChangableValue+0x1>
    172c:	18 16       	cp	r1, r24
    172e:	19 06       	cpc	r1, r25
    1730:	a4 f6       	brge	.-88     	; 0x16da <ControlSetting+0x1da>
    1732:	20 91 5a 03 	lds	r18, 0x035A	; 0x80035a <MinusPushed>
    1736:	22 23       	and	r18, r18
    1738:	09 f4       	brne	.+2      	; 0x173c <ControlSetting+0x23c>
    173a:	06 cf       	rjmp	.-500    	; 0x1548 <ControlSetting+0x48>
    173c:	45 cf       	rjmp	.-374    	; 0x15c8 <ControlSetting+0xc8>

0000173e <Stop>:

bool Stop()
{
	LedOff;
    173e:	29 98       	cbi	0x05, 1	; 5
	PulseOff;
    1740:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1744:	8f 7d       	andi	r24, 0xDF	; 223
    1746:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
	FaultOff;
    174a:	2a 98       	cbi	0x05, 2	; 5
		High(TIMSK0, TOIE0);							
		TCNT0 = 0;
		return;
	}
	
	Low(TIMSK0, TOIE0);
    174c:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
    1750:	8e 7f       	andi	r24, 0xFE	; 254
    1752:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	TCCR0B = 0x00;										  
    1756:	15 bc       	out	0x25, r1	; 37
		High(TIMSK1, TOIE1);
		TCNT1 = 0;
		return;
	}
	
	Low(TIMSK1, TOIE1);
    1758:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    175c:	8e 7f       	andi	r24, 0xFE	; 254
    175e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
	TCCR1B = 0x00;
    1762:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	static unsigned short motorState = Locked, stepCount = 0, stepsInterval = 0;
	static unsigned short overtimeCount = 0, moveLackCount = 0, lastDifference = 0;
	
	if (reset)
	{
		motorState = Locked;
    1766:	84 e6       	ldi	r24, 0x64	; 100
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    176e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		stepCount = 0;
    1772:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <stepCount.2460+0x1>
    1776:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <stepCount.2460>
		stepsInterval = 0;
    177a:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <stepsInterval.2461+0x1>
    177e:	10 92 ca 01 	sts	0x01CA, r1	; 0x8001ca <stepsInterval.2461>
		overtimeCount = 0;
    1782:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <overtimeCount.2462+0x1>
    1786:	10 92 c8 01 	sts	0x01C8, r1	; 0x8001c8 <overtimeCount.2462>
	PulseOff;
	FaultOff;
	Timer0(false);
	Timer1(false);
	SetDirection(0, true);	
	KalmanA(0, true);
    178a:	61 e0       	ldi	r22, 0x01	; 1
    178c:	80 e0       	ldi	r24, 0x00	; 0
    178e:	90 e0       	ldi	r25, 0x00	; 0
    1790:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <KalmanA>
	KalmanB(0, true);	
    1794:	61 e0       	ldi	r22, 0x01	; 1
    1796:	80 e0       	ldi	r24, 0x00	; 0
    1798:	90 e0       	ldi	r25, 0x00	; 0
    179a:	0e 94 13 10 	call	0x2026	; 0x2026 <KalmanB>
	RunningAverageA(0, true);
    179e:	61 e0       	ldi	r22, 0x01	; 1
    17a0:	80 e0       	ldi	r24, 0x00	; 0
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	0e 94 23 0f 	call	0x1e46	; 0x1e46 <RunningAverageA>
	static unsigned short average = 0;
	static unsigned short stdev = 0;
	
	if (reset)
	{
		index = 0;
    17a8:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <index.2446+0x1>
    17ac:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <index.2446>
		average = 0;
    17b0:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <average.2447+0x1>
    17b4:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <average.2447>
		stdev = 0;	
    17b8:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <stdev.2448+0x1>
    17bc:	10 92 ce 02 	sts	0x02CE, r1	; 0x8002ce <stdev.2448>
    17c0:	ee ec       	ldi	r30, 0xCE	; 206
    17c2:	f1 e0       	ldi	r31, 0x01	; 1
		
		for (int i=0; i<128; i++)
			buffer[i] = 0;
    17c4:	11 92       	st	Z+, r1
    17c6:	11 92       	st	Z+, r1
	{
		index = 0;
		average = 0;
		stdev = 0;	
		
		for (int i=0; i<128; i++)
    17c8:	82 e0       	ldi	r24, 0x02	; 2
    17ca:	ee 3c       	cpi	r30, 0xCE	; 206
    17cc:	f8 07       	cpc	r31, r24
    17ce:	d1 f7       	brne	.-12     	; 0x17c4 <Stop+0x86>
	{
		case On:
		High(ADCSRA, ADSC);
		break;
		case Off:
		Low(ADCSRA, ADSC);
    17d0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    17d4:	8f 7b       	andi	r24, 0xBF	; 191
    17d6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	KalmanB(0, true);	
	RunningAverageA(0, true);
	SecantA(0, true);
	Converter(Off);
	
	if (DisplayMode != Error) 
    17da:	80 91 67 03 	lds	r24, 0x0367	; 0x800367 <DisplayMode>
    17de:	90 91 68 03 	lds	r25, 0x0368	; 0x800368 <DisplayMode+0x1>
    17e2:	05 97       	sbiw	r24, 0x05	; 5
    17e4:	41 f0       	breq	.+16     	; 0x17f6 <Stop+0xb8>
	{
		DisplayMode = Off;
    17e6:	10 92 68 03 	sts	0x0368, r1	; 0x800368 <DisplayMode+0x1>
    17ea:	10 92 67 03 	sts	0x0367, r1	; 0x800367 <DisplayMode>
		DisplayTimeoutCount = 0;
    17ee:	10 92 64 03 	sts	0x0364, r1	; 0x800364 <DisplayTimeoutCount+0x1>
    17f2:	10 92 63 03 	sts	0x0363, r1	; 0x800363 <DisplayTimeoutCount>
	}
	
	return false;
}
    17f6:	80 e0       	ldi	r24, 0x00	; 0
    17f8:	08 95       	ret

000017fa <main>:

int main(void)
{
    17fa:	cf 93       	push	r28
    17fc:	df 93       	push	r29
    17fe:	00 d0       	rcall	.+0      	; 0x1800 <main+0x6>
    1800:	00 d0       	rcall	.+0      	; 0x1802 <main+0x8>
    1802:	00 d0       	rcall	.+0      	; 0x1804 <main+0xa>
    1804:	cd b7       	in	r28, 0x3d	; 61
    1806:	de b7       	in	r29, 0x3e	; 62
	static float temperature = 0, humidity = 0, tension = 0;
	unsigned short startDelayCount = 0, measureDelayCount = 0;
	unsigned short a = 0, b = 0;
    1808:	1e 82       	std	Y+6, r1	; 0x06
    180a:	1d 82       	std	Y+5, r1	; 0x05
    180c:	1c 82       	std	Y+4, r1	; 0x04
    180e:	1b 82       	std	Y+3, r1	; 0x03
	short assembling = 0;
    1810:	1a 82       	std	Y+2, r1	; 0x02
    1812:	19 82       	std	Y+1, r1	; 0x01
	bool isUpdated = false, envRequest = true;

	Initialization();
    1814:	0e 94 ee 07 	call	0xfdc	; 0xfdc <Initialization>
{
	static float temperature = 0, humidity = 0, tension = 0;
	unsigned short startDelayCount = 0, measureDelayCount = 0;
	unsigned short a = 0, b = 0;
	short assembling = 0;
	bool isUpdated = false, envRequest = true;
    1818:	11 e0       	ldi	r17, 0x01	; 1
    181a:	00 e0       	ldi	r16, 0x00	; 0
}

int main(void)
{
	static float temperature = 0, humidity = 0, tension = 0;
	unsigned short startDelayCount = 0, measureDelayCount = 0;
    181c:	c1 2c       	mov	r12, r1
    181e:	d1 2c       	mov	r13, r1
    1820:	e1 2c       	mov	r14, r1
    1822:	f1 2c       	mov	r15, r1
			 
			 if (InterfaceMode == Setting)
			 {
				 if (Blink) DisplayMode = Off;
				 else DisplayMode = Setting;
				 Blink = !Blink;
    1824:	22 24       	eor	r2, r2
    1826:	23 94       	inc	r2
			
			if (!Running && IsRun) IsRun = Stop();	
			
			if (IsRun)						 
			{
				LedInv;					
    1828:	32 e0       	ldi	r19, 0x02	; 2
    182a:	33 2e       	mov	r3, r19
bool Start()
{
	Timer0(true);
	Timer1(true);
	CurrentError = Off;
	DisplayMode = Current;
    182c:	44 e0       	ldi	r20, 0x04	; 4
    182e:	84 2e       	mov	r8, r20
    1830:	91 2c       	mov	r9, r1
			
			if (SettingExitCount >= SETTING_EXIT || IsReloadSettings || SettingAutoExitCount >= SETTING_AUTO_EXIT)  // reload settings after changing 
			{
				SettingExitCount = 0;
				IndexCurrentSetting = 0;
				InterfaceMode = Common;
    1832:	56 e0       	ldi	r21, 0x06	; 6
    1834:	a5 2e       	mov	r10, r21
    1836:	b1 2c       	mov	r11, r1
					DisplayTimeoutCount = DisplayTimeout;
				}
				else 
					DisplayMode = Off;
				
				if (CurrentError) DisplayMode = Error;
    1838:	65 e0       	ldi	r22, 0x05	; 5
    183a:	66 2e       	mov	r6, r22
    183c:	71 2c       	mov	r7, r1
    183e:	a5 c0       	rjmp	.+330    	; 0x198a <main+0x190>
		}
		
		
		if (HandleAfterSecond)	 
		{		
			if (!BtnMinus && InterfaceMode == Settings) SettingExitCount++;
    1840:	4f 99       	sbic	0x09, 7	; 9
    1842:	5e c1       	rjmp	.+700    	; 0x1b00 <main+0x306>
    1844:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <InterfaceMode>
    1848:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <InterfaceMode+0x1>
    184c:	87 30       	cpi	r24, 0x07	; 7
    184e:	91 05       	cpc	r25, r1
    1850:	09 f4       	brne	.+2      	; 0x1854 <main+0x5a>
    1852:	6d c1       	rjmp	.+730    	; 0x1b2e <main+0x334>
			if (InterfaceMode == Settings || InterfaceMode == Setting) SettingAutoExitCount++;
    1854:	03 97       	sbiw	r24, 0x03	; 3
    1856:	09 f4       	brne	.+2      	; 0x185a <main+0x60>
    1858:	5b c1       	rjmp	.+694    	; 0x1b10 <main+0x316>
    185a:	80 91 61 03 	lds	r24, 0x0361	; 0x800361 <SettingExitCount>
    185e:	90 91 62 03 	lds	r25, 0x0362	; 0x800362 <SettingExitCount+0x1>
			
			if (SettingExitCount >= SETTING_EXIT || IsReloadSettings || SettingAutoExitCount >= SETTING_AUTO_EXIT)  // reload settings after changing 
    1862:	05 97       	sbiw	r24, 0x05	; 5
    1864:	50 f4       	brcc	.+20     	; 0x187a <main+0x80>
    1866:	80 91 57 03 	lds	r24, 0x0357	; 0x800357 <IsReloadSettings>
    186a:	81 11       	cpse	r24, r1
    186c:	06 c0       	rjmp	.+12     	; 0x187a <main+0x80>
    186e:	80 91 5f 03 	lds	r24, 0x035F	; 0x80035f <SettingAutoExitCount>
    1872:	90 91 60 03 	lds	r25, 0x0360	; 0x800360 <SettingAutoExitCount+0x1>
    1876:	4e 97       	sbiw	r24, 0x1e	; 30
    1878:	58 f1       	brcs	.+86     	; 0x18d0 <main+0xd6>
			{
				SettingExitCount = 0;
    187a:	10 92 62 03 	sts	0x0362, r1	; 0x800362 <SettingExitCount+0x1>
    187e:	10 92 61 03 	sts	0x0361, r1	; 0x800361 <SettingExitCount>
				IndexCurrentSetting = 0;
    1882:	10 92 66 03 	sts	0x0366, r1	; 0x800366 <IndexCurrentSetting+0x1>
    1886:	10 92 65 03 	sts	0x0365, r1	; 0x800365 <IndexCurrentSetting>
				InterfaceMode = Common;
    188a:	b0 92 03 01 	sts	0x0103, r11	; 0x800103 <InterfaceMode+0x1>
    188e:	a0 92 02 01 	sts	0x0102, r10	; 0x800102 <InterfaceMode>
				IsReloadSettings = false;
    1892:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <IsReloadSettings>
				
				if (IsRun) 
    1896:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <IsRun>
    189a:	88 23       	and	r24, r24
    189c:	09 f4       	brne	.+2      	; 0x18a0 <main+0xa6>
    189e:	02 c1       	rjmp	.+516    	; 0x1aa4 <main+0x2aa>
				{
					DisplayMode = Current;
    18a0:	90 92 68 03 	sts	0x0368, r9	; 0x800368 <DisplayMode+0x1>
    18a4:	80 92 67 03 	sts	0x0367, r8	; 0x800367 <DisplayMode>
					DisplayTimeoutCount = DisplayTimeout;
    18a8:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <DisplayTimeout>
    18ac:	90 91 7b 03 	lds	r25, 0x037B	; 0x80037b <DisplayTimeout+0x1>
    18b0:	90 93 64 03 	sts	0x0364, r25	; 0x800364 <DisplayTimeoutCount+0x1>
    18b4:	80 93 63 03 	sts	0x0363, r24	; 0x800363 <DisplayTimeoutCount>
				}
				else 
					DisplayMode = Off;
				
				if (CurrentError) DisplayMode = Error;
    18b8:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <CurrentError>
    18bc:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <CurrentError+0x1>
    18c0:	89 2b       	or	r24, r25
    18c2:	21 f0       	breq	.+8      	; 0x18cc <main+0xd2>
    18c4:	70 92 68 03 	sts	0x0368, r7	; 0x800368 <DisplayMode+0x1>
    18c8:	60 92 67 03 	sts	0x0367, r6	; 0x800367 <DisplayMode>
				
				LoadSettings();
    18cc:	0e 94 9c 05 	call	0xb38	; 0xb38 <LoadSettings>
			}
			
			if (Running && !IsRun) 		  
    18d0:	18 99       	sbic	0x03, 0	; 3
    18d2:	e0 c0       	rjmp	.+448    	; 0x1a94 <main+0x29a>
    18d4:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <IsRun>
    18d8:	88 23       	and	r24, r24
    18da:	09 f4       	brne	.+2      	; 0x18de <main+0xe4>
    18dc:	b8 c1       	rjmp	.+880    	; 0x1c4e <main+0x454>
				measureDelayCount = MEASURE_DELAY;
				a = 0; b = 0; assembling = 0;
				continue;
			}
			
			if (!Running && IsRun) IsRun = Stop();	
    18de:	18 99       	sbic	0x03, 0	; 3
    18e0:	29 c2       	rjmp	.+1106   	; 0x1d34 <main+0x53a>
			
			if (IsRun)						 
			{
				LedInv;					
    18e2:	85 b1       	in	r24, 0x05	; 5
    18e4:	83 25       	eor	r24, r3
    18e6:	85 b9       	out	0x05, r24	; 5

				if (!measureDelayCount)
    18e8:	c1 14       	cp	r12, r1
    18ea:	d1 04       	cpc	r13, r1
    18ec:	09 f4       	brne	.+2      	; 0x18f0 <main+0xf6>
    18ee:	35 c1       	rjmp	.+618    	; 0x1b5a <main+0x360>
    18f0:	10 e0       	ldi	r17, 0x00	; 0
					if (IsTransmit) Transmit(&a, &b, &tension, &temperature, &humidity);
					isUpdated = true;
					envRequest = true;													    							   
				}
				
				if (!startDelayCount)
    18f2:	e1 14       	cp	r14, r1
    18f4:	f1 04       	cpc	r15, r1
    18f6:	09 f4       	brne	.+2      	; 0x18fa <main+0x100>
    18f8:	96 c1       	rjmp	.+812    	; 0x1c26 <main+0x42c>
				{
					CountrolInstant(&a, &b);	
					SetDirection(&assembling, false);		
				}
				 
				TCNT0 = 0;					 	    
    18fa:	16 bc       	out	0x26, r1	; 38
				TCNT1 = 0;
    18fc:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
    1900:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
				Timer0_OverflowCount = 0;
    1904:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <Timer0_OverflowCount+0x1>
    1908:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <Timer0_OverflowCount>
				Timer1_OverflowCount = 0;
    190c:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <Timer1_OverflowCount+0x1>
    1910:	10 92 6e 03 	sts	0x036E, r1	; 0x80036e <Timer1_OverflowCount>
			}
			
			if (measureDelayCount) measureDelayCount--;	   
    1914:	c1 14       	cp	r12, r1
    1916:	d1 04       	cpc	r13, r1
    1918:	19 f0       	breq	.+6      	; 0x1920 <main+0x126>
    191a:	31 e0       	ldi	r19, 0x01	; 1
    191c:	c3 1a       	sub	r12, r19
    191e:	d1 08       	sbc	r13, r1
			if (startDelayCount) startDelayCount--;  
    1920:	e1 14       	cp	r14, r1
    1922:	f1 04       	cpc	r15, r1
    1924:	19 f0       	breq	.+6      	; 0x192c <main+0x132>
    1926:	81 e0       	ldi	r24, 0x01	; 1
    1928:	e8 1a       	sub	r14, r24
    192a:	f1 08       	sbc	r15, r1

			if (DisplayTimeoutCount)
    192c:	80 91 63 03 	lds	r24, 0x0363	; 0x800363 <DisplayTimeoutCount>
    1930:	90 91 64 03 	lds	r25, 0x0364	; 0x800364 <DisplayTimeoutCount+0x1>
    1934:	00 97       	sbiw	r24, 0x00	; 0
    1936:	59 f0       	breq	.+22     	; 0x194e <main+0x154>
			{
				DisplayTimeoutCount--;
    1938:	01 97       	sbiw	r24, 0x01	; 1
    193a:	90 93 64 03 	sts	0x0364, r25	; 0x800364 <DisplayTimeoutCount+0x1>
    193e:	80 93 63 03 	sts	0x0363, r24	; 0x800363 <DisplayTimeoutCount>
				if (!DisplayTimeoutCount) DisplayMode = Off;
    1942:	89 2b       	or	r24, r25
    1944:	21 f4       	brne	.+8      	; 0x194e <main+0x154>
    1946:	10 92 68 03 	sts	0x0368, r1	; 0x800368 <DisplayMode+0x1>
    194a:	10 92 67 03 	sts	0x0367, r1	; 0x800367 <DisplayMode>
			}
			
			if (Rx.isConnected) 
    194e:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <Rx+0xd>
    1952:	81 11       	cpse	r24, r1
    1954:	ac c0       	rjmp	.+344    	; 0x1aae <main+0x2b4>
    1956:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <Rx+0xa>
    195a:	90 91 4f 03 	lds	r25, 0x034F	; 0x80034f <Rx+0xb>
					
					Rx.isRequested = false;
				}
			}
			
			if (Rx.disconnectCount >= RX_DISCONNECT_TIMEOUT)
    195e:	05 97       	sbiw	r24, 0x05	; 5
    1960:	30 f0       	brcs	.+12     	; 0x196e <main+0x174>
			{
				Rx.isConnected = false;
    1962:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <Rx+0xd>
				Rx.disconnectCount = 0;
    1966:	10 92 4f 03 	sts	0x034F, r1	; 0x80034f <Rx+0xb>
    196a:	10 92 4e 03 	sts	0x034E, r1	; 0x80034e <Rx+0xa>
			}
			
			if (DisplayMode == Error) PrintError();
    196e:	80 91 67 03 	lds	r24, 0x0367	; 0x800367 <DisplayMode>
    1972:	90 91 68 03 	lds	r25, 0x0368	; 0x800368 <DisplayMode+0x1>
    1976:	05 97       	sbiw	r24, 0x05	; 5
    1978:	09 f4       	brne	.+2      	; 0x197c <main+0x182>
    197a:	e1 c1       	rjmp	.+962    	; 0x1d3e <main+0x544>

			HandleAfterSecond = false;
    197c:	10 92 6b 03 	sts	0x036B, r1	; 0x80036b <HandleAfterSecond>
		}
		
		if (Rx.isDataReceived) Receive();
    1980:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <Rx+0xc>
    1984:	81 11       	cpse	r24, r1
    1986:	7c c0       	rjmp	.+248    	; 0x1a80 <main+0x286>
		
		wdt_reset();
    1988:	a8 95       	wdr

	Initialization();
	
	while(1)
	{	
		if (Convert.done)
    198a:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <Convert+0x2>
    198e:	88 23       	and	r24, r24
    1990:	d1 f0       	breq	.+52     	; 0x19c6 <main+0x1cc>
		{
			tension = Convert.value*1.953125;
    1992:	60 91 53 03 	lds	r22, 0x0353	; 0x800353 <Convert>
    1996:	70 91 54 03 	lds	r23, 0x0354	; 0x800354 <Convert+0x1>
    199a:	07 2e       	mov	r0, r23
    199c:	00 0c       	add	r0, r0
    199e:	88 0b       	sbc	r24, r24
    19a0:	99 0b       	sbc	r25, r25
    19a2:	0e 94 03 12 	call	0x2406	; 0x2406 <__floatsisf>
    19a6:	20 e0       	ldi	r18, 0x00	; 0
    19a8:	30 e0       	ldi	r19, 0x00	; 0
    19aa:	4a ef       	ldi	r20, 0xFA	; 250
    19ac:	5f e3       	ldi	r21, 0x3F	; 63
    19ae:	0e 94 8f 12 	call	0x251e	; 0x251e <__mulsf3>
    19b2:	60 93 b4 01 	sts	0x01B4, r22	; 0x8001b4 <tension.2526>
    19b6:	70 93 b5 01 	sts	0x01B5, r23	; 0x8001b5 <tension.2526+0x1>
    19ba:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <tension.2526+0x2>
    19be:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <tension.2526+0x3>
			Convert.done = false;
    19c2:	10 92 55 03 	sts	0x0355, r1	; 0x800355 <Convert+0x2>
		}
		
		if (HandleAfter8ms)
    19c6:	80 91 69 03 	lds	r24, 0x0369	; 0x800369 <HandleAfter8ms>
    19ca:	88 23       	and	r24, r24
    19cc:	d9 f0       	breq	.+54     	; 0x1a04 <main+0x20a>
		{
			if (DisplayMode == Current)	 Print(&assembling);	  
    19ce:	80 91 67 03 	lds	r24, 0x0367	; 0x800367 <DisplayMode>
    19d2:	90 91 68 03 	lds	r25, 0x0368	; 0x800368 <DisplayMode+0x1>
    19d6:	84 30       	cpi	r24, 0x04	; 4
    19d8:	91 05       	cpc	r25, r1
    19da:	09 f4       	brne	.+2      	; 0x19de <main+0x1e4>
    19dc:	7f c1       	rjmp	.+766    	; 0x1cdc <main+0x4e2>
			if (DisplayMode == Settings) Print(&Pointers[IndexCurrentSetting]);	
    19de:	87 30       	cpi	r24, 0x07	; 7
    19e0:	91 05       	cpc	r25, r1
    19e2:	09 f4       	brne	.+2      	; 0x19e6 <main+0x1ec>
    19e4:	87 c1       	rjmp	.+782    	; 0x1cf4 <main+0x4fa>
			if (DisplayMode == Setting)	 Print(&ChangableValue);	  
    19e6:	83 30       	cpi	r24, 0x03	; 3
    19e8:	91 05       	cpc	r25, r1
    19ea:	09 f4       	brne	.+2      	; 0x19ee <main+0x1f4>
    19ec:	95 c1       	rjmp	.+810    	; 0x1d18 <main+0x51e>
			if (DisplayMode == Off && (Check(PORTC, PORTC4) || Check(PORTC, PORTC5))) PORTC &= 0xC0;  
    19ee:	89 2b       	or	r24, r25
    19f0:	39 f4       	brne	.+14     	; 0x1a00 <main+0x206>
    19f2:	44 99       	sbic	0x08, 4	; 8
    19f4:	02 c0       	rjmp	.+4      	; 0x19fa <main+0x200>
    19f6:	45 9b       	sbis	0x08, 5	; 8
    19f8:	03 c0       	rjmp	.+6      	; 0x1a00 <main+0x206>
    19fa:	88 b1       	in	r24, 0x08	; 8
    19fc:	80 7c       	andi	r24, 0xC0	; 192
    19fe:	88 b9       	out	0x08, r24	; 8
			
			HandleAfter8ms = false;
    1a00:	10 92 69 03 	sts	0x0369, r1	; 0x800369 <HandleAfter8ms>
		}
		
		if (HandleAfter200ms)
    1a04:	80 91 6a 03 	lds	r24, 0x036A	; 0x80036a <HandleAfter200ms>
    1a08:	88 23       	and	r24, r24
    1a0a:	71 f1       	breq	.+92     	; 0x1a68 <main+0x26e>
		{	
			if (IsRun) Converter(On);
    1a0c:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <IsRun>
    1a10:	88 23       	and	r24, r24
    1a12:	29 f0       	breq	.+10     	; 0x1a1e <main+0x224>
void Converter(unsigned short option)
{
	switch (option)
	{
		case On:
		High(ADCSRA, ADSC);
    1a14:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1a18:	80 64       	ori	r24, 0x40	; 64
    1a1a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
		
		if (HandleAfter200ms)
		{	
			if (IsRun) Converter(On);
			
			 ControlButtons();	   
    1a1e:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <ControlButtons>
			 ControlModes();	   
    1a22:	0e 94 20 09 	call	0x1240	; 0x1240 <ControlModes>
			 
			 if (InterfaceMode == Setting)
    1a26:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <InterfaceMode>
    1a2a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <InterfaceMode+0x1>
    1a2e:	83 30       	cpi	r24, 0x03	; 3
    1a30:	91 05       	cpc	r25, r1
    1a32:	09 f4       	brne	.+2      	; 0x1a36 <main+0x23c>
    1a34:	56 c0       	rjmp	.+172    	; 0x1ae2 <main+0x2e8>
				 if (Blink) DisplayMode = Off;
				 else DisplayMode = Setting;
				 Blink = !Blink;
			 }
			 
			 if (InterfaceMode == Common)   ControlCommon();	  
    1a36:	86 30       	cpi	r24, 0x06	; 6
    1a38:	91 05       	cpc	r25, r1
    1a3a:	09 f4       	brne	.+2      	; 0x1a3e <main+0x244>
    1a3c:	3c c1       	rjmp	.+632    	; 0x1cb6 <main+0x4bc>
			 if (InterfaceMode == Settings) ControlSettings();
    1a3e:	07 97       	sbiw	r24, 0x07	; 7
    1a40:	09 f4       	brne	.+2      	; 0x1a44 <main+0x24a>
    1a42:	42 c1       	rjmp	.+644    	; 0x1cc8 <main+0x4ce>
			 if (InterfaceMode == Setting)  ControlSetting();
			 
			 if (SettingExitCount > 0 && BtnMinus) SettingExitCount = 0;  
    1a44:	80 91 61 03 	lds	r24, 0x0361	; 0x800361 <SettingExitCount>
    1a48:	90 91 62 03 	lds	r25, 0x0362	; 0x800362 <SettingExitCount+0x1>
    1a4c:	89 2b       	or	r24, r25
    1a4e:	11 f0       	breq	.+4      	; 0x1a54 <main+0x25a>
    1a50:	4f 99       	sbic	0x09, 7	; 9
    1a52:	6b c1       	rjmp	.+726    	; 0x1d2a <main+0x530>
			 
			 if (ManualControl && BtnPlus && BtnMinus)	 
    1a54:	80 91 5c 03 	lds	r24, 0x035C	; 0x80035c <ManualControl>
    1a58:	88 23       	and	r24, r24
    1a5a:	21 f0       	breq	.+8      	; 0x1a64 <main+0x26a>
    1a5c:	4e 9b       	sbis	0x09, 6	; 9
    1a5e:	02 c0       	rjmp	.+4      	; 0x1a64 <main+0x26a>
    1a60:	4f 99       	sbic	0x09, 7	; 9
    1a62:	70 c1       	rjmp	.+736    	; 0x1d44 <main+0x54a>
			 {
				 PulseOff;
				 ManualControl = false;
			 }
			 
			 HandleAfter200ms = false;
    1a64:	10 92 6a 03 	sts	0x036A, r1	; 0x80036a <HandleAfter200ms>
		}
		
		if (envRequest)
    1a68:	11 11       	cpse	r17, r1
    1a6a:	0d c0       	rjmp	.+26     	; 0x1a86 <main+0x28c>
			GetEnvironment(&temperature, &humidity);
			envRequest = false;
		}
		
		
		if (HandleAfterSecond)	 
    1a6c:	80 91 6b 03 	lds	r24, 0x036B	; 0x80036b <HandleAfterSecond>
    1a70:	81 11       	cpse	r24, r1
    1a72:	e6 ce       	rjmp	.-564    	; 0x1840 <main+0x46>
    1a74:	10 e0       	ldi	r17, 0x00	; 0
			if (DisplayMode == Error) PrintError();

			HandleAfterSecond = false;
		}
		
		if (Rx.isDataReceived) Receive();
    1a76:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <Rx+0xc>
    1a7a:	88 23       	and	r24, r24
    1a7c:	09 f4       	brne	.+2      	; 0x1a80 <main+0x286>
    1a7e:	84 cf       	rjmp	.-248    	; 0x1988 <main+0x18e>
    1a80:	0e 94 74 06 	call	0xce8	; 0xce8 <Receive>
    1a84:	81 cf       	rjmp	.-254    	; 0x1988 <main+0x18e>
			 HandleAfter200ms = false;
		}
		
		if (envRequest)
		{
			GetEnvironment(&temperature, &humidity);
    1a86:	6c ea       	ldi	r22, 0xAC	; 172
    1a88:	71 e0       	ldi	r23, 0x01	; 1
    1a8a:	80 eb       	ldi	r24, 0xB0	; 176
    1a8c:	91 e0       	ldi	r25, 0x01	; 1
    1a8e:	0e 94 78 00 	call	0xf0	; 0xf0 <GetEnvironment>
    1a92:	ec cf       	rjmp	.-40     	; 0x1a6c <main+0x272>
				measureDelayCount = MEASURE_DELAY;
				a = 0; b = 0; assembling = 0;
				continue;
			}
			
			if (!Running && IsRun) IsRun = Stop();	
    1a94:	18 9b       	sbis	0x03, 0	; 3
    1a96:	55 c0       	rjmp	.+170    	; 0x1b42 <main+0x348>
    1a98:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <IsRun>
    1a9c:	81 11       	cpse	r24, r1
    1a9e:	4a c1       	rjmp	.+660    	; 0x1d34 <main+0x53a>
    1aa0:	10 e0       	ldi	r17, 0x00	; 0
    1aa2:	38 cf       	rjmp	.-400    	; 0x1914 <main+0x11a>
				{
					DisplayMode = Current;
					DisplayTimeoutCount = DisplayTimeout;
				}
				else 
					DisplayMode = Off;
    1aa4:	10 92 68 03 	sts	0x0368, r1	; 0x800368 <DisplayMode+0x1>
    1aa8:	10 92 67 03 	sts	0x0367, r1	; 0x800367 <DisplayMode>
    1aac:	05 cf       	rjmp	.-502    	; 0x18b8 <main+0xbe>
				if (!DisplayTimeoutCount) DisplayMode = Off;
			}
			
			if (Rx.isConnected) 
			{
				Rx.disconnectCount++;
    1aae:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <Rx+0xa>
    1ab2:	90 91 4f 03 	lds	r25, 0x034F	; 0x80034f <Rx+0xb>
    1ab6:	01 96       	adiw	r24, 0x01	; 1
    1ab8:	90 93 4f 03 	sts	0x034F, r25	; 0x80034f <Rx+0xb>
    1abc:	80 93 4e 03 	sts	0x034E, r24	; 0x80034e <Rx+0xa>
				
				if (Rx.isRequested)
    1ac0:	20 91 52 03 	lds	r18, 0x0352	; 0x800352 <Rx+0xe>
    1ac4:	22 23       	and	r18, r18
    1ac6:	09 f4       	brne	.+2      	; 0x1aca <main+0x2d0>
    1ac8:	4a cf       	rjmp	.-364    	; 0x195e <main+0x164>
				{
					if (IsRun && isUpdated)
    1aca:	20 91 56 03 	lds	r18, 0x0356	; 0x800356 <IsRun>
    1ace:	22 23       	and	r18, r18
    1ad0:	09 f4       	brne	.+2      	; 0x1ad4 <main+0x2da>
    1ad2:	e9 c0       	rjmp	.+466    	; 0x1ca6 <main+0x4ac>
    1ad4:	00 23       	and	r16, r16
    1ad6:	09 f4       	brne	.+2      	; 0x1ada <main+0x2e0>
    1ad8:	e6 c0       	rjmp	.+460    	; 0x1ca6 <main+0x4ac>
					{
						 //Transmit(&a, &b, &r);
						 isUpdated = false;
    1ada:	00 e0       	ldi	r16, 0x00	; 0
					}
					else TxChar('$');
					
					Rx.isRequested = false;
    1adc:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <Rx+0xe>
    1ae0:	3e cf       	rjmp	.-388    	; 0x195e <main+0x164>
			 ControlButtons();	   
			 ControlModes();	   
			 
			 if (InterfaceMode == Setting)
			 {
				 if (Blink) DisplayMode = Off;
    1ae2:	20 91 5e 03 	lds	r18, 0x035E	; 0x80035e <Blink>
    1ae6:	22 23       	and	r18, r18
    1ae8:	09 f4       	brne	.+2      	; 0x1aec <main+0x2f2>
    1aea:	d8 c0       	rjmp	.+432    	; 0x1c9c <main+0x4a2>
    1aec:	10 92 68 03 	sts	0x0368, r1	; 0x800368 <DisplayMode+0x1>
    1af0:	10 92 67 03 	sts	0x0367, r1	; 0x800367 <DisplayMode>
				 else DisplayMode = Setting;
				 Blink = !Blink;
    1af4:	22 25       	eor	r18, r2
    1af6:	20 93 5e 03 	sts	0x035E, r18	; 0x80035e <Blink>
			 }
			 
			 if (InterfaceMode == Common)   ControlCommon();	  
			 if (InterfaceMode == Settings) ControlSettings();
			 if (InterfaceMode == Setting)  ControlSetting();
    1afa:	0e 94 80 0a 	call	0x1500	; 0x1500 <ControlSetting>
    1afe:	a2 cf       	rjmp	.-188    	; 0x1a44 <main+0x24a>
		
		
		if (HandleAfterSecond)	 
		{		
			if (!BtnMinus && InterfaceMode == Settings) SettingExitCount++;
			if (InterfaceMode == Settings || InterfaceMode == Setting) SettingAutoExitCount++;
    1b00:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <InterfaceMode>
    1b04:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <InterfaceMode+0x1>
    1b08:	87 30       	cpi	r24, 0x07	; 7
    1b0a:	91 05       	cpc	r25, r1
    1b0c:	09 f0       	breq	.+2      	; 0x1b10 <main+0x316>
    1b0e:	a2 ce       	rjmp	.-700    	; 0x1854 <main+0x5a>
    1b10:	80 91 61 03 	lds	r24, 0x0361	; 0x800361 <SettingExitCount>
    1b14:	90 91 62 03 	lds	r25, 0x0362	; 0x800362 <SettingExitCount+0x1>
    1b18:	20 91 5f 03 	lds	r18, 0x035F	; 0x80035f <SettingAutoExitCount>
    1b1c:	30 91 60 03 	lds	r19, 0x0360	; 0x800360 <SettingAutoExitCount+0x1>
    1b20:	2f 5f       	subi	r18, 0xFF	; 255
    1b22:	3f 4f       	sbci	r19, 0xFF	; 255
    1b24:	30 93 60 03 	sts	0x0360, r19	; 0x800360 <SettingAutoExitCount+0x1>
    1b28:	20 93 5f 03 	sts	0x035F, r18	; 0x80035f <SettingAutoExitCount>
    1b2c:	9a ce       	rjmp	.-716    	; 0x1862 <main+0x68>
		}
		
		
		if (HandleAfterSecond)	 
		{		
			if (!BtnMinus && InterfaceMode == Settings) SettingExitCount++;
    1b2e:	80 91 61 03 	lds	r24, 0x0361	; 0x800361 <SettingExitCount>
    1b32:	90 91 62 03 	lds	r25, 0x0362	; 0x800362 <SettingExitCount+0x1>
    1b36:	01 96       	adiw	r24, 0x01	; 1
    1b38:	90 93 62 03 	sts	0x0362, r25	; 0x800362 <SettingExitCount+0x1>
    1b3c:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <SettingExitCount>
    1b40:	eb cf       	rjmp	.-42     	; 0x1b18 <main+0x31e>
    1b42:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <IsRun>
				continue;
			}
			
			if (!Running && IsRun) IsRun = Stop();	
			
			if (IsRun)						 
    1b46:	88 23       	and	r24, r24
    1b48:	09 f4       	brne	.+2      	; 0x1b4c <main+0x352>
    1b4a:	aa cf       	rjmp	.-172    	; 0x1aa0 <main+0x2a6>
			{
				LedInv;					
    1b4c:	85 b1       	in	r24, 0x05	; 5
    1b4e:	83 25       	eor	r24, r3
    1b50:	85 b9       	out	0x05, r24	; 5

				if (!measureDelayCount)
    1b52:	c1 14       	cp	r12, r1
    1b54:	d1 04       	cpc	r13, r1
    1b56:	09 f0       	breq	.+2      	; 0x1b5a <main+0x360>
    1b58:	cb ce       	rjmp	.-618    	; 0x18f0 <main+0xf6>
				{		    
					a = KalmanA(SecantA(((TCNT0 + Timer0_OverflowCount*256)/DividerA)*FactorA, false), false);
    1b5a:	86 b5       	in	r24, 0x26	; 38
    1b5c:	50 90 70 03 	lds	r5, 0x0370	; 0x800370 <Timer0_OverflowCount>
    1b60:	41 2c       	mov	r4, r1
    1b62:	92 01       	movw	r18, r4
    1b64:	28 0f       	add	r18, r24
    1b66:	31 1d       	adc	r19, r1
    1b68:	c9 01       	movw	r24, r18
    1b6a:	60 91 86 03 	lds	r22, 0x0386	; 0x800386 <DividerA>
    1b6e:	70 91 87 03 	lds	r23, 0x0387	; 0x800387 <DividerA+0x1>
    1b72:	0e 94 57 13 	call	0x26ae	; 0x26ae <__udivmodhi4>
    1b76:	80 e0       	ldi	r24, 0x00	; 0
    1b78:	90 e0       	ldi	r25, 0x00	; 0
    1b7a:	0e 94 01 12 	call	0x2402	; 0x2402 <__floatunsisf>
    1b7e:	20 91 8c 03 	lds	r18, 0x038C	; 0x80038c <FactorA>
    1b82:	30 91 8d 03 	lds	r19, 0x038D	; 0x80038d <FactorA+0x1>
    1b86:	40 91 8e 03 	lds	r20, 0x038E	; 0x80038e <FactorA+0x2>
    1b8a:	50 91 8f 03 	lds	r21, 0x038F	; 0x80038f <FactorA+0x3>
    1b8e:	0e 94 8f 12 	call	0x251e	; 0x251e <__mulsf3>
    1b92:	0e 94 d2 11 	call	0x23a4	; 0x23a4 <__fixunssfsi>
    1b96:	dc 01       	movw	r26, r24
    1b98:	cb 01       	movw	r24, r22
    1b9a:	60 e0       	ldi	r22, 0x00	; 0
    1b9c:	0e 94 81 07 	call	0xf02	; 0xf02 <SecantA>
    1ba0:	60 e0       	ldi	r22, 0x00	; 0
    1ba2:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <KalmanA>
    1ba6:	9e 83       	std	Y+6, r25	; 0x06
    1ba8:	8d 83       	std	Y+5, r24	; 0x05
					b = KalmanB(((TCNT1 + Timer1_OverflowCount*65535L)/DividerB)*FactorB, false);	
    1baa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    1bae:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
    1bb2:	20 91 6e 03 	lds	r18, 0x036E	; 0x80036e <Timer1_OverflowCount>
    1bb6:	30 91 6f 03 	lds	r19, 0x036F	; 0x80036f <Timer1_OverflowCount+0x1>
    1bba:	af ef       	ldi	r26, 0xFF	; 255
    1bbc:	bf ef       	ldi	r27, 0xFF	; 255
    1bbe:	0e 94 90 13 	call	0x2720	; 0x2720 <__umulhisi3>
    1bc2:	64 0f       	add	r22, r20
    1bc4:	75 1f       	adc	r23, r21
    1bc6:	81 1d       	adc	r24, r1
    1bc8:	91 1d       	adc	r25, r1
    1bca:	20 91 84 03 	lds	r18, 0x0384	; 0x800384 <DividerB>
    1bce:	30 91 85 03 	lds	r19, 0x0385	; 0x800385 <DividerB+0x1>
    1bd2:	40 e0       	ldi	r20, 0x00	; 0
    1bd4:	50 e0       	ldi	r21, 0x00	; 0
    1bd6:	0e 94 6b 13 	call	0x26d6	; 0x26d6 <__divmodsi4>
    1bda:	ca 01       	movw	r24, r20
    1bdc:	b9 01       	movw	r22, r18
    1bde:	0e 94 03 12 	call	0x2406	; 0x2406 <__floatsisf>
    1be2:	20 91 88 03 	lds	r18, 0x0388	; 0x800388 <FactorB>
    1be6:	30 91 89 03 	lds	r19, 0x0389	; 0x800389 <FactorB+0x1>
    1bea:	40 91 8a 03 	lds	r20, 0x038A	; 0x80038a <FactorB+0x2>
    1bee:	50 91 8b 03 	lds	r21, 0x038B	; 0x80038b <FactorB+0x3>
    1bf2:	0e 94 8f 12 	call	0x251e	; 0x251e <__mulsf3>
    1bf6:	0e 94 cb 11 	call	0x2396	; 0x2396 <__fixsfsi>
    1bfa:	dc 01       	movw	r26, r24
    1bfc:	cb 01       	movw	r24, r22
    1bfe:	60 e0       	ldi	r22, 0x00	; 0
    1c00:	0e 94 13 10 	call	0x2026	; 0x2026 <KalmanB>
    1c04:	9c 83       	std	Y+4, r25	; 0x04
    1c06:	8b 83       	std	Y+3, r24	; 0x03
					assembling = 0; // equation wasnt delivered;
    1c08:	1a 82       	std	Y+2, r1	; 0x02
    1c0a:	19 82       	std	Y+1, r1	; 0x01
					if (IsTransmit) Transmit(&a, &b, &tension, &temperature, &humidity);
    1c0c:	80 91 78 03 	lds	r24, 0x0378	; 0x800378 <IsTransmit>
    1c10:	90 91 79 03 	lds	r25, 0x0379	; 0x800379 <IsTransmit+0x1>
    1c14:	89 2b       	or	r24, r25
    1c16:	09 f0       	breq	.+2      	; 0x1c1a <main+0x420>
    1c18:	a2 c0       	rjmp	.+324    	; 0x1d5e <main+0x564>
					isUpdated = true;
					envRequest = true;													    							   
    1c1a:	11 e0       	ldi	r17, 0x01	; 1
				{		    
					a = KalmanA(SecantA(((TCNT0 + Timer0_OverflowCount*256)/DividerA)*FactorA, false), false);
					b = KalmanB(((TCNT1 + Timer1_OverflowCount*65535L)/DividerB)*FactorB, false);	
					assembling = 0; // equation wasnt delivered;
					if (IsTransmit) Transmit(&a, &b, &tension, &temperature, &humidity);
					isUpdated = true;
    1c1c:	01 e0       	ldi	r16, 0x01	; 1
					envRequest = true;													    							   
				}
				
				if (!startDelayCount)
    1c1e:	e1 14       	cp	r14, r1
    1c20:	f1 04       	cpc	r15, r1
    1c22:	09 f0       	breq	.+2      	; 0x1c26 <main+0x42c>
    1c24:	6a ce       	rjmp	.-812    	; 0x18fa <main+0x100>
				{
					CountrolInstant(&a, &b);	
    1c26:	be 01       	movw	r22, r28
    1c28:	6d 5f       	subi	r22, 0xFD	; 253
    1c2a:	7f 4f       	sbci	r23, 0xFF	; 255
    1c2c:	ce 01       	movw	r24, r28
    1c2e:	05 96       	adiw	r24, 0x05	; 5
    1c30:	0e 94 99 09 	call	0x1332	; 0x1332 <CountrolInstant>
		stepsInterval = 0;
		overtimeCount = 0;
		return;
	}
	
	if (stepsInterval)	 
    1c34:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <stepsInterval.2461>
    1c38:	90 91 cb 01 	lds	r25, 0x01CB	; 0x8001cb <stepsInterval.2461+0x1>
    1c3c:	00 97       	sbiw	r24, 0x00	; 0
    1c3e:	09 f4       	brne	.+2      	; 0x1c42 <main+0x448>
    1c40:	89 c0       	rjmp	.+274    	; 0x1d54 <main+0x55a>
	{
		stepsInterval--;
    1c42:	01 97       	sbiw	r24, 0x01	; 1
    1c44:	90 93 cb 01 	sts	0x01CB, r25	; 0x8001cb <stepsInterval.2461+0x1>
    1c48:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <stepsInterval.2461>
    1c4c:	56 ce       	rjmp	.-852    	; 0x18fa <main+0x100>
    1c4e:	0e 94 54 01 	call	0x2a8	; 0x2a8 <Timer0.part.0>
    1c52:	0e 94 5d 01 	call	0x2ba	; 0x2ba <Timer1.part.1>

bool Start()
{
	Timer0(true);
	Timer1(true);
	CurrentError = Off;
    1c56:	10 92 59 03 	sts	0x0359, r1	; 0x800359 <CurrentError+0x1>
    1c5a:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <CurrentError>
	DisplayMode = Current;
    1c5e:	90 92 68 03 	sts	0x0368, r9	; 0x800368 <DisplayMode+0x1>
    1c62:	80 92 67 03 	sts	0x0367, r8	; 0x800367 <DisplayMode>
	DisplayTimeoutCount = DisplayTimeout;
    1c66:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <DisplayTimeout>
    1c6a:	90 91 7b 03 	lds	r25, 0x037B	; 0x80037b <DisplayTimeout+0x1>
    1c6e:	90 93 64 03 	sts	0x0364, r25	; 0x800364 <DisplayTimeoutCount+0x1>
    1c72:	80 93 63 03 	sts	0x0363, r24	; 0x800363 <DisplayTimeoutCount>
				LoadSettings();
			}
			
			if (Running && !IsRun) 		  
			{
				IsRun = Start();
    1c76:	20 92 56 03 	sts	0x0356, r2	; 0x800356 <IsRun>
				HandleAfterSecond = false;
    1c7a:	10 92 6b 03 	sts	0x036B, r1	; 0x80036b <HandleAfterSecond>
				startDelayCount = StartDelay;
    1c7e:	e0 90 90 03 	lds	r14, 0x0390	; 0x800390 <StartDelay>
    1c82:	f0 90 91 03 	lds	r15, 0x0391	; 0x800391 <StartDelay+0x1>
				measureDelayCount = MEASURE_DELAY;
				a = 0; b = 0; assembling = 0;
    1c86:	1e 82       	std	Y+6, r1	; 0x06
    1c88:	1d 82       	std	Y+5, r1	; 0x05
    1c8a:	1c 82       	std	Y+4, r1	; 0x04
    1c8c:	1b 82       	std	Y+3, r1	; 0x03
    1c8e:	1a 82       	std	Y+2, r1	; 0x02
    1c90:	19 82       	std	Y+1, r1	; 0x01
				continue;
    1c92:	10 e0       	ldi	r17, 0x00	; 0
			if (Running && !IsRun) 		  
			{
				IsRun = Start();
				HandleAfterSecond = false;
				startDelayCount = StartDelay;
				measureDelayCount = MEASURE_DELAY;
    1c94:	8e e1       	ldi	r24, 0x1E	; 30
    1c96:	c8 2e       	mov	r12, r24
    1c98:	d1 2c       	mov	r13, r1
				a = 0; b = 0; assembling = 0;
				continue;
    1c9a:	77 ce       	rjmp	.-786    	; 0x198a <main+0x190>
			 ControlModes();	   
			 
			 if (InterfaceMode == Setting)
			 {
				 if (Blink) DisplayMode = Off;
				 else DisplayMode = Setting;
    1c9c:	90 93 68 03 	sts	0x0368, r25	; 0x800368 <DisplayMode+0x1>
    1ca0:	80 93 67 03 	sts	0x0367, r24	; 0x800367 <DisplayMode>
    1ca4:	27 cf       	rjmp	.-434    	; 0x1af4 <main+0x2fa>
					if (IsRun && isUpdated)
					{
						 //Transmit(&a, &b, &r);
						 isUpdated = false;
					}
					else TxChar('$');
    1ca6:	84 e2       	ldi	r24, 0x24	; 36
    1ca8:	0e 94 c2 10 	call	0x2184	; 0x2184 <TxChar>
    1cac:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <Rx+0xa>
    1cb0:	90 91 4f 03 	lds	r25, 0x034F	; 0x80034f <Rx+0xb>
    1cb4:	13 cf       	rjmp	.-474    	; 0x1adc <main+0x2e2>
				 if (Blink) DisplayMode = Off;
				 else DisplayMode = Setting;
				 Blink = !Blink;
			 }
			 
			 if (InterfaceMode == Common)   ControlCommon();	  
    1cb6:	0e 94 01 0a 	call	0x1402	; 0x1402 <ControlCommon>
			 if (InterfaceMode == Settings) ControlSettings();
    1cba:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <InterfaceMode>
    1cbe:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <InterfaceMode+0x1>
    1cc2:	87 30       	cpi	r24, 0x07	; 7
    1cc4:	91 05       	cpc	r25, r1
    1cc6:	31 f4       	brne	.+12     	; 0x1cd4 <main+0x4da>
    1cc8:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <ControlSettings>
    1ccc:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <InterfaceMode>
    1cd0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <InterfaceMode+0x1>
			 if (InterfaceMode == Setting)  ControlSetting();
    1cd4:	03 97       	sbiw	r24, 0x03	; 3
    1cd6:	09 f0       	breq	.+2      	; 0x1cda <main+0x4e0>
    1cd8:	b5 ce       	rjmp	.-662    	; 0x1a44 <main+0x24a>
    1cda:	0f cf       	rjmp	.-482    	; 0x1afa <main+0x300>
			Convert.done = false;
		}
		
		if (HandleAfter8ms)
		{
			if (DisplayMode == Current)	 Print(&assembling);	  
    1cdc:	ce 01       	movw	r24, r28
    1cde:	01 96       	adiw	r24, 0x01	; 1
    1ce0:	0e 94 2e 08 	call	0x105c	; 0x105c <Print>
    1ce4:	80 91 67 03 	lds	r24, 0x0367	; 0x800367 <DisplayMode>
    1ce8:	90 91 68 03 	lds	r25, 0x0368	; 0x800368 <DisplayMode+0x1>
			if (DisplayMode == Settings) Print(&Pointers[IndexCurrentSetting]);	
    1cec:	87 30       	cpi	r24, 0x07	; 7
    1cee:	91 05       	cpc	r25, r1
    1cf0:	09 f0       	breq	.+2      	; 0x1cf4 <main+0x4fa>
    1cf2:	79 ce       	rjmp	.-782    	; 0x19e6 <main+0x1ec>
    1cf4:	80 91 65 03 	lds	r24, 0x0365	; 0x800365 <IndexCurrentSetting>
    1cf8:	90 91 66 03 	lds	r25, 0x0366	; 0x800366 <IndexCurrentSetting+0x1>
    1cfc:	88 0f       	add	r24, r24
    1cfe:	99 1f       	adc	r25, r25
    1d00:	86 5d       	subi	r24, 0xD6	; 214
    1d02:	9e 4f       	sbci	r25, 0xFE	; 254
    1d04:	0e 94 2e 08 	call	0x105c	; 0x105c <Print>
    1d08:	80 91 67 03 	lds	r24, 0x0367	; 0x800367 <DisplayMode>
    1d0c:	90 91 68 03 	lds	r25, 0x0368	; 0x800368 <DisplayMode+0x1>
			if (DisplayMode == Setting)	 Print(&ChangableValue);	  
    1d10:	83 30       	cpi	r24, 0x03	; 3
    1d12:	91 05       	cpc	r25, r1
    1d14:	09 f0       	breq	.+2      	; 0x1d18 <main+0x51e>
    1d16:	6b ce       	rjmp	.-810    	; 0x19ee <main+0x1f4>
    1d18:	8e e9       	ldi	r24, 0x9E	; 158
    1d1a:	93 e0       	ldi	r25, 0x03	; 3
    1d1c:	0e 94 2e 08 	call	0x105c	; 0x105c <Print>
    1d20:	80 91 67 03 	lds	r24, 0x0367	; 0x800367 <DisplayMode>
    1d24:	90 91 68 03 	lds	r25, 0x0368	; 0x800368 <DisplayMode+0x1>
    1d28:	62 ce       	rjmp	.-828    	; 0x19ee <main+0x1f4>
			 
			 if (InterfaceMode == Common)   ControlCommon();	  
			 if (InterfaceMode == Settings) ControlSettings();
			 if (InterfaceMode == Setting)  ControlSetting();
			 
			 if (SettingExitCount > 0 && BtnMinus) SettingExitCount = 0;  
    1d2a:	10 92 62 03 	sts	0x0362, r1	; 0x800362 <SettingExitCount+0x1>
    1d2e:	10 92 61 03 	sts	0x0361, r1	; 0x800361 <SettingExitCount>
    1d32:	90 ce       	rjmp	.-736    	; 0x1a54 <main+0x25a>
				measureDelayCount = MEASURE_DELAY;
				a = 0; b = 0; assembling = 0;
				continue;
			}
			
			if (!Running && IsRun) IsRun = Stop();	
    1d34:	0e 94 9f 0b 	call	0x173e	; 0x173e <Stop>
    1d38:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <IsRun>
    1d3c:	04 cf       	rjmp	.-504    	; 0x1b46 <main+0x34c>
			{
				Rx.isConnected = false;
				Rx.disconnectCount = 0;
			}
			
			if (DisplayMode == Error) PrintError();
    1d3e:	0e 94 d6 08 	call	0x11ac	; 0x11ac <PrintError>
    1d42:	1c ce       	rjmp	.-968    	; 0x197c <main+0x182>
			 
			 if (SettingExitCount > 0 && BtnMinus) SettingExitCount = 0;  
			 
			 if (ManualControl && BtnPlus && BtnMinus)	 
			 {
				 PulseOff;
    1d44:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1d48:	8f 7d       	andi	r24, 0xDF	; 223
    1d4a:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
				 ManualControl = false;
    1d4e:	10 92 5c 03 	sts	0x035C, r1	; 0x80035c <ManualControl>
    1d52:	88 ce       	rjmp	.-752    	; 0x1a64 <main+0x26a>
    1d54:	ce 01       	movw	r24, r28
    1d56:	01 96       	adiw	r24, 0x01	; 1
    1d58:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <SetDirection.part.5>
    1d5c:	ce cd       	rjmp	.-1124   	; 0x18fa <main+0x100>
				if (!measureDelayCount)
				{		    
					a = KalmanA(SecantA(((TCNT0 + Timer0_OverflowCount*256)/DividerA)*FactorA, false), false);
					b = KalmanB(((TCNT1 + Timer1_OverflowCount*65535L)/DividerB)*FactorB, false);	
					assembling = 0; // equation wasnt delivered;
					if (IsTransmit) Transmit(&a, &b, &tension, &temperature, &humidity);
    1d5e:	0c ea       	ldi	r16, 0xAC	; 172
    1d60:	11 e0       	ldi	r17, 0x01	; 1
    1d62:	20 eb       	ldi	r18, 0xB0	; 176
    1d64:	31 e0       	ldi	r19, 0x01	; 1
    1d66:	44 eb       	ldi	r20, 0xB4	; 180
    1d68:	51 e0       	ldi	r21, 0x01	; 1
    1d6a:	be 01       	movw	r22, r28
    1d6c:	6d 5f       	subi	r22, 0xFD	; 253
    1d6e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d70:	ce 01       	movw	r24, r28
    1d72:	05 96       	adiw	r24, 0x05	; 5
    1d74:	0e 94 bd 06 	call	0xd7a	; 0xd7a <Transmit>
					isUpdated = true;
					envRequest = true;													    							   
    1d78:	11 e0       	ldi	r17, 0x01	; 1
				{		    
					a = KalmanA(SecantA(((TCNT0 + Timer0_OverflowCount*256)/DividerA)*FactorA, false), false);
					b = KalmanB(((TCNT1 + Timer1_OverflowCount*65535L)/DividerB)*FactorB, false);	
					assembling = 0; // equation wasnt delivered;
					if (IsTransmit) Transmit(&a, &b, &tension, &temperature, &humidity);
					isUpdated = true;
    1d7a:	01 e0       	ldi	r16, 0x01	; 1
    1d7c:	ba cd       	rjmp	.-1164   	; 0x18f2 <main+0xf8>

00001d7e <StandartDeviation>:
	
	result += value - buffer[index];
	buffer[index] = value;
	index = (index + 1) % 16;
	
	return result/16.f;
    1d7e:	4f 92       	push	r4
    1d80:	5f 92       	push	r5
    1d82:	6f 92       	push	r6
    1d84:	7f 92       	push	r7
    1d86:	af 92       	push	r10
    1d88:	bf 92       	push	r11
    1d8a:	cf 92       	push	r12
    1d8c:	df 92       	push	r13
    1d8e:	ef 92       	push	r14
    1d90:	ff 92       	push	r15
    1d92:	0f 93       	push	r16
    1d94:	1f 93       	push	r17
    1d96:	cf 93       	push	r28
    1d98:	df 93       	push	r29
    1d9a:	fb 01       	movw	r30, r22
    1d9c:	a0 80       	ld	r10, Z
    1d9e:	b1 80       	ldd	r11, Z+1	; 0x01
    1da0:	ec 01       	movw	r28, r24
    1da2:	8c 01       	movw	r16, r24
    1da4:	13 95       	inc	r17
    1da6:	c1 2c       	mov	r12, r1
    1da8:	d1 2c       	mov	r13, r1
    1daa:	76 01       	movw	r14, r12
    1dac:	21 c0       	rjmp	.+66     	; 0x1df0 <StandartDeviation+0x72>
    1dae:	07 2e       	mov	r0, r23
    1db0:	00 0c       	add	r0, r0
    1db2:	88 0b       	sbc	r24, r24
    1db4:	99 0b       	sbc	r25, r25
    1db6:	0e 94 03 12 	call	0x2406	; 0x2406 <__floatsisf>
    1dba:	2b 01       	movw	r4, r22
    1dbc:	3c 01       	movw	r6, r24
    1dbe:	c7 01       	movw	r24, r14
    1dc0:	b6 01       	movw	r22, r12
    1dc2:	0e 94 01 12 	call	0x2402	; 0x2402 <__floatunsisf>
    1dc6:	6b 01       	movw	r12, r22
    1dc8:	7c 01       	movw	r14, r24
    1dca:	a3 01       	movw	r20, r6
    1dcc:	92 01       	movw	r18, r4
    1dce:	c3 01       	movw	r24, r6
    1dd0:	b2 01       	movw	r22, r4
    1dd2:	0e 94 8f 12 	call	0x251e	; 0x251e <__mulsf3>
    1dd6:	9b 01       	movw	r18, r22
    1dd8:	ac 01       	movw	r20, r24
    1dda:	c7 01       	movw	r24, r14
    1ddc:	b6 01       	movw	r22, r12
    1dde:	0e 94 ed 10 	call	0x21da	; 0x21da <__addsf3>
    1de2:	0e 94 d2 11 	call	0x23a4	; 0x23a4 <__fixunssfsi>
    1de6:	6b 01       	movw	r12, r22
    1de8:	7c 01       	movw	r14, r24
    1dea:	0c 17       	cp	r16, r28
    1dec:	1d 07       	cpc	r17, r29
    1dee:	51 f0       	breq	.+20     	; 0x1e04 <StandartDeviation+0x86>
    1df0:	69 91       	ld	r22, Y+
    1df2:	79 91       	ld	r23, Y+
    1df4:	6a 19       	sub	r22, r10
    1df6:	7b 09       	sbc	r23, r11
    1df8:	77 ff       	sbrs	r23, 7
    1dfa:	d9 cf       	rjmp	.-78     	; 0x1dae <StandartDeviation+0x30>
    1dfc:	71 95       	neg	r23
    1dfe:	61 95       	neg	r22
    1e00:	71 09       	sbc	r23, r1
    1e02:	d5 cf       	rjmp	.-86     	; 0x1dae <StandartDeviation+0x30>
    1e04:	27 e0       	ldi	r18, 0x07	; 7
    1e06:	96 95       	lsr	r25
    1e08:	87 95       	ror	r24
    1e0a:	77 95       	ror	r23
    1e0c:	67 95       	ror	r22
    1e0e:	2a 95       	dec	r18
    1e10:	d1 f7       	brne	.-12     	; 0x1e06 <StandartDeviation+0x88>
    1e12:	0e 94 01 12 	call	0x2402	; 0x2402 <__floatunsisf>
    1e16:	0e 94 02 13 	call	0x2604	; 0x2604 <sqrt>
    1e1a:	9b 01       	movw	r18, r22
    1e1c:	ac 01       	movw	r20, r24
    1e1e:	0e 94 ed 10 	call	0x21da	; 0x21da <__addsf3>
    1e22:	0e 94 d2 11 	call	0x23a4	; 0x23a4 <__fixunssfsi>
    1e26:	cb 01       	movw	r24, r22
    1e28:	df 91       	pop	r29
    1e2a:	cf 91       	pop	r28
    1e2c:	1f 91       	pop	r17
    1e2e:	0f 91       	pop	r16
    1e30:	ff 90       	pop	r15
    1e32:	ef 90       	pop	r14
    1e34:	df 90       	pop	r13
    1e36:	cf 90       	pop	r12
    1e38:	bf 90       	pop	r11
    1e3a:	af 90       	pop	r10
    1e3c:	7f 90       	pop	r7
    1e3e:	6f 90       	pop	r6
    1e40:	5f 90       	pop	r5
    1e42:	4f 90       	pop	r4
    1e44:	08 95       	ret

00001e46 <RunningAverageA>:
    1e46:	0f 93       	push	r16
    1e48:	1f 93       	push	r17
    1e4a:	66 23       	and	r22, r22
    1e4c:	c9 f0       	breq	.+50     	; 0x1e80 <RunningAverageA+0x3a>
    1e4e:	10 92 b2 04 	sts	0x04B2, r1	; 0x8004b2 <result.1851>
    1e52:	10 92 b3 04 	sts	0x04B3, r1	; 0x8004b3 <result.1851+0x1>
    1e56:	10 92 b4 04 	sts	0x04B4, r1	; 0x8004b4 <result.1851+0x2>
    1e5a:	10 92 b5 04 	sts	0x04B5, r1	; 0x8004b5 <result.1851+0x3>
    1e5e:	10 92 b1 04 	sts	0x04B1, r1	; 0x8004b1 <index.1852+0x1>
    1e62:	10 92 b0 04 	sts	0x04B0, r1	; 0x8004b0 <index.1852>
    1e66:	e0 eb       	ldi	r30, 0xB0	; 176
    1e68:	f3 e0       	ldi	r31, 0x03	; 3
    1e6a:	11 92       	st	Z+, r1
    1e6c:	11 92       	st	Z+, r1
    1e6e:	84 e0       	ldi	r24, 0x04	; 4
    1e70:	e0 3b       	cpi	r30, 0xB0	; 176
    1e72:	f8 07       	cpc	r31, r24
    1e74:	d1 f7       	brne	.-12     	; 0x1e6a <RunningAverageA+0x24>
    1e76:	80 e0       	ldi	r24, 0x00	; 0
    1e78:	90 e0       	ldi	r25, 0x00	; 0
    1e7a:	1f 91       	pop	r17
    1e7c:	0f 91       	pop	r16
    1e7e:	08 95       	ret
    1e80:	e0 91 b0 04 	lds	r30, 0x04B0	; 0x8004b0 <index.1852>
    1e84:	f0 91 b1 04 	lds	r31, 0x04B1	; 0x8004b1 <index.1852+0x1>
    1e88:	ac 01       	movw	r20, r24
    1e8a:	60 e0       	ldi	r22, 0x00	; 0
    1e8c:	70 e0       	ldi	r23, 0x00	; 0
    1e8e:	df 01       	movw	r26, r30
    1e90:	aa 0f       	add	r26, r26
    1e92:	bb 1f       	adc	r27, r27
    1e94:	a0 55       	subi	r26, 0x50	; 80
    1e96:	bc 4f       	sbci	r27, 0xFC	; 252
    1e98:	2d 91       	ld	r18, X+
    1e9a:	3c 91       	ld	r19, X
    1e9c:	11 97       	sbiw	r26, 0x01	; 1
    1e9e:	42 1b       	sub	r20, r18
    1ea0:	53 0b       	sbc	r21, r19
    1ea2:	61 09       	sbc	r22, r1
    1ea4:	71 09       	sbc	r23, r1
    1ea6:	00 91 b2 04 	lds	r16, 0x04B2	; 0x8004b2 <result.1851>
    1eaa:	10 91 b3 04 	lds	r17, 0x04B3	; 0x8004b3 <result.1851+0x1>
    1eae:	20 91 b4 04 	lds	r18, 0x04B4	; 0x8004b4 <result.1851+0x2>
    1eb2:	30 91 b5 04 	lds	r19, 0x04B5	; 0x8004b5 <result.1851+0x3>
    1eb6:	40 0f       	add	r20, r16
    1eb8:	51 1f       	adc	r21, r17
    1eba:	62 1f       	adc	r22, r18
    1ebc:	73 1f       	adc	r23, r19
    1ebe:	40 93 b2 04 	sts	0x04B2, r20	; 0x8004b2 <result.1851>
    1ec2:	50 93 b3 04 	sts	0x04B3, r21	; 0x8004b3 <result.1851+0x1>
    1ec6:	60 93 b4 04 	sts	0x04B4, r22	; 0x8004b4 <result.1851+0x2>
    1eca:	70 93 b5 04 	sts	0x04B5, r23	; 0x8004b5 <result.1851+0x3>
    1ece:	8d 93       	st	X+, r24
    1ed0:	9c 93       	st	X, r25
    1ed2:	31 96       	adiw	r30, 0x01	; 1
    1ed4:	ef 77       	andi	r30, 0x7F	; 127
    1ed6:	ff 27       	eor	r31, r31
    1ed8:	f0 93 b1 04 	sts	0x04B1, r31	; 0x8004b1 <index.1852+0x1>
    1edc:	e0 93 b0 04 	sts	0x04B0, r30	; 0x8004b0 <index.1852>
    1ee0:	37 e0       	ldi	r19, 0x07	; 7
    1ee2:	76 95       	lsr	r23
    1ee4:	67 95       	ror	r22
    1ee6:	57 95       	ror	r21
    1ee8:	47 95       	ror	r20
    1eea:	3a 95       	dec	r19
    1eec:	d1 f7       	brne	.-12     	; 0x1ee2 <RunningAverageA+0x9c>
    1eee:	ca 01       	movw	r24, r20
    1ef0:	1f 91       	pop	r17
    1ef2:	0f 91       	pop	r16
    1ef4:	08 95       	ret

00001ef6 <KalmanA>:
}

short KalmanA(short value, bool reset)
{
    1ef6:	4f 92       	push	r4
    1ef8:	5f 92       	push	r5
    1efa:	6f 92       	push	r6
    1efc:	7f 92       	push	r7
    1efe:	8f 92       	push	r8
    1f00:	9f 92       	push	r9
    1f02:	af 92       	push	r10
    1f04:	bf 92       	push	r11
    1f06:	cf 92       	push	r12
    1f08:	df 92       	push	r13
    1f0a:	ef 92       	push	r14
    1f0c:	ff 92       	push	r15
    1f0e:	cf 93       	push	r28
    1f10:	df 93       	push	r29
    1f12:	ec 01       	movw	r28, r24
	static float estimateVariation = 0;
	static float currentEstimate = 0;
	static float lastEstimate = 0;
	static float gain = 0;
	
	if (reset)
    1f14:	66 23       	and	r22, r22
    1f16:	09 f4       	brne	.+2      	; 0x1f1a <KalmanA+0x24>
    1f18:	57 c0       	rjmp	.+174    	; 0x1fc8 <KalmanA+0xd2>
    1f1a:	81 2c       	mov	r8, r1
    1f1c:	91 2c       	mov	r9, r1
    1f1e:	80 e2       	ldi	r24, 0x20	; 32
    1f20:	a8 2e       	mov	r10, r24
    1f22:	82 e4       	ldi	r24, 0x42	; 66
    1f24:	b8 2e       	mov	r11, r24
    1f26:	41 2c       	mov	r4, r1
    1f28:	51 2c       	mov	r5, r1
    1f2a:	32 01       	movw	r6, r4
    1f2c:	c1 2c       	mov	r12, r1
    1f2e:	d1 2c       	mov	r13, r1
    1f30:	e1 2c       	mov	r14, r1
    1f32:	9f e3       	ldi	r25, 0x3F	; 63
    1f34:	f9 2e       	mov	r15, r25
		lastEstimate = 0;
		gain = 0;
	}
	
	gain = estimateVariation / (estimateVariation + 80);
	currentEstimate = lastEstimate + gain * (value - lastEstimate);
    1f36:	be 01       	movw	r22, r28
    1f38:	dd 0f       	add	r29, r29
    1f3a:	88 0b       	sbc	r24, r24
    1f3c:	99 0b       	sbc	r25, r25
    1f3e:	0e 94 03 12 	call	0x2406	; 0x2406 <__floatsisf>
    1f42:	a3 01       	movw	r20, r6
    1f44:	92 01       	movw	r18, r4
    1f46:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <__subsf3>
    1f4a:	a7 01       	movw	r20, r14
    1f4c:	96 01       	movw	r18, r12
    1f4e:	0e 94 8f 12 	call	0x251e	; 0x251e <__mulsf3>
    1f52:	a3 01       	movw	r20, r6
    1f54:	92 01       	movw	r18, r4
    1f56:	0e 94 ed 10 	call	0x21da	; 0x21da <__addsf3>
    1f5a:	6b 01       	movw	r12, r22
    1f5c:	7c 01       	movw	r14, r24
	estimateVariation = (1.f - gain) * estimateVariation + fabs(lastEstimate - currentEstimate) * 0.006;
    1f5e:	9b 01       	movw	r18, r22
    1f60:	ac 01       	movw	r20, r24
    1f62:	c3 01       	movw	r24, r6
    1f64:	b2 01       	movw	r22, r4
    1f66:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <__subsf3>
    1f6a:	9f 77       	andi	r25, 0x7F	; 127
    1f6c:	26 ea       	ldi	r18, 0xA6	; 166
    1f6e:	3b e9       	ldi	r19, 0x9B	; 155
    1f70:	44 ec       	ldi	r20, 0xC4	; 196
    1f72:	5b e3       	ldi	r21, 0x3B	; 59
    1f74:	0e 94 8f 12 	call	0x251e	; 0x251e <__mulsf3>
    1f78:	a5 01       	movw	r20, r10
    1f7a:	94 01       	movw	r18, r8
    1f7c:	0e 94 ed 10 	call	0x21da	; 0x21da <__addsf3>
    1f80:	60 93 ac 03 	sts	0x03AC, r22	; 0x8003ac <estimateVariation.1872>
    1f84:	70 93 ad 03 	sts	0x03AD, r23	; 0x8003ad <estimateVariation.1872+0x1>
    1f88:	80 93 ae 03 	sts	0x03AE, r24	; 0x8003ae <estimateVariation.1872+0x2>
    1f8c:	90 93 af 03 	sts	0x03AF, r25	; 0x8003af <estimateVariation.1872+0x3>
	lastEstimate = currentEstimate;
    1f90:	c0 92 a8 03 	sts	0x03A8, r12	; 0x8003a8 <lastEstimate.1874>
    1f94:	d0 92 a9 03 	sts	0x03A9, r13	; 0x8003a9 <lastEstimate.1874+0x1>
    1f98:	e0 92 aa 03 	sts	0x03AA, r14	; 0x8003aa <lastEstimate.1874+0x2>
    1f9c:	f0 92 ab 03 	sts	0x03AB, r15	; 0x8003ab <lastEstimate.1874+0x3>
	
	return (short)currentEstimate;
    1fa0:	c7 01       	movw	r24, r14
    1fa2:	b6 01       	movw	r22, r12
    1fa4:	0e 94 cb 11 	call	0x2396	; 0x2396 <__fixsfsi>
}
    1fa8:	cb 01       	movw	r24, r22
    1faa:	df 91       	pop	r29
    1fac:	cf 91       	pop	r28
    1fae:	ff 90       	pop	r15
    1fb0:	ef 90       	pop	r14
    1fb2:	df 90       	pop	r13
    1fb4:	cf 90       	pop	r12
    1fb6:	bf 90       	pop	r11
    1fb8:	af 90       	pop	r10
    1fba:	9f 90       	pop	r9
    1fbc:	8f 90       	pop	r8
    1fbe:	7f 90       	pop	r7
    1fc0:	6f 90       	pop	r6
    1fc2:	5f 90       	pop	r5
    1fc4:	4f 90       	pop	r4
    1fc6:	08 95       	ret
    1fc8:	80 90 ac 03 	lds	r8, 0x03AC	; 0x8003ac <estimateVariation.1872>
    1fcc:	90 90 ad 03 	lds	r9, 0x03AD	; 0x8003ad <estimateVariation.1872+0x1>
    1fd0:	a0 90 ae 03 	lds	r10, 0x03AE	; 0x8003ae <estimateVariation.1872+0x2>
    1fd4:	b0 90 af 03 	lds	r11, 0x03AF	; 0x8003af <estimateVariation.1872+0x3>
    1fd8:	20 e0       	ldi	r18, 0x00	; 0
    1fda:	30 e0       	ldi	r19, 0x00	; 0
    1fdc:	40 ea       	ldi	r20, 0xA0	; 160
    1fde:	52 e4       	ldi	r21, 0x42	; 66
    1fe0:	c5 01       	movw	r24, r10
    1fe2:	b4 01       	movw	r22, r8
    1fe4:	0e 94 ed 10 	call	0x21da	; 0x21da <__addsf3>
    1fe8:	9b 01       	movw	r18, r22
    1fea:	ac 01       	movw	r20, r24
    1fec:	c5 01       	movw	r24, r10
    1fee:	b4 01       	movw	r22, r8
    1ff0:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
    1ff4:	6b 01       	movw	r12, r22
    1ff6:	7c 01       	movw	r14, r24
    1ff8:	40 90 a8 03 	lds	r4, 0x03A8	; 0x8003a8 <lastEstimate.1874>
    1ffc:	50 90 a9 03 	lds	r5, 0x03A9	; 0x8003a9 <lastEstimate.1874+0x1>
    2000:	60 90 aa 03 	lds	r6, 0x03AA	; 0x8003aa <lastEstimate.1874+0x2>
    2004:	70 90 ab 03 	lds	r7, 0x03AB	; 0x8003ab <lastEstimate.1874+0x3>
    2008:	9b 01       	movw	r18, r22
    200a:	ac 01       	movw	r20, r24
    200c:	60 e0       	ldi	r22, 0x00	; 0
    200e:	70 e0       	ldi	r23, 0x00	; 0
    2010:	80 e8       	ldi	r24, 0x80	; 128
    2012:	9f e3       	ldi	r25, 0x3F	; 63
    2014:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <__subsf3>
    2018:	a5 01       	movw	r20, r10
    201a:	94 01       	movw	r18, r8
    201c:	0e 94 8f 12 	call	0x251e	; 0x251e <__mulsf3>
    2020:	4b 01       	movw	r8, r22
    2022:	5c 01       	movw	r10, r24
    2024:	88 cf       	rjmp	.-240    	; 0x1f36 <KalmanA+0x40>

00002026 <KalmanB>:

short KalmanB(short value, bool reset)
{
    2026:	4f 92       	push	r4
    2028:	5f 92       	push	r5
    202a:	6f 92       	push	r6
    202c:	7f 92       	push	r7
    202e:	8f 92       	push	r8
    2030:	9f 92       	push	r9
    2032:	af 92       	push	r10
    2034:	bf 92       	push	r11
    2036:	cf 92       	push	r12
    2038:	df 92       	push	r13
    203a:	ef 92       	push	r14
    203c:	ff 92       	push	r15
    203e:	cf 93       	push	r28
    2040:	df 93       	push	r29
    2042:	ec 01       	movw	r28, r24
	static float estimateVariation = 0;
	static float currentEstimate = 0;
	static float lastEstimate = 0;
	static float gain = 0;
	
	if (reset)
    2044:	66 23       	and	r22, r22
    2046:	09 f4       	brne	.+2      	; 0x204a <KalmanB+0x24>
    2048:	57 c0       	rjmp	.+174    	; 0x20f8 <KalmanB+0xd2>
    204a:	81 2c       	mov	r8, r1
    204c:	91 2c       	mov	r9, r1
    204e:	80 e2       	ldi	r24, 0x20	; 32
    2050:	a8 2e       	mov	r10, r24
    2052:	82 e4       	ldi	r24, 0x42	; 66
    2054:	b8 2e       	mov	r11, r24
    2056:	41 2c       	mov	r4, r1
    2058:	51 2c       	mov	r5, r1
    205a:	32 01       	movw	r6, r4
    205c:	c1 2c       	mov	r12, r1
    205e:	d1 2c       	mov	r13, r1
    2060:	e1 2c       	mov	r14, r1
    2062:	9f e3       	ldi	r25, 0x3F	; 63
    2064:	f9 2e       	mov	r15, r25
		lastEstimate = 0;
		gain = 0;
	}
	
	gain = estimateVariation / (estimateVariation + 80);
	currentEstimate = lastEstimate + gain * (value - lastEstimate);
    2066:	be 01       	movw	r22, r28
    2068:	dd 0f       	add	r29, r29
    206a:	88 0b       	sbc	r24, r24
    206c:	99 0b       	sbc	r25, r25
    206e:	0e 94 03 12 	call	0x2406	; 0x2406 <__floatsisf>
    2072:	a3 01       	movw	r20, r6
    2074:	92 01       	movw	r18, r4
    2076:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <__subsf3>
    207a:	a7 01       	movw	r20, r14
    207c:	96 01       	movw	r18, r12
    207e:	0e 94 8f 12 	call	0x251e	; 0x251e <__mulsf3>
    2082:	a3 01       	movw	r20, r6
    2084:	92 01       	movw	r18, r4
    2086:	0e 94 ed 10 	call	0x21da	; 0x21da <__addsf3>
    208a:	6b 01       	movw	r12, r22
    208c:	7c 01       	movw	r14, r24
	estimateVariation = (1.f - gain) * estimateVariation + fabs(lastEstimate - currentEstimate) * 0.006;
    208e:	9b 01       	movw	r18, r22
    2090:	ac 01       	movw	r20, r24
    2092:	c3 01       	movw	r24, r6
    2094:	b2 01       	movw	r22, r4
    2096:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <__subsf3>
    209a:	9f 77       	andi	r25, 0x7F	; 127
    209c:	26 ea       	ldi	r18, 0xA6	; 166
    209e:	3b e9       	ldi	r19, 0x9B	; 155
    20a0:	44 ec       	ldi	r20, 0xC4	; 196
    20a2:	5b e3       	ldi	r21, 0x3B	; 59
    20a4:	0e 94 8f 12 	call	0x251e	; 0x251e <__mulsf3>
    20a8:	a5 01       	movw	r20, r10
    20aa:	94 01       	movw	r18, r8
    20ac:	0e 94 ed 10 	call	0x21da	; 0x21da <__addsf3>
    20b0:	60 93 a4 03 	sts	0x03A4, r22	; 0x8003a4 <estimateVariation.1880>
    20b4:	70 93 a5 03 	sts	0x03A5, r23	; 0x8003a5 <estimateVariation.1880+0x1>
    20b8:	80 93 a6 03 	sts	0x03A6, r24	; 0x8003a6 <estimateVariation.1880+0x2>
    20bc:	90 93 a7 03 	sts	0x03A7, r25	; 0x8003a7 <estimateVariation.1880+0x3>
	lastEstimate = currentEstimate;
    20c0:	c0 92 a0 03 	sts	0x03A0, r12	; 0x8003a0 <lastEstimate.1882>
    20c4:	d0 92 a1 03 	sts	0x03A1, r13	; 0x8003a1 <lastEstimate.1882+0x1>
    20c8:	e0 92 a2 03 	sts	0x03A2, r14	; 0x8003a2 <lastEstimate.1882+0x2>
    20cc:	f0 92 a3 03 	sts	0x03A3, r15	; 0x8003a3 <lastEstimate.1882+0x3>
	
	return (short)currentEstimate;
    20d0:	c7 01       	movw	r24, r14
    20d2:	b6 01       	movw	r22, r12
    20d4:	0e 94 cb 11 	call	0x2396	; 0x2396 <__fixsfsi>
    20d8:	cb 01       	movw	r24, r22
    20da:	df 91       	pop	r29
    20dc:	cf 91       	pop	r28
    20de:	ff 90       	pop	r15
    20e0:	ef 90       	pop	r14
    20e2:	df 90       	pop	r13
    20e4:	cf 90       	pop	r12
    20e6:	bf 90       	pop	r11
    20e8:	af 90       	pop	r10
    20ea:	9f 90       	pop	r9
    20ec:	8f 90       	pop	r8
    20ee:	7f 90       	pop	r7
    20f0:	6f 90       	pop	r6
    20f2:	5f 90       	pop	r5
    20f4:	4f 90       	pop	r4
    20f6:	08 95       	ret
    20f8:	80 90 a4 03 	lds	r8, 0x03A4	; 0x8003a4 <estimateVariation.1880>
    20fc:	90 90 a5 03 	lds	r9, 0x03A5	; 0x8003a5 <estimateVariation.1880+0x1>
    2100:	a0 90 a6 03 	lds	r10, 0x03A6	; 0x8003a6 <estimateVariation.1880+0x2>
    2104:	b0 90 a7 03 	lds	r11, 0x03A7	; 0x8003a7 <estimateVariation.1880+0x3>
    2108:	20 e0       	ldi	r18, 0x00	; 0
    210a:	30 e0       	ldi	r19, 0x00	; 0
    210c:	40 ea       	ldi	r20, 0xA0	; 160
    210e:	52 e4       	ldi	r21, 0x42	; 66
    2110:	c5 01       	movw	r24, r10
    2112:	b4 01       	movw	r22, r8
    2114:	0e 94 ed 10 	call	0x21da	; 0x21da <__addsf3>
    2118:	9b 01       	movw	r18, r22
    211a:	ac 01       	movw	r20, r24
    211c:	c5 01       	movw	r24, r10
    211e:	b4 01       	movw	r22, r8
    2120:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
    2124:	6b 01       	movw	r12, r22
    2126:	7c 01       	movw	r14, r24
    2128:	40 90 a0 03 	lds	r4, 0x03A0	; 0x8003a0 <lastEstimate.1882>
    212c:	50 90 a1 03 	lds	r5, 0x03A1	; 0x8003a1 <lastEstimate.1882+0x1>
    2130:	60 90 a2 03 	lds	r6, 0x03A2	; 0x8003a2 <lastEstimate.1882+0x2>
    2134:	70 90 a3 03 	lds	r7, 0x03A3	; 0x8003a3 <lastEstimate.1882+0x3>
    2138:	9b 01       	movw	r18, r22
    213a:	ac 01       	movw	r20, r24
    213c:	60 e0       	ldi	r22, 0x00	; 0
    213e:	70 e0       	ldi	r23, 0x00	; 0
    2140:	80 e8       	ldi	r24, 0x80	; 128
    2142:	9f e3       	ldi	r25, 0x3F	; 63
    2144:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <__subsf3>
    2148:	a5 01       	movw	r20, r10
    214a:	94 01       	movw	r18, r8
    214c:	0e 94 8f 12 	call	0x251e	; 0x251e <__mulsf3>
    2150:	4b 01       	movw	r8, r22
    2152:	5c 01       	movw	r10, r24
    2154:	88 cf       	rjmp	.-240    	; 0x2066 <KalmanB+0x40>

00002156 <USART>:

#include "uart.h"

void USART(unsigned short option)
{
	switch (option)
    2156:	00 97       	sbiw	r24, 0x00	; 0
    2158:	91 f0       	breq	.+36     	; 0x217e <USART+0x28>
    215a:	01 97       	sbiw	r24, 0x01	; 1
    215c:	21 f4       	brne	.+8      	; 0x2166 <USART+0x10>
	{
		case On:
		UCSR0B = (1 << TXEN0) | (1 << RXEN0) | (1 << RXCIE0);
    215e:	88 e9       	ldi	r24, 0x98	; 152
    2160:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
		break;
    2164:	08 95       	ret
		case Off:
		UCSR0B = (0 << TXEN0) | (0 << RXEN0) | (0 << RXCIE0);
		break;
		default:
		UCSR0B = (0 << TXEN0) | (0 << RXEN0) | (0 << RXCIE0);
    2166:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
		UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
    216a:	86 e0       	ldi	r24, 0x06	; 6
    216c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
		UBRR0  =  3;
    2170:	83 e0       	ldi	r24, 0x03	; 3
    2172:	90 e0       	ldi	r25, 0x00	; 0
    2174:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
    2178:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    217c:	08 95       	ret
	{
		case On:
		UCSR0B = (1 << TXEN0) | (1 << RXEN0) | (1 << RXCIE0);
		break;
		case Off:
		UCSR0B = (0 << TXEN0) | (0 << RXEN0) | (0 << RXCIE0);
    217e:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
		break;
    2182:	08 95       	ret

00002184 <TxChar>:
	}
}

void TxChar(unsigned char c)
{
	while (!Check(UCSR0A, UDRE0));
    2184:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2188:	95 ff       	sbrs	r25, 5
    218a:	fc cf       	rjmp	.-8      	; 0x2184 <TxChar>
	UDR0 = c;
    218c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2190:	08 95       	ret

00002192 <TxString>:
}

void TxString(const char *s)
{
	for (int i=0; s[i]; i++) TxChar(s[i]);
    2192:	fc 01       	movw	r30, r24
    2194:	20 81       	ld	r18, Z
    2196:	22 23       	and	r18, r18
    2198:	51 f0       	breq	.+20     	; 0x21ae <TxString+0x1c>
    219a:	31 96       	adiw	r30, 0x01	; 1
	}
}

void TxChar(unsigned char c)
{
	while (!Check(UCSR0A, UDRE0));
    219c:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    21a0:	95 ff       	sbrs	r25, 5
    21a2:	fc cf       	rjmp	.-8      	; 0x219c <TxString+0xa>
	UDR0 = c;
    21a4:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}

void TxString(const char *s)
{
	for (int i=0; s[i]; i++) TxChar(s[i]);
    21a8:	21 91       	ld	r18, Z+
    21aa:	21 11       	cpse	r18, r1
    21ac:	f7 cf       	rjmp	.-18     	; 0x219c <TxString+0xa>
    21ae:	08 95       	ret

000021b0 <GetCRC8>:
}

char GetCRC8(char *data)
{
    21b0:	fc 01       	movw	r30, r24
	char crc = 0x00;
    21b2:	80 e0       	ldi	r24, 0x00	; 0
	while (strlen(data))
	{
		crc ^= *data++;

		for (unsigned short i = 0; i < 8; i++)
		crc = crc & 0x80 ? (crc << 1) ^ 0x7 : crc << 1;
    21b4:	47 e0       	ldi	r20, 0x07	; 7

char GetCRC8(char *data)
{
	char crc = 0x00;

	while (strlen(data))
    21b6:	91 91       	ld	r25, Z+
    21b8:	99 23       	and	r25, r25
    21ba:	69 f0       	breq	.+26     	; 0x21d6 <GetCRC8+0x26>
	{
		crc ^= *data++;
    21bc:	89 27       	eor	r24, r25
    21be:	28 e0       	ldi	r18, 0x08	; 8
    21c0:	30 e0       	ldi	r19, 0x00	; 0
    21c2:	04 c0       	rjmp	.+8      	; 0x21cc <GetCRC8+0x1c>

		for (unsigned short i = 0; i < 8; i++)
		crc = crc & 0x80 ? (crc << 1) ^ 0x7 : crc << 1;
    21c4:	88 0f       	add	r24, r24
    21c6:	21 50       	subi	r18, 0x01	; 1
    21c8:	31 09       	sbc	r19, r1

	while (strlen(data))
	{
		crc ^= *data++;

		for (unsigned short i = 0; i < 8; i++)
    21ca:	a9 f3       	breq	.-22     	; 0x21b6 <GetCRC8+0x6>
		crc = crc & 0x80 ? (crc << 1) ^ 0x7 : crc << 1;
    21cc:	87 ff       	sbrs	r24, 7
    21ce:	fa cf       	rjmp	.-12     	; 0x21c4 <GetCRC8+0x14>
    21d0:	88 0f       	add	r24, r24
    21d2:	84 27       	eor	r24, r20
    21d4:	f8 cf       	rjmp	.-16     	; 0x21c6 <GetCRC8+0x16>
	}

	return crc;
    21d6:	08 95       	ret

000021d8 <__subsf3>:
    21d8:	50 58       	subi	r21, 0x80	; 128

000021da <__addsf3>:
    21da:	bb 27       	eor	r27, r27
    21dc:	aa 27       	eor	r26, r26
    21de:	0e 94 04 11 	call	0x2208	; 0x2208 <__addsf3x>
    21e2:	0c 94 55 12 	jmp	0x24aa	; 0x24aa <__fp_round>
    21e6:	0e 94 47 12 	call	0x248e	; 0x248e <__fp_pscA>
    21ea:	38 f0       	brcs	.+14     	; 0x21fa <__addsf3+0x20>
    21ec:	0e 94 4e 12 	call	0x249c	; 0x249c <__fp_pscB>
    21f0:	20 f0       	brcs	.+8      	; 0x21fa <__addsf3+0x20>
    21f2:	39 f4       	brne	.+14     	; 0x2202 <__addsf3+0x28>
    21f4:	9f 3f       	cpi	r25, 0xFF	; 255
    21f6:	19 f4       	brne	.+6      	; 0x21fe <__addsf3+0x24>
    21f8:	26 f4       	brtc	.+8      	; 0x2202 <__addsf3+0x28>
    21fa:	0c 94 44 12 	jmp	0x2488	; 0x2488 <__fp_nan>
    21fe:	0e f4       	brtc	.+2      	; 0x2202 <__addsf3+0x28>
    2200:	e0 95       	com	r30
    2202:	e7 fb       	bst	r30, 7
    2204:	0c 94 3e 12 	jmp	0x247c	; 0x247c <__fp_inf>

00002208 <__addsf3x>:
    2208:	e9 2f       	mov	r30, r25
    220a:	0e 94 66 12 	call	0x24cc	; 0x24cc <__fp_split3>
    220e:	58 f3       	brcs	.-42     	; 0x21e6 <__addsf3+0xc>
    2210:	ba 17       	cp	r27, r26
    2212:	62 07       	cpc	r22, r18
    2214:	73 07       	cpc	r23, r19
    2216:	84 07       	cpc	r24, r20
    2218:	95 07       	cpc	r25, r21
    221a:	20 f0       	brcs	.+8      	; 0x2224 <__addsf3x+0x1c>
    221c:	79 f4       	brne	.+30     	; 0x223c <__addsf3x+0x34>
    221e:	a6 f5       	brtc	.+104    	; 0x2288 <__addsf3x+0x80>
    2220:	0c 94 88 12 	jmp	0x2510	; 0x2510 <__fp_zero>
    2224:	0e f4       	brtc	.+2      	; 0x2228 <__addsf3x+0x20>
    2226:	e0 95       	com	r30
    2228:	0b 2e       	mov	r0, r27
    222a:	ba 2f       	mov	r27, r26
    222c:	a0 2d       	mov	r26, r0
    222e:	0b 01       	movw	r0, r22
    2230:	b9 01       	movw	r22, r18
    2232:	90 01       	movw	r18, r0
    2234:	0c 01       	movw	r0, r24
    2236:	ca 01       	movw	r24, r20
    2238:	a0 01       	movw	r20, r0
    223a:	11 24       	eor	r1, r1
    223c:	ff 27       	eor	r31, r31
    223e:	59 1b       	sub	r21, r25
    2240:	99 f0       	breq	.+38     	; 0x2268 <__addsf3x+0x60>
    2242:	59 3f       	cpi	r21, 0xF9	; 249
    2244:	50 f4       	brcc	.+20     	; 0x225a <__addsf3x+0x52>
    2246:	50 3e       	cpi	r21, 0xE0	; 224
    2248:	68 f1       	brcs	.+90     	; 0x22a4 <__addsf3x+0x9c>
    224a:	1a 16       	cp	r1, r26
    224c:	f0 40       	sbci	r31, 0x00	; 0
    224e:	a2 2f       	mov	r26, r18
    2250:	23 2f       	mov	r18, r19
    2252:	34 2f       	mov	r19, r20
    2254:	44 27       	eor	r20, r20
    2256:	58 5f       	subi	r21, 0xF8	; 248
    2258:	f3 cf       	rjmp	.-26     	; 0x2240 <__addsf3x+0x38>
    225a:	46 95       	lsr	r20
    225c:	37 95       	ror	r19
    225e:	27 95       	ror	r18
    2260:	a7 95       	ror	r26
    2262:	f0 40       	sbci	r31, 0x00	; 0
    2264:	53 95       	inc	r21
    2266:	c9 f7       	brne	.-14     	; 0x225a <__addsf3x+0x52>
    2268:	7e f4       	brtc	.+30     	; 0x2288 <__addsf3x+0x80>
    226a:	1f 16       	cp	r1, r31
    226c:	ba 0b       	sbc	r27, r26
    226e:	62 0b       	sbc	r22, r18
    2270:	73 0b       	sbc	r23, r19
    2272:	84 0b       	sbc	r24, r20
    2274:	ba f0       	brmi	.+46     	; 0x22a4 <__addsf3x+0x9c>
    2276:	91 50       	subi	r25, 0x01	; 1
    2278:	a1 f0       	breq	.+40     	; 0x22a2 <__addsf3x+0x9a>
    227a:	ff 0f       	add	r31, r31
    227c:	bb 1f       	adc	r27, r27
    227e:	66 1f       	adc	r22, r22
    2280:	77 1f       	adc	r23, r23
    2282:	88 1f       	adc	r24, r24
    2284:	c2 f7       	brpl	.-16     	; 0x2276 <__addsf3x+0x6e>
    2286:	0e c0       	rjmp	.+28     	; 0x22a4 <__addsf3x+0x9c>
    2288:	ba 0f       	add	r27, r26
    228a:	62 1f       	adc	r22, r18
    228c:	73 1f       	adc	r23, r19
    228e:	84 1f       	adc	r24, r20
    2290:	48 f4       	brcc	.+18     	; 0x22a4 <__addsf3x+0x9c>
    2292:	87 95       	ror	r24
    2294:	77 95       	ror	r23
    2296:	67 95       	ror	r22
    2298:	b7 95       	ror	r27
    229a:	f7 95       	ror	r31
    229c:	9e 3f       	cpi	r25, 0xFE	; 254
    229e:	08 f0       	brcs	.+2      	; 0x22a2 <__addsf3x+0x9a>
    22a0:	b0 cf       	rjmp	.-160    	; 0x2202 <__addsf3+0x28>
    22a2:	93 95       	inc	r25
    22a4:	88 0f       	add	r24, r24
    22a6:	08 f0       	brcs	.+2      	; 0x22aa <__addsf3x+0xa2>
    22a8:	99 27       	eor	r25, r25
    22aa:	ee 0f       	add	r30, r30
    22ac:	97 95       	ror	r25
    22ae:	87 95       	ror	r24
    22b0:	08 95       	ret

000022b2 <__divsf3>:
    22b2:	0e 94 6d 11 	call	0x22da	; 0x22da <__divsf3x>
    22b6:	0c 94 55 12 	jmp	0x24aa	; 0x24aa <__fp_round>
    22ba:	0e 94 4e 12 	call	0x249c	; 0x249c <__fp_pscB>
    22be:	58 f0       	brcs	.+22     	; 0x22d6 <__divsf3+0x24>
    22c0:	0e 94 47 12 	call	0x248e	; 0x248e <__fp_pscA>
    22c4:	40 f0       	brcs	.+16     	; 0x22d6 <__divsf3+0x24>
    22c6:	29 f4       	brne	.+10     	; 0x22d2 <__divsf3+0x20>
    22c8:	5f 3f       	cpi	r21, 0xFF	; 255
    22ca:	29 f0       	breq	.+10     	; 0x22d6 <__divsf3+0x24>
    22cc:	0c 94 3e 12 	jmp	0x247c	; 0x247c <__fp_inf>
    22d0:	51 11       	cpse	r21, r1
    22d2:	0c 94 89 12 	jmp	0x2512	; 0x2512 <__fp_szero>
    22d6:	0c 94 44 12 	jmp	0x2488	; 0x2488 <__fp_nan>

000022da <__divsf3x>:
    22da:	0e 94 66 12 	call	0x24cc	; 0x24cc <__fp_split3>
    22de:	68 f3       	brcs	.-38     	; 0x22ba <__divsf3+0x8>

000022e0 <__divsf3_pse>:
    22e0:	99 23       	and	r25, r25
    22e2:	b1 f3       	breq	.-20     	; 0x22d0 <__divsf3+0x1e>
    22e4:	55 23       	and	r21, r21
    22e6:	91 f3       	breq	.-28     	; 0x22cc <__divsf3+0x1a>
    22e8:	95 1b       	sub	r25, r21
    22ea:	55 0b       	sbc	r21, r21
    22ec:	bb 27       	eor	r27, r27
    22ee:	aa 27       	eor	r26, r26
    22f0:	62 17       	cp	r22, r18
    22f2:	73 07       	cpc	r23, r19
    22f4:	84 07       	cpc	r24, r20
    22f6:	38 f0       	brcs	.+14     	; 0x2306 <__divsf3_pse+0x26>
    22f8:	9f 5f       	subi	r25, 0xFF	; 255
    22fa:	5f 4f       	sbci	r21, 0xFF	; 255
    22fc:	22 0f       	add	r18, r18
    22fe:	33 1f       	adc	r19, r19
    2300:	44 1f       	adc	r20, r20
    2302:	aa 1f       	adc	r26, r26
    2304:	a9 f3       	breq	.-22     	; 0x22f0 <__divsf3_pse+0x10>
    2306:	35 d0       	rcall	.+106    	; 0x2372 <__divsf3_pse+0x92>
    2308:	0e 2e       	mov	r0, r30
    230a:	3a f0       	brmi	.+14     	; 0x231a <__divsf3_pse+0x3a>
    230c:	e0 e8       	ldi	r30, 0x80	; 128
    230e:	32 d0       	rcall	.+100    	; 0x2374 <__divsf3_pse+0x94>
    2310:	91 50       	subi	r25, 0x01	; 1
    2312:	50 40       	sbci	r21, 0x00	; 0
    2314:	e6 95       	lsr	r30
    2316:	00 1c       	adc	r0, r0
    2318:	ca f7       	brpl	.-14     	; 0x230c <__divsf3_pse+0x2c>
    231a:	2b d0       	rcall	.+86     	; 0x2372 <__divsf3_pse+0x92>
    231c:	fe 2f       	mov	r31, r30
    231e:	29 d0       	rcall	.+82     	; 0x2372 <__divsf3_pse+0x92>
    2320:	66 0f       	add	r22, r22
    2322:	77 1f       	adc	r23, r23
    2324:	88 1f       	adc	r24, r24
    2326:	bb 1f       	adc	r27, r27
    2328:	26 17       	cp	r18, r22
    232a:	37 07       	cpc	r19, r23
    232c:	48 07       	cpc	r20, r24
    232e:	ab 07       	cpc	r26, r27
    2330:	b0 e8       	ldi	r27, 0x80	; 128
    2332:	09 f0       	breq	.+2      	; 0x2336 <__divsf3_pse+0x56>
    2334:	bb 0b       	sbc	r27, r27
    2336:	80 2d       	mov	r24, r0
    2338:	bf 01       	movw	r22, r30
    233a:	ff 27       	eor	r31, r31
    233c:	93 58       	subi	r25, 0x83	; 131
    233e:	5f 4f       	sbci	r21, 0xFF	; 255
    2340:	3a f0       	brmi	.+14     	; 0x2350 <__divsf3_pse+0x70>
    2342:	9e 3f       	cpi	r25, 0xFE	; 254
    2344:	51 05       	cpc	r21, r1
    2346:	78 f0       	brcs	.+30     	; 0x2366 <__divsf3_pse+0x86>
    2348:	0c 94 3e 12 	jmp	0x247c	; 0x247c <__fp_inf>
    234c:	0c 94 89 12 	jmp	0x2512	; 0x2512 <__fp_szero>
    2350:	5f 3f       	cpi	r21, 0xFF	; 255
    2352:	e4 f3       	brlt	.-8      	; 0x234c <__divsf3_pse+0x6c>
    2354:	98 3e       	cpi	r25, 0xE8	; 232
    2356:	d4 f3       	brlt	.-12     	; 0x234c <__divsf3_pse+0x6c>
    2358:	86 95       	lsr	r24
    235a:	77 95       	ror	r23
    235c:	67 95       	ror	r22
    235e:	b7 95       	ror	r27
    2360:	f7 95       	ror	r31
    2362:	9f 5f       	subi	r25, 0xFF	; 255
    2364:	c9 f7       	brne	.-14     	; 0x2358 <__divsf3_pse+0x78>
    2366:	88 0f       	add	r24, r24
    2368:	91 1d       	adc	r25, r1
    236a:	96 95       	lsr	r25
    236c:	87 95       	ror	r24
    236e:	97 f9       	bld	r25, 7
    2370:	08 95       	ret
    2372:	e1 e0       	ldi	r30, 0x01	; 1
    2374:	66 0f       	add	r22, r22
    2376:	77 1f       	adc	r23, r23
    2378:	88 1f       	adc	r24, r24
    237a:	bb 1f       	adc	r27, r27
    237c:	62 17       	cp	r22, r18
    237e:	73 07       	cpc	r23, r19
    2380:	84 07       	cpc	r24, r20
    2382:	ba 07       	cpc	r27, r26
    2384:	20 f0       	brcs	.+8      	; 0x238e <__divsf3_pse+0xae>
    2386:	62 1b       	sub	r22, r18
    2388:	73 0b       	sbc	r23, r19
    238a:	84 0b       	sbc	r24, r20
    238c:	ba 0b       	sbc	r27, r26
    238e:	ee 1f       	adc	r30, r30
    2390:	88 f7       	brcc	.-30     	; 0x2374 <__divsf3_pse+0x94>
    2392:	e0 95       	com	r30
    2394:	08 95       	ret

00002396 <__fixsfsi>:
    2396:	0e 94 d2 11 	call	0x23a4	; 0x23a4 <__fixunssfsi>
    239a:	68 94       	set
    239c:	b1 11       	cpse	r27, r1
    239e:	0c 94 89 12 	jmp	0x2512	; 0x2512 <__fp_szero>
    23a2:	08 95       	ret

000023a4 <__fixunssfsi>:
    23a4:	0e 94 6e 12 	call	0x24dc	; 0x24dc <__fp_splitA>
    23a8:	88 f0       	brcs	.+34     	; 0x23cc <__fixunssfsi+0x28>
    23aa:	9f 57       	subi	r25, 0x7F	; 127
    23ac:	98 f0       	brcs	.+38     	; 0x23d4 <__fixunssfsi+0x30>
    23ae:	b9 2f       	mov	r27, r25
    23b0:	99 27       	eor	r25, r25
    23b2:	b7 51       	subi	r27, 0x17	; 23
    23b4:	b0 f0       	brcs	.+44     	; 0x23e2 <__fixunssfsi+0x3e>
    23b6:	e1 f0       	breq	.+56     	; 0x23f0 <__fixunssfsi+0x4c>
    23b8:	66 0f       	add	r22, r22
    23ba:	77 1f       	adc	r23, r23
    23bc:	88 1f       	adc	r24, r24
    23be:	99 1f       	adc	r25, r25
    23c0:	1a f0       	brmi	.+6      	; 0x23c8 <__fixunssfsi+0x24>
    23c2:	ba 95       	dec	r27
    23c4:	c9 f7       	brne	.-14     	; 0x23b8 <__fixunssfsi+0x14>
    23c6:	14 c0       	rjmp	.+40     	; 0x23f0 <__fixunssfsi+0x4c>
    23c8:	b1 30       	cpi	r27, 0x01	; 1
    23ca:	91 f0       	breq	.+36     	; 0x23f0 <__fixunssfsi+0x4c>
    23cc:	0e 94 88 12 	call	0x2510	; 0x2510 <__fp_zero>
    23d0:	b1 e0       	ldi	r27, 0x01	; 1
    23d2:	08 95       	ret
    23d4:	0c 94 88 12 	jmp	0x2510	; 0x2510 <__fp_zero>
    23d8:	67 2f       	mov	r22, r23
    23da:	78 2f       	mov	r23, r24
    23dc:	88 27       	eor	r24, r24
    23de:	b8 5f       	subi	r27, 0xF8	; 248
    23e0:	39 f0       	breq	.+14     	; 0x23f0 <__fixunssfsi+0x4c>
    23e2:	b9 3f       	cpi	r27, 0xF9	; 249
    23e4:	cc f3       	brlt	.-14     	; 0x23d8 <__fixunssfsi+0x34>
    23e6:	86 95       	lsr	r24
    23e8:	77 95       	ror	r23
    23ea:	67 95       	ror	r22
    23ec:	b3 95       	inc	r27
    23ee:	d9 f7       	brne	.-10     	; 0x23e6 <__fixunssfsi+0x42>
    23f0:	3e f4       	brtc	.+14     	; 0x2400 <__fixunssfsi+0x5c>
    23f2:	90 95       	com	r25
    23f4:	80 95       	com	r24
    23f6:	70 95       	com	r23
    23f8:	61 95       	neg	r22
    23fa:	7f 4f       	sbci	r23, 0xFF	; 255
    23fc:	8f 4f       	sbci	r24, 0xFF	; 255
    23fe:	9f 4f       	sbci	r25, 0xFF	; 255
    2400:	08 95       	ret

00002402 <__floatunsisf>:
    2402:	e8 94       	clt
    2404:	09 c0       	rjmp	.+18     	; 0x2418 <__floatsisf+0x12>

00002406 <__floatsisf>:
    2406:	97 fb       	bst	r25, 7
    2408:	3e f4       	brtc	.+14     	; 0x2418 <__floatsisf+0x12>
    240a:	90 95       	com	r25
    240c:	80 95       	com	r24
    240e:	70 95       	com	r23
    2410:	61 95       	neg	r22
    2412:	7f 4f       	sbci	r23, 0xFF	; 255
    2414:	8f 4f       	sbci	r24, 0xFF	; 255
    2416:	9f 4f       	sbci	r25, 0xFF	; 255
    2418:	99 23       	and	r25, r25
    241a:	a9 f0       	breq	.+42     	; 0x2446 <__floatsisf+0x40>
    241c:	f9 2f       	mov	r31, r25
    241e:	96 e9       	ldi	r25, 0x96	; 150
    2420:	bb 27       	eor	r27, r27
    2422:	93 95       	inc	r25
    2424:	f6 95       	lsr	r31
    2426:	87 95       	ror	r24
    2428:	77 95       	ror	r23
    242a:	67 95       	ror	r22
    242c:	b7 95       	ror	r27
    242e:	f1 11       	cpse	r31, r1
    2430:	f8 cf       	rjmp	.-16     	; 0x2422 <__floatsisf+0x1c>
    2432:	fa f4       	brpl	.+62     	; 0x2472 <__floatsisf+0x6c>
    2434:	bb 0f       	add	r27, r27
    2436:	11 f4       	brne	.+4      	; 0x243c <__floatsisf+0x36>
    2438:	60 ff       	sbrs	r22, 0
    243a:	1b c0       	rjmp	.+54     	; 0x2472 <__floatsisf+0x6c>
    243c:	6f 5f       	subi	r22, 0xFF	; 255
    243e:	7f 4f       	sbci	r23, 0xFF	; 255
    2440:	8f 4f       	sbci	r24, 0xFF	; 255
    2442:	9f 4f       	sbci	r25, 0xFF	; 255
    2444:	16 c0       	rjmp	.+44     	; 0x2472 <__floatsisf+0x6c>
    2446:	88 23       	and	r24, r24
    2448:	11 f0       	breq	.+4      	; 0x244e <__floatsisf+0x48>
    244a:	96 e9       	ldi	r25, 0x96	; 150
    244c:	11 c0       	rjmp	.+34     	; 0x2470 <__floatsisf+0x6a>
    244e:	77 23       	and	r23, r23
    2450:	21 f0       	breq	.+8      	; 0x245a <__floatsisf+0x54>
    2452:	9e e8       	ldi	r25, 0x8E	; 142
    2454:	87 2f       	mov	r24, r23
    2456:	76 2f       	mov	r23, r22
    2458:	05 c0       	rjmp	.+10     	; 0x2464 <__floatsisf+0x5e>
    245a:	66 23       	and	r22, r22
    245c:	71 f0       	breq	.+28     	; 0x247a <__floatsisf+0x74>
    245e:	96 e8       	ldi	r25, 0x86	; 134
    2460:	86 2f       	mov	r24, r22
    2462:	70 e0       	ldi	r23, 0x00	; 0
    2464:	60 e0       	ldi	r22, 0x00	; 0
    2466:	2a f0       	brmi	.+10     	; 0x2472 <__floatsisf+0x6c>
    2468:	9a 95       	dec	r25
    246a:	66 0f       	add	r22, r22
    246c:	77 1f       	adc	r23, r23
    246e:	88 1f       	adc	r24, r24
    2470:	da f7       	brpl	.-10     	; 0x2468 <__floatsisf+0x62>
    2472:	88 0f       	add	r24, r24
    2474:	96 95       	lsr	r25
    2476:	87 95       	ror	r24
    2478:	97 f9       	bld	r25, 7
    247a:	08 95       	ret

0000247c <__fp_inf>:
    247c:	97 f9       	bld	r25, 7
    247e:	9f 67       	ori	r25, 0x7F	; 127
    2480:	80 e8       	ldi	r24, 0x80	; 128
    2482:	70 e0       	ldi	r23, 0x00	; 0
    2484:	60 e0       	ldi	r22, 0x00	; 0
    2486:	08 95       	ret

00002488 <__fp_nan>:
    2488:	9f ef       	ldi	r25, 0xFF	; 255
    248a:	80 ec       	ldi	r24, 0xC0	; 192
    248c:	08 95       	ret

0000248e <__fp_pscA>:
    248e:	00 24       	eor	r0, r0
    2490:	0a 94       	dec	r0
    2492:	16 16       	cp	r1, r22
    2494:	17 06       	cpc	r1, r23
    2496:	18 06       	cpc	r1, r24
    2498:	09 06       	cpc	r0, r25
    249a:	08 95       	ret

0000249c <__fp_pscB>:
    249c:	00 24       	eor	r0, r0
    249e:	0a 94       	dec	r0
    24a0:	12 16       	cp	r1, r18
    24a2:	13 06       	cpc	r1, r19
    24a4:	14 06       	cpc	r1, r20
    24a6:	05 06       	cpc	r0, r21
    24a8:	08 95       	ret

000024aa <__fp_round>:
    24aa:	09 2e       	mov	r0, r25
    24ac:	03 94       	inc	r0
    24ae:	00 0c       	add	r0, r0
    24b0:	11 f4       	brne	.+4      	; 0x24b6 <__fp_round+0xc>
    24b2:	88 23       	and	r24, r24
    24b4:	52 f0       	brmi	.+20     	; 0x24ca <__fp_round+0x20>
    24b6:	bb 0f       	add	r27, r27
    24b8:	40 f4       	brcc	.+16     	; 0x24ca <__fp_round+0x20>
    24ba:	bf 2b       	or	r27, r31
    24bc:	11 f4       	brne	.+4      	; 0x24c2 <__fp_round+0x18>
    24be:	60 ff       	sbrs	r22, 0
    24c0:	04 c0       	rjmp	.+8      	; 0x24ca <__fp_round+0x20>
    24c2:	6f 5f       	subi	r22, 0xFF	; 255
    24c4:	7f 4f       	sbci	r23, 0xFF	; 255
    24c6:	8f 4f       	sbci	r24, 0xFF	; 255
    24c8:	9f 4f       	sbci	r25, 0xFF	; 255
    24ca:	08 95       	ret

000024cc <__fp_split3>:
    24cc:	57 fd       	sbrc	r21, 7
    24ce:	90 58       	subi	r25, 0x80	; 128
    24d0:	44 0f       	add	r20, r20
    24d2:	55 1f       	adc	r21, r21
    24d4:	59 f0       	breq	.+22     	; 0x24ec <__fp_splitA+0x10>
    24d6:	5f 3f       	cpi	r21, 0xFF	; 255
    24d8:	71 f0       	breq	.+28     	; 0x24f6 <__fp_splitA+0x1a>
    24da:	47 95       	ror	r20

000024dc <__fp_splitA>:
    24dc:	88 0f       	add	r24, r24
    24de:	97 fb       	bst	r25, 7
    24e0:	99 1f       	adc	r25, r25
    24e2:	61 f0       	breq	.+24     	; 0x24fc <__fp_splitA+0x20>
    24e4:	9f 3f       	cpi	r25, 0xFF	; 255
    24e6:	79 f0       	breq	.+30     	; 0x2506 <__fp_splitA+0x2a>
    24e8:	87 95       	ror	r24
    24ea:	08 95       	ret
    24ec:	12 16       	cp	r1, r18
    24ee:	13 06       	cpc	r1, r19
    24f0:	14 06       	cpc	r1, r20
    24f2:	55 1f       	adc	r21, r21
    24f4:	f2 cf       	rjmp	.-28     	; 0x24da <__fp_split3+0xe>
    24f6:	46 95       	lsr	r20
    24f8:	f1 df       	rcall	.-30     	; 0x24dc <__fp_splitA>
    24fa:	08 c0       	rjmp	.+16     	; 0x250c <__fp_splitA+0x30>
    24fc:	16 16       	cp	r1, r22
    24fe:	17 06       	cpc	r1, r23
    2500:	18 06       	cpc	r1, r24
    2502:	99 1f       	adc	r25, r25
    2504:	f1 cf       	rjmp	.-30     	; 0x24e8 <__fp_splitA+0xc>
    2506:	86 95       	lsr	r24
    2508:	71 05       	cpc	r23, r1
    250a:	61 05       	cpc	r22, r1
    250c:	08 94       	sec
    250e:	08 95       	ret

00002510 <__fp_zero>:
    2510:	e8 94       	clt

00002512 <__fp_szero>:
    2512:	bb 27       	eor	r27, r27
    2514:	66 27       	eor	r22, r22
    2516:	77 27       	eor	r23, r23
    2518:	cb 01       	movw	r24, r22
    251a:	97 f9       	bld	r25, 7
    251c:	08 95       	ret

0000251e <__mulsf3>:
    251e:	0e 94 a2 12 	call	0x2544	; 0x2544 <__mulsf3x>
    2522:	0c 94 55 12 	jmp	0x24aa	; 0x24aa <__fp_round>
    2526:	0e 94 47 12 	call	0x248e	; 0x248e <__fp_pscA>
    252a:	38 f0       	brcs	.+14     	; 0x253a <__mulsf3+0x1c>
    252c:	0e 94 4e 12 	call	0x249c	; 0x249c <__fp_pscB>
    2530:	20 f0       	brcs	.+8      	; 0x253a <__mulsf3+0x1c>
    2532:	95 23       	and	r25, r21
    2534:	11 f0       	breq	.+4      	; 0x253a <__mulsf3+0x1c>
    2536:	0c 94 3e 12 	jmp	0x247c	; 0x247c <__fp_inf>
    253a:	0c 94 44 12 	jmp	0x2488	; 0x2488 <__fp_nan>
    253e:	11 24       	eor	r1, r1
    2540:	0c 94 89 12 	jmp	0x2512	; 0x2512 <__fp_szero>

00002544 <__mulsf3x>:
    2544:	0e 94 66 12 	call	0x24cc	; 0x24cc <__fp_split3>
    2548:	70 f3       	brcs	.-36     	; 0x2526 <__mulsf3+0x8>

0000254a <__mulsf3_pse>:
    254a:	95 9f       	mul	r25, r21
    254c:	c1 f3       	breq	.-16     	; 0x253e <__mulsf3+0x20>
    254e:	95 0f       	add	r25, r21
    2550:	50 e0       	ldi	r21, 0x00	; 0
    2552:	55 1f       	adc	r21, r21
    2554:	62 9f       	mul	r22, r18
    2556:	f0 01       	movw	r30, r0
    2558:	72 9f       	mul	r23, r18
    255a:	bb 27       	eor	r27, r27
    255c:	f0 0d       	add	r31, r0
    255e:	b1 1d       	adc	r27, r1
    2560:	63 9f       	mul	r22, r19
    2562:	aa 27       	eor	r26, r26
    2564:	f0 0d       	add	r31, r0
    2566:	b1 1d       	adc	r27, r1
    2568:	aa 1f       	adc	r26, r26
    256a:	64 9f       	mul	r22, r20
    256c:	66 27       	eor	r22, r22
    256e:	b0 0d       	add	r27, r0
    2570:	a1 1d       	adc	r26, r1
    2572:	66 1f       	adc	r22, r22
    2574:	82 9f       	mul	r24, r18
    2576:	22 27       	eor	r18, r18
    2578:	b0 0d       	add	r27, r0
    257a:	a1 1d       	adc	r26, r1
    257c:	62 1f       	adc	r22, r18
    257e:	73 9f       	mul	r23, r19
    2580:	b0 0d       	add	r27, r0
    2582:	a1 1d       	adc	r26, r1
    2584:	62 1f       	adc	r22, r18
    2586:	83 9f       	mul	r24, r19
    2588:	a0 0d       	add	r26, r0
    258a:	61 1d       	adc	r22, r1
    258c:	22 1f       	adc	r18, r18
    258e:	74 9f       	mul	r23, r20
    2590:	33 27       	eor	r19, r19
    2592:	a0 0d       	add	r26, r0
    2594:	61 1d       	adc	r22, r1
    2596:	23 1f       	adc	r18, r19
    2598:	84 9f       	mul	r24, r20
    259a:	60 0d       	add	r22, r0
    259c:	21 1d       	adc	r18, r1
    259e:	82 2f       	mov	r24, r18
    25a0:	76 2f       	mov	r23, r22
    25a2:	6a 2f       	mov	r22, r26
    25a4:	11 24       	eor	r1, r1
    25a6:	9f 57       	subi	r25, 0x7F	; 127
    25a8:	50 40       	sbci	r21, 0x00	; 0
    25aa:	9a f0       	brmi	.+38     	; 0x25d2 <__mulsf3_pse+0x88>
    25ac:	f1 f0       	breq	.+60     	; 0x25ea <__mulsf3_pse+0xa0>
    25ae:	88 23       	and	r24, r24
    25b0:	4a f0       	brmi	.+18     	; 0x25c4 <__mulsf3_pse+0x7a>
    25b2:	ee 0f       	add	r30, r30
    25b4:	ff 1f       	adc	r31, r31
    25b6:	bb 1f       	adc	r27, r27
    25b8:	66 1f       	adc	r22, r22
    25ba:	77 1f       	adc	r23, r23
    25bc:	88 1f       	adc	r24, r24
    25be:	91 50       	subi	r25, 0x01	; 1
    25c0:	50 40       	sbci	r21, 0x00	; 0
    25c2:	a9 f7       	brne	.-22     	; 0x25ae <__mulsf3_pse+0x64>
    25c4:	9e 3f       	cpi	r25, 0xFE	; 254
    25c6:	51 05       	cpc	r21, r1
    25c8:	80 f0       	brcs	.+32     	; 0x25ea <__mulsf3_pse+0xa0>
    25ca:	0c 94 3e 12 	jmp	0x247c	; 0x247c <__fp_inf>
    25ce:	0c 94 89 12 	jmp	0x2512	; 0x2512 <__fp_szero>
    25d2:	5f 3f       	cpi	r21, 0xFF	; 255
    25d4:	e4 f3       	brlt	.-8      	; 0x25ce <__mulsf3_pse+0x84>
    25d6:	98 3e       	cpi	r25, 0xE8	; 232
    25d8:	d4 f3       	brlt	.-12     	; 0x25ce <__mulsf3_pse+0x84>
    25da:	86 95       	lsr	r24
    25dc:	77 95       	ror	r23
    25de:	67 95       	ror	r22
    25e0:	b7 95       	ror	r27
    25e2:	f7 95       	ror	r31
    25e4:	e7 95       	ror	r30
    25e6:	9f 5f       	subi	r25, 0xFF	; 255
    25e8:	c1 f7       	brne	.-16     	; 0x25da <__mulsf3_pse+0x90>
    25ea:	fe 2b       	or	r31, r30
    25ec:	88 0f       	add	r24, r24
    25ee:	91 1d       	adc	r25, r1
    25f0:	96 95       	lsr	r25
    25f2:	87 95       	ror	r24
    25f4:	97 f9       	bld	r25, 7
    25f6:	08 95       	ret
    25f8:	19 f4       	brne	.+6      	; 0x2600 <__mulsf3_pse+0xb6>
    25fa:	16 f4       	brtc	.+4      	; 0x2600 <__mulsf3_pse+0xb6>
    25fc:	0c 94 44 12 	jmp	0x2488	; 0x2488 <__fp_nan>
    2600:	0c 94 42 13 	jmp	0x2684	; 0x2684 <__fp_mpack>

00002604 <sqrt>:
    2604:	0e 94 6e 12 	call	0x24dc	; 0x24dc <__fp_splitA>
    2608:	b8 f3       	brcs	.-18     	; 0x25f8 <__mulsf3_pse+0xae>
    260a:	99 23       	and	r25, r25
    260c:	c9 f3       	breq	.-14     	; 0x2600 <__mulsf3_pse+0xb6>
    260e:	b6 f3       	brts	.-20     	; 0x25fc <__mulsf3_pse+0xb2>
    2610:	9f 57       	subi	r25, 0x7F	; 127
    2612:	55 0b       	sbc	r21, r21
    2614:	87 ff       	sbrs	r24, 7
    2616:	0e 94 50 13 	call	0x26a0	; 0x26a0 <__fp_norm2>
    261a:	00 24       	eor	r0, r0
    261c:	a0 e6       	ldi	r26, 0x60	; 96
    261e:	40 ea       	ldi	r20, 0xA0	; 160
    2620:	90 01       	movw	r18, r0
    2622:	80 58       	subi	r24, 0x80	; 128
    2624:	56 95       	lsr	r21
    2626:	97 95       	ror	r25
    2628:	28 f4       	brcc	.+10     	; 0x2634 <sqrt+0x30>
    262a:	80 5c       	subi	r24, 0xC0	; 192
    262c:	66 0f       	add	r22, r22
    262e:	77 1f       	adc	r23, r23
    2630:	88 1f       	adc	r24, r24
    2632:	20 f0       	brcs	.+8      	; 0x263c <sqrt+0x38>
    2634:	26 17       	cp	r18, r22
    2636:	37 07       	cpc	r19, r23
    2638:	48 07       	cpc	r20, r24
    263a:	30 f4       	brcc	.+12     	; 0x2648 <sqrt+0x44>
    263c:	62 1b       	sub	r22, r18
    263e:	73 0b       	sbc	r23, r19
    2640:	84 0b       	sbc	r24, r20
    2642:	20 29       	or	r18, r0
    2644:	31 29       	or	r19, r1
    2646:	4a 2b       	or	r20, r26
    2648:	a6 95       	lsr	r26
    264a:	17 94       	ror	r1
    264c:	07 94       	ror	r0
    264e:	20 25       	eor	r18, r0
    2650:	31 25       	eor	r19, r1
    2652:	4a 27       	eor	r20, r26
    2654:	58 f7       	brcc	.-42     	; 0x262c <sqrt+0x28>
    2656:	66 0f       	add	r22, r22
    2658:	77 1f       	adc	r23, r23
    265a:	88 1f       	adc	r24, r24
    265c:	20 f0       	brcs	.+8      	; 0x2666 <sqrt+0x62>
    265e:	26 17       	cp	r18, r22
    2660:	37 07       	cpc	r19, r23
    2662:	48 07       	cpc	r20, r24
    2664:	30 f4       	brcc	.+12     	; 0x2672 <sqrt+0x6e>
    2666:	62 0b       	sbc	r22, r18
    2668:	73 0b       	sbc	r23, r19
    266a:	84 0b       	sbc	r24, r20
    266c:	20 0d       	add	r18, r0
    266e:	31 1d       	adc	r19, r1
    2670:	41 1d       	adc	r20, r1
    2672:	a0 95       	com	r26
    2674:	81 f7       	brne	.-32     	; 0x2656 <sqrt+0x52>
    2676:	b9 01       	movw	r22, r18
    2678:	84 2f       	mov	r24, r20
    267a:	91 58       	subi	r25, 0x81	; 129
    267c:	88 0f       	add	r24, r24
    267e:	96 95       	lsr	r25
    2680:	87 95       	ror	r24
    2682:	08 95       	ret

00002684 <__fp_mpack>:
    2684:	9f 3f       	cpi	r25, 0xFF	; 255
    2686:	31 f0       	breq	.+12     	; 0x2694 <__fp_mpack_finite+0xc>

00002688 <__fp_mpack_finite>:
    2688:	91 50       	subi	r25, 0x01	; 1
    268a:	20 f4       	brcc	.+8      	; 0x2694 <__fp_mpack_finite+0xc>
    268c:	87 95       	ror	r24
    268e:	77 95       	ror	r23
    2690:	67 95       	ror	r22
    2692:	b7 95       	ror	r27
    2694:	88 0f       	add	r24, r24
    2696:	91 1d       	adc	r25, r1
    2698:	96 95       	lsr	r25
    269a:	87 95       	ror	r24
    269c:	97 f9       	bld	r25, 7
    269e:	08 95       	ret

000026a0 <__fp_norm2>:
    26a0:	91 50       	subi	r25, 0x01	; 1
    26a2:	50 40       	sbci	r21, 0x00	; 0
    26a4:	66 0f       	add	r22, r22
    26a6:	77 1f       	adc	r23, r23
    26a8:	88 1f       	adc	r24, r24
    26aa:	d2 f7       	brpl	.-12     	; 0x26a0 <__fp_norm2>
    26ac:	08 95       	ret

000026ae <__udivmodhi4>:
    26ae:	aa 1b       	sub	r26, r26
    26b0:	bb 1b       	sub	r27, r27
    26b2:	51 e1       	ldi	r21, 0x11	; 17
    26b4:	07 c0       	rjmp	.+14     	; 0x26c4 <__udivmodhi4_ep>

000026b6 <__udivmodhi4_loop>:
    26b6:	aa 1f       	adc	r26, r26
    26b8:	bb 1f       	adc	r27, r27
    26ba:	a6 17       	cp	r26, r22
    26bc:	b7 07       	cpc	r27, r23
    26be:	10 f0       	brcs	.+4      	; 0x26c4 <__udivmodhi4_ep>
    26c0:	a6 1b       	sub	r26, r22
    26c2:	b7 0b       	sbc	r27, r23

000026c4 <__udivmodhi4_ep>:
    26c4:	88 1f       	adc	r24, r24
    26c6:	99 1f       	adc	r25, r25
    26c8:	5a 95       	dec	r21
    26ca:	a9 f7       	brne	.-22     	; 0x26b6 <__udivmodhi4_loop>
    26cc:	80 95       	com	r24
    26ce:	90 95       	com	r25
    26d0:	bc 01       	movw	r22, r24
    26d2:	cd 01       	movw	r24, r26
    26d4:	08 95       	ret

000026d6 <__divmodsi4>:
    26d6:	05 2e       	mov	r0, r21
    26d8:	97 fb       	bst	r25, 7
    26da:	1e f4       	brtc	.+6      	; 0x26e2 <__divmodsi4+0xc>
    26dc:	00 94       	com	r0
    26de:	0e 94 82 13 	call	0x2704	; 0x2704 <__negsi2>
    26e2:	57 fd       	sbrc	r21, 7
    26e4:	07 d0       	rcall	.+14     	; 0x26f4 <__divmodsi4_neg2>
    26e6:	0e 94 9f 13 	call	0x273e	; 0x273e <__udivmodsi4>
    26ea:	07 fc       	sbrc	r0, 7
    26ec:	03 d0       	rcall	.+6      	; 0x26f4 <__divmodsi4_neg2>
    26ee:	4e f4       	brtc	.+18     	; 0x2702 <__divmodsi4_exit>
    26f0:	0c 94 82 13 	jmp	0x2704	; 0x2704 <__negsi2>

000026f4 <__divmodsi4_neg2>:
    26f4:	50 95       	com	r21
    26f6:	40 95       	com	r20
    26f8:	30 95       	com	r19
    26fa:	21 95       	neg	r18
    26fc:	3f 4f       	sbci	r19, 0xFF	; 255
    26fe:	4f 4f       	sbci	r20, 0xFF	; 255
    2700:	5f 4f       	sbci	r21, 0xFF	; 255

00002702 <__divmodsi4_exit>:
    2702:	08 95       	ret

00002704 <__negsi2>:
    2704:	90 95       	com	r25
    2706:	80 95       	com	r24
    2708:	70 95       	com	r23
    270a:	61 95       	neg	r22
    270c:	7f 4f       	sbci	r23, 0xFF	; 255
    270e:	8f 4f       	sbci	r24, 0xFF	; 255
    2710:	9f 4f       	sbci	r25, 0xFF	; 255
    2712:	08 95       	ret

00002714 <__tablejump2__>:
    2714:	ee 0f       	add	r30, r30
    2716:	ff 1f       	adc	r31, r31
    2718:	05 90       	lpm	r0, Z+
    271a:	f4 91       	lpm	r31, Z
    271c:	e0 2d       	mov	r30, r0
    271e:	09 94       	ijmp

00002720 <__umulhisi3>:
    2720:	a2 9f       	mul	r26, r18
    2722:	b0 01       	movw	r22, r0
    2724:	b3 9f       	mul	r27, r19
    2726:	c0 01       	movw	r24, r0
    2728:	a3 9f       	mul	r26, r19
    272a:	70 0d       	add	r23, r0
    272c:	81 1d       	adc	r24, r1
    272e:	11 24       	eor	r1, r1
    2730:	91 1d       	adc	r25, r1
    2732:	b2 9f       	mul	r27, r18
    2734:	70 0d       	add	r23, r0
    2736:	81 1d       	adc	r24, r1
    2738:	11 24       	eor	r1, r1
    273a:	91 1d       	adc	r25, r1
    273c:	08 95       	ret

0000273e <__udivmodsi4>:
    273e:	a1 e2       	ldi	r26, 0x21	; 33
    2740:	1a 2e       	mov	r1, r26
    2742:	aa 1b       	sub	r26, r26
    2744:	bb 1b       	sub	r27, r27
    2746:	fd 01       	movw	r30, r26
    2748:	0d c0       	rjmp	.+26     	; 0x2764 <__udivmodsi4_ep>

0000274a <__udivmodsi4_loop>:
    274a:	aa 1f       	adc	r26, r26
    274c:	bb 1f       	adc	r27, r27
    274e:	ee 1f       	adc	r30, r30
    2750:	ff 1f       	adc	r31, r31
    2752:	a2 17       	cp	r26, r18
    2754:	b3 07       	cpc	r27, r19
    2756:	e4 07       	cpc	r30, r20
    2758:	f5 07       	cpc	r31, r21
    275a:	20 f0       	brcs	.+8      	; 0x2764 <__udivmodsi4_ep>
    275c:	a2 1b       	sub	r26, r18
    275e:	b3 0b       	sbc	r27, r19
    2760:	e4 0b       	sbc	r30, r20
    2762:	f5 0b       	sbc	r31, r21

00002764 <__udivmodsi4_ep>:
    2764:	66 1f       	adc	r22, r22
    2766:	77 1f       	adc	r23, r23
    2768:	88 1f       	adc	r24, r24
    276a:	99 1f       	adc	r25, r25
    276c:	1a 94       	dec	r1
    276e:	69 f7       	brne	.-38     	; 0x274a <__udivmodsi4_loop>
    2770:	60 95       	com	r22
    2772:	70 95       	com	r23
    2774:	80 95       	com	r24
    2776:	90 95       	com	r25
    2778:	9b 01       	movw	r18, r22
    277a:	ac 01       	movw	r20, r24
    277c:	bd 01       	movw	r22, r26
    277e:	cf 01       	movw	r24, r30
    2780:	08 95       	ret

00002782 <strcat>:
    2782:	fb 01       	movw	r30, r22
    2784:	dc 01       	movw	r26, r24
    2786:	0d 90       	ld	r0, X+
    2788:	00 20       	and	r0, r0
    278a:	e9 f7       	brne	.-6      	; 0x2786 <strcat+0x4>
    278c:	11 97       	sbiw	r26, 0x01	; 1
    278e:	01 90       	ld	r0, Z+
    2790:	0d 92       	st	X+, r0
    2792:	00 20       	and	r0, r0
    2794:	e1 f7       	brne	.-8      	; 0x278e <strcat+0xc>
    2796:	08 95       	ret

00002798 <strcmp>:
    2798:	fb 01       	movw	r30, r22
    279a:	dc 01       	movw	r26, r24
    279c:	8d 91       	ld	r24, X+
    279e:	01 90       	ld	r0, Z+
    27a0:	80 19       	sub	r24, r0
    27a2:	01 10       	cpse	r0, r1
    27a4:	d9 f3       	breq	.-10     	; 0x279c <strcmp+0x4>
    27a6:	99 0b       	sbc	r25, r25
    27a8:	08 95       	ret

000027aa <sprintf>:
    27aa:	ae e0       	ldi	r26, 0x0E	; 14
    27ac:	b0 e0       	ldi	r27, 0x00	; 0
    27ae:	eb ed       	ldi	r30, 0xDB	; 219
    27b0:	f3 e1       	ldi	r31, 0x13	; 19
    27b2:	0c 94 c4 16 	jmp	0x2d88	; 0x2d88 <__prologue_saves__+0x1c>
    27b6:	0d 89       	ldd	r16, Y+21	; 0x15
    27b8:	1e 89       	ldd	r17, Y+22	; 0x16
    27ba:	86 e0       	ldi	r24, 0x06	; 6
    27bc:	8c 83       	std	Y+4, r24	; 0x04
    27be:	1a 83       	std	Y+2, r17	; 0x02
    27c0:	09 83       	std	Y+1, r16	; 0x01
    27c2:	8f ef       	ldi	r24, 0xFF	; 255
    27c4:	9f e7       	ldi	r25, 0x7F	; 127
    27c6:	9e 83       	std	Y+6, r25	; 0x06
    27c8:	8d 83       	std	Y+5, r24	; 0x05
    27ca:	ae 01       	movw	r20, r28
    27cc:	47 5e       	subi	r20, 0xE7	; 231
    27ce:	5f 4f       	sbci	r21, 0xFF	; 255
    27d0:	6f 89       	ldd	r22, Y+23	; 0x17
    27d2:	78 8d       	ldd	r23, Y+24	; 0x18
    27d4:	ce 01       	movw	r24, r28
    27d6:	01 96       	adiw	r24, 0x01	; 1
    27d8:	0e 94 f7 13 	call	0x27ee	; 0x27ee <vfprintf>
    27dc:	ef 81       	ldd	r30, Y+7	; 0x07
    27de:	f8 85       	ldd	r31, Y+8	; 0x08
    27e0:	e0 0f       	add	r30, r16
    27e2:	f1 1f       	adc	r31, r17
    27e4:	10 82       	st	Z, r1
    27e6:	2e 96       	adiw	r28, 0x0e	; 14
    27e8:	e4 e0       	ldi	r30, 0x04	; 4
    27ea:	0c 94 e0 16 	jmp	0x2dc0	; 0x2dc0 <__epilogue_restores__+0x1c>

000027ee <vfprintf>:
    27ee:	ab e0       	ldi	r26, 0x0B	; 11
    27f0:	b0 e0       	ldi	r27, 0x00	; 0
    27f2:	ed ef       	ldi	r30, 0xFD	; 253
    27f4:	f3 e1       	ldi	r31, 0x13	; 19
    27f6:	0c 94 b6 16 	jmp	0x2d6c	; 0x2d6c <__prologue_saves__>
    27fa:	6c 01       	movw	r12, r24
    27fc:	7b 01       	movw	r14, r22
    27fe:	8a 01       	movw	r16, r20
    2800:	fc 01       	movw	r30, r24
    2802:	17 82       	std	Z+7, r1	; 0x07
    2804:	16 82       	std	Z+6, r1	; 0x06
    2806:	83 81       	ldd	r24, Z+3	; 0x03
    2808:	81 ff       	sbrs	r24, 1
    280a:	cc c1       	rjmp	.+920    	; 0x2ba4 <vfprintf+0x3b6>
    280c:	ce 01       	movw	r24, r28
    280e:	01 96       	adiw	r24, 0x01	; 1
    2810:	3c 01       	movw	r6, r24
    2812:	f6 01       	movw	r30, r12
    2814:	93 81       	ldd	r25, Z+3	; 0x03
    2816:	f7 01       	movw	r30, r14
    2818:	93 fd       	sbrc	r25, 3
    281a:	85 91       	lpm	r24, Z+
    281c:	93 ff       	sbrs	r25, 3
    281e:	81 91       	ld	r24, Z+
    2820:	7f 01       	movw	r14, r30
    2822:	88 23       	and	r24, r24
    2824:	09 f4       	brne	.+2      	; 0x2828 <vfprintf+0x3a>
    2826:	ba c1       	rjmp	.+884    	; 0x2b9c <vfprintf+0x3ae>
    2828:	85 32       	cpi	r24, 0x25	; 37
    282a:	39 f4       	brne	.+14     	; 0x283a <vfprintf+0x4c>
    282c:	93 fd       	sbrc	r25, 3
    282e:	85 91       	lpm	r24, Z+
    2830:	93 ff       	sbrs	r25, 3
    2832:	81 91       	ld	r24, Z+
    2834:	7f 01       	movw	r14, r30
    2836:	85 32       	cpi	r24, 0x25	; 37
    2838:	29 f4       	brne	.+10     	; 0x2844 <vfprintf+0x56>
    283a:	b6 01       	movw	r22, r12
    283c:	90 e0       	ldi	r25, 0x00	; 0
    283e:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <fputc>
    2842:	e7 cf       	rjmp	.-50     	; 0x2812 <vfprintf+0x24>
    2844:	91 2c       	mov	r9, r1
    2846:	21 2c       	mov	r2, r1
    2848:	31 2c       	mov	r3, r1
    284a:	ff e1       	ldi	r31, 0x1F	; 31
    284c:	f3 15       	cp	r31, r3
    284e:	d8 f0       	brcs	.+54     	; 0x2886 <vfprintf+0x98>
    2850:	8b 32       	cpi	r24, 0x2B	; 43
    2852:	79 f0       	breq	.+30     	; 0x2872 <vfprintf+0x84>
    2854:	38 f4       	brcc	.+14     	; 0x2864 <vfprintf+0x76>
    2856:	80 32       	cpi	r24, 0x20	; 32
    2858:	79 f0       	breq	.+30     	; 0x2878 <vfprintf+0x8a>
    285a:	83 32       	cpi	r24, 0x23	; 35
    285c:	a1 f4       	brne	.+40     	; 0x2886 <vfprintf+0x98>
    285e:	23 2d       	mov	r18, r3
    2860:	20 61       	ori	r18, 0x10	; 16
    2862:	1d c0       	rjmp	.+58     	; 0x289e <vfprintf+0xb0>
    2864:	8d 32       	cpi	r24, 0x2D	; 45
    2866:	61 f0       	breq	.+24     	; 0x2880 <vfprintf+0x92>
    2868:	80 33       	cpi	r24, 0x30	; 48
    286a:	69 f4       	brne	.+26     	; 0x2886 <vfprintf+0x98>
    286c:	23 2d       	mov	r18, r3
    286e:	21 60       	ori	r18, 0x01	; 1
    2870:	16 c0       	rjmp	.+44     	; 0x289e <vfprintf+0xb0>
    2872:	83 2d       	mov	r24, r3
    2874:	82 60       	ori	r24, 0x02	; 2
    2876:	38 2e       	mov	r3, r24
    2878:	e3 2d       	mov	r30, r3
    287a:	e4 60       	ori	r30, 0x04	; 4
    287c:	3e 2e       	mov	r3, r30
    287e:	2a c0       	rjmp	.+84     	; 0x28d4 <vfprintf+0xe6>
    2880:	f3 2d       	mov	r31, r3
    2882:	f8 60       	ori	r31, 0x08	; 8
    2884:	1d c0       	rjmp	.+58     	; 0x28c0 <vfprintf+0xd2>
    2886:	37 fc       	sbrc	r3, 7
    2888:	2d c0       	rjmp	.+90     	; 0x28e4 <vfprintf+0xf6>
    288a:	20 ed       	ldi	r18, 0xD0	; 208
    288c:	28 0f       	add	r18, r24
    288e:	2a 30       	cpi	r18, 0x0A	; 10
    2890:	40 f0       	brcs	.+16     	; 0x28a2 <vfprintf+0xb4>
    2892:	8e 32       	cpi	r24, 0x2E	; 46
    2894:	b9 f4       	brne	.+46     	; 0x28c4 <vfprintf+0xd6>
    2896:	36 fc       	sbrc	r3, 6
    2898:	81 c1       	rjmp	.+770    	; 0x2b9c <vfprintf+0x3ae>
    289a:	23 2d       	mov	r18, r3
    289c:	20 64       	ori	r18, 0x40	; 64
    289e:	32 2e       	mov	r3, r18
    28a0:	19 c0       	rjmp	.+50     	; 0x28d4 <vfprintf+0xe6>
    28a2:	36 fe       	sbrs	r3, 6
    28a4:	06 c0       	rjmp	.+12     	; 0x28b2 <vfprintf+0xc4>
    28a6:	8a e0       	ldi	r24, 0x0A	; 10
    28a8:	98 9e       	mul	r9, r24
    28aa:	20 0d       	add	r18, r0
    28ac:	11 24       	eor	r1, r1
    28ae:	92 2e       	mov	r9, r18
    28b0:	11 c0       	rjmp	.+34     	; 0x28d4 <vfprintf+0xe6>
    28b2:	ea e0       	ldi	r30, 0x0A	; 10
    28b4:	2e 9e       	mul	r2, r30
    28b6:	20 0d       	add	r18, r0
    28b8:	11 24       	eor	r1, r1
    28ba:	22 2e       	mov	r2, r18
    28bc:	f3 2d       	mov	r31, r3
    28be:	f0 62       	ori	r31, 0x20	; 32
    28c0:	3f 2e       	mov	r3, r31
    28c2:	08 c0       	rjmp	.+16     	; 0x28d4 <vfprintf+0xe6>
    28c4:	8c 36       	cpi	r24, 0x6C	; 108
    28c6:	21 f4       	brne	.+8      	; 0x28d0 <vfprintf+0xe2>
    28c8:	83 2d       	mov	r24, r3
    28ca:	80 68       	ori	r24, 0x80	; 128
    28cc:	38 2e       	mov	r3, r24
    28ce:	02 c0       	rjmp	.+4      	; 0x28d4 <vfprintf+0xe6>
    28d0:	88 36       	cpi	r24, 0x68	; 104
    28d2:	41 f4       	brne	.+16     	; 0x28e4 <vfprintf+0xf6>
    28d4:	f7 01       	movw	r30, r14
    28d6:	93 fd       	sbrc	r25, 3
    28d8:	85 91       	lpm	r24, Z+
    28da:	93 ff       	sbrs	r25, 3
    28dc:	81 91       	ld	r24, Z+
    28de:	7f 01       	movw	r14, r30
    28e0:	81 11       	cpse	r24, r1
    28e2:	b3 cf       	rjmp	.-154    	; 0x284a <vfprintf+0x5c>
    28e4:	98 2f       	mov	r25, r24
    28e6:	9f 7d       	andi	r25, 0xDF	; 223
    28e8:	95 54       	subi	r25, 0x45	; 69
    28ea:	93 30       	cpi	r25, 0x03	; 3
    28ec:	28 f4       	brcc	.+10     	; 0x28f8 <vfprintf+0x10a>
    28ee:	0c 5f       	subi	r16, 0xFC	; 252
    28f0:	1f 4f       	sbci	r17, 0xFF	; 255
    28f2:	9f e3       	ldi	r25, 0x3F	; 63
    28f4:	99 83       	std	Y+1, r25	; 0x01
    28f6:	0d c0       	rjmp	.+26     	; 0x2912 <vfprintf+0x124>
    28f8:	83 36       	cpi	r24, 0x63	; 99
    28fa:	31 f0       	breq	.+12     	; 0x2908 <vfprintf+0x11a>
    28fc:	83 37       	cpi	r24, 0x73	; 115
    28fe:	71 f0       	breq	.+28     	; 0x291c <vfprintf+0x12e>
    2900:	83 35       	cpi	r24, 0x53	; 83
    2902:	09 f0       	breq	.+2      	; 0x2906 <vfprintf+0x118>
    2904:	59 c0       	rjmp	.+178    	; 0x29b8 <vfprintf+0x1ca>
    2906:	21 c0       	rjmp	.+66     	; 0x294a <vfprintf+0x15c>
    2908:	f8 01       	movw	r30, r16
    290a:	80 81       	ld	r24, Z
    290c:	89 83       	std	Y+1, r24	; 0x01
    290e:	0e 5f       	subi	r16, 0xFE	; 254
    2910:	1f 4f       	sbci	r17, 0xFF	; 255
    2912:	88 24       	eor	r8, r8
    2914:	83 94       	inc	r8
    2916:	91 2c       	mov	r9, r1
    2918:	53 01       	movw	r10, r6
    291a:	13 c0       	rjmp	.+38     	; 0x2942 <vfprintf+0x154>
    291c:	28 01       	movw	r4, r16
    291e:	f2 e0       	ldi	r31, 0x02	; 2
    2920:	4f 0e       	add	r4, r31
    2922:	51 1c       	adc	r5, r1
    2924:	f8 01       	movw	r30, r16
    2926:	a0 80       	ld	r10, Z
    2928:	b1 80       	ldd	r11, Z+1	; 0x01
    292a:	36 fe       	sbrs	r3, 6
    292c:	03 c0       	rjmp	.+6      	; 0x2934 <vfprintf+0x146>
    292e:	69 2d       	mov	r22, r9
    2930:	70 e0       	ldi	r23, 0x00	; 0
    2932:	02 c0       	rjmp	.+4      	; 0x2938 <vfprintf+0x14a>
    2934:	6f ef       	ldi	r22, 0xFF	; 255
    2936:	7f ef       	ldi	r23, 0xFF	; 255
    2938:	c5 01       	movw	r24, r10
    293a:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <strnlen>
    293e:	4c 01       	movw	r8, r24
    2940:	82 01       	movw	r16, r4
    2942:	f3 2d       	mov	r31, r3
    2944:	ff 77       	andi	r31, 0x7F	; 127
    2946:	3f 2e       	mov	r3, r31
    2948:	16 c0       	rjmp	.+44     	; 0x2976 <vfprintf+0x188>
    294a:	28 01       	movw	r4, r16
    294c:	22 e0       	ldi	r18, 0x02	; 2
    294e:	42 0e       	add	r4, r18
    2950:	51 1c       	adc	r5, r1
    2952:	f8 01       	movw	r30, r16
    2954:	a0 80       	ld	r10, Z
    2956:	b1 80       	ldd	r11, Z+1	; 0x01
    2958:	36 fe       	sbrs	r3, 6
    295a:	03 c0       	rjmp	.+6      	; 0x2962 <vfprintf+0x174>
    295c:	69 2d       	mov	r22, r9
    295e:	70 e0       	ldi	r23, 0x00	; 0
    2960:	02 c0       	rjmp	.+4      	; 0x2966 <vfprintf+0x178>
    2962:	6f ef       	ldi	r22, 0xFF	; 255
    2964:	7f ef       	ldi	r23, 0xFF	; 255
    2966:	c5 01       	movw	r24, r10
    2968:	0e 94 d8 15 	call	0x2bb0	; 0x2bb0 <strnlen_P>
    296c:	4c 01       	movw	r8, r24
    296e:	f3 2d       	mov	r31, r3
    2970:	f0 68       	ori	r31, 0x80	; 128
    2972:	3f 2e       	mov	r3, r31
    2974:	82 01       	movw	r16, r4
    2976:	33 fc       	sbrc	r3, 3
    2978:	1b c0       	rjmp	.+54     	; 0x29b0 <vfprintf+0x1c2>
    297a:	82 2d       	mov	r24, r2
    297c:	90 e0       	ldi	r25, 0x00	; 0
    297e:	88 16       	cp	r8, r24
    2980:	99 06       	cpc	r9, r25
    2982:	b0 f4       	brcc	.+44     	; 0x29b0 <vfprintf+0x1c2>
    2984:	b6 01       	movw	r22, r12
    2986:	80 e2       	ldi	r24, 0x20	; 32
    2988:	90 e0       	ldi	r25, 0x00	; 0
    298a:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <fputc>
    298e:	2a 94       	dec	r2
    2990:	f4 cf       	rjmp	.-24     	; 0x297a <vfprintf+0x18c>
    2992:	f5 01       	movw	r30, r10
    2994:	37 fc       	sbrc	r3, 7
    2996:	85 91       	lpm	r24, Z+
    2998:	37 fe       	sbrs	r3, 7
    299a:	81 91       	ld	r24, Z+
    299c:	5f 01       	movw	r10, r30
    299e:	b6 01       	movw	r22, r12
    29a0:	90 e0       	ldi	r25, 0x00	; 0
    29a2:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <fputc>
    29a6:	21 10       	cpse	r2, r1
    29a8:	2a 94       	dec	r2
    29aa:	21 e0       	ldi	r18, 0x01	; 1
    29ac:	82 1a       	sub	r8, r18
    29ae:	91 08       	sbc	r9, r1
    29b0:	81 14       	cp	r8, r1
    29b2:	91 04       	cpc	r9, r1
    29b4:	71 f7       	brne	.-36     	; 0x2992 <vfprintf+0x1a4>
    29b6:	e8 c0       	rjmp	.+464    	; 0x2b88 <vfprintf+0x39a>
    29b8:	84 36       	cpi	r24, 0x64	; 100
    29ba:	11 f0       	breq	.+4      	; 0x29c0 <vfprintf+0x1d2>
    29bc:	89 36       	cpi	r24, 0x69	; 105
    29be:	41 f5       	brne	.+80     	; 0x2a10 <vfprintf+0x222>
    29c0:	f8 01       	movw	r30, r16
    29c2:	37 fe       	sbrs	r3, 7
    29c4:	07 c0       	rjmp	.+14     	; 0x29d4 <vfprintf+0x1e6>
    29c6:	60 81       	ld	r22, Z
    29c8:	71 81       	ldd	r23, Z+1	; 0x01
    29ca:	82 81       	ldd	r24, Z+2	; 0x02
    29cc:	93 81       	ldd	r25, Z+3	; 0x03
    29ce:	0c 5f       	subi	r16, 0xFC	; 252
    29d0:	1f 4f       	sbci	r17, 0xFF	; 255
    29d2:	08 c0       	rjmp	.+16     	; 0x29e4 <vfprintf+0x1f6>
    29d4:	60 81       	ld	r22, Z
    29d6:	71 81       	ldd	r23, Z+1	; 0x01
    29d8:	07 2e       	mov	r0, r23
    29da:	00 0c       	add	r0, r0
    29dc:	88 0b       	sbc	r24, r24
    29de:	99 0b       	sbc	r25, r25
    29e0:	0e 5f       	subi	r16, 0xFE	; 254
    29e2:	1f 4f       	sbci	r17, 0xFF	; 255
    29e4:	f3 2d       	mov	r31, r3
    29e6:	ff 76       	andi	r31, 0x6F	; 111
    29e8:	3f 2e       	mov	r3, r31
    29ea:	97 ff       	sbrs	r25, 7
    29ec:	09 c0       	rjmp	.+18     	; 0x2a00 <vfprintf+0x212>
    29ee:	90 95       	com	r25
    29f0:	80 95       	com	r24
    29f2:	70 95       	com	r23
    29f4:	61 95       	neg	r22
    29f6:	7f 4f       	sbci	r23, 0xFF	; 255
    29f8:	8f 4f       	sbci	r24, 0xFF	; 255
    29fa:	9f 4f       	sbci	r25, 0xFF	; 255
    29fc:	f0 68       	ori	r31, 0x80	; 128
    29fe:	3f 2e       	mov	r3, r31
    2a00:	2a e0       	ldi	r18, 0x0A	; 10
    2a02:	30 e0       	ldi	r19, 0x00	; 0
    2a04:	a3 01       	movw	r20, r6
    2a06:	0e 94 2a 16 	call	0x2c54	; 0x2c54 <__ultoa_invert>
    2a0a:	88 2e       	mov	r8, r24
    2a0c:	86 18       	sub	r8, r6
    2a0e:	45 c0       	rjmp	.+138    	; 0x2a9a <vfprintf+0x2ac>
    2a10:	85 37       	cpi	r24, 0x75	; 117
    2a12:	31 f4       	brne	.+12     	; 0x2a20 <vfprintf+0x232>
    2a14:	23 2d       	mov	r18, r3
    2a16:	2f 7e       	andi	r18, 0xEF	; 239
    2a18:	b2 2e       	mov	r11, r18
    2a1a:	2a e0       	ldi	r18, 0x0A	; 10
    2a1c:	30 e0       	ldi	r19, 0x00	; 0
    2a1e:	25 c0       	rjmp	.+74     	; 0x2a6a <vfprintf+0x27c>
    2a20:	93 2d       	mov	r25, r3
    2a22:	99 7f       	andi	r25, 0xF9	; 249
    2a24:	b9 2e       	mov	r11, r25
    2a26:	8f 36       	cpi	r24, 0x6F	; 111
    2a28:	c1 f0       	breq	.+48     	; 0x2a5a <vfprintf+0x26c>
    2a2a:	18 f4       	brcc	.+6      	; 0x2a32 <vfprintf+0x244>
    2a2c:	88 35       	cpi	r24, 0x58	; 88
    2a2e:	79 f0       	breq	.+30     	; 0x2a4e <vfprintf+0x260>
    2a30:	b5 c0       	rjmp	.+362    	; 0x2b9c <vfprintf+0x3ae>
    2a32:	80 37       	cpi	r24, 0x70	; 112
    2a34:	19 f0       	breq	.+6      	; 0x2a3c <vfprintf+0x24e>
    2a36:	88 37       	cpi	r24, 0x78	; 120
    2a38:	21 f0       	breq	.+8      	; 0x2a42 <vfprintf+0x254>
    2a3a:	b0 c0       	rjmp	.+352    	; 0x2b9c <vfprintf+0x3ae>
    2a3c:	e9 2f       	mov	r30, r25
    2a3e:	e0 61       	ori	r30, 0x10	; 16
    2a40:	be 2e       	mov	r11, r30
    2a42:	b4 fe       	sbrs	r11, 4
    2a44:	0d c0       	rjmp	.+26     	; 0x2a60 <vfprintf+0x272>
    2a46:	fb 2d       	mov	r31, r11
    2a48:	f4 60       	ori	r31, 0x04	; 4
    2a4a:	bf 2e       	mov	r11, r31
    2a4c:	09 c0       	rjmp	.+18     	; 0x2a60 <vfprintf+0x272>
    2a4e:	34 fe       	sbrs	r3, 4
    2a50:	0a c0       	rjmp	.+20     	; 0x2a66 <vfprintf+0x278>
    2a52:	29 2f       	mov	r18, r25
    2a54:	26 60       	ori	r18, 0x06	; 6
    2a56:	b2 2e       	mov	r11, r18
    2a58:	06 c0       	rjmp	.+12     	; 0x2a66 <vfprintf+0x278>
    2a5a:	28 e0       	ldi	r18, 0x08	; 8
    2a5c:	30 e0       	ldi	r19, 0x00	; 0
    2a5e:	05 c0       	rjmp	.+10     	; 0x2a6a <vfprintf+0x27c>
    2a60:	20 e1       	ldi	r18, 0x10	; 16
    2a62:	30 e0       	ldi	r19, 0x00	; 0
    2a64:	02 c0       	rjmp	.+4      	; 0x2a6a <vfprintf+0x27c>
    2a66:	20 e1       	ldi	r18, 0x10	; 16
    2a68:	32 e0       	ldi	r19, 0x02	; 2
    2a6a:	f8 01       	movw	r30, r16
    2a6c:	b7 fe       	sbrs	r11, 7
    2a6e:	07 c0       	rjmp	.+14     	; 0x2a7e <vfprintf+0x290>
    2a70:	60 81       	ld	r22, Z
    2a72:	71 81       	ldd	r23, Z+1	; 0x01
    2a74:	82 81       	ldd	r24, Z+2	; 0x02
    2a76:	93 81       	ldd	r25, Z+3	; 0x03
    2a78:	0c 5f       	subi	r16, 0xFC	; 252
    2a7a:	1f 4f       	sbci	r17, 0xFF	; 255
    2a7c:	06 c0       	rjmp	.+12     	; 0x2a8a <vfprintf+0x29c>
    2a7e:	60 81       	ld	r22, Z
    2a80:	71 81       	ldd	r23, Z+1	; 0x01
    2a82:	80 e0       	ldi	r24, 0x00	; 0
    2a84:	90 e0       	ldi	r25, 0x00	; 0
    2a86:	0e 5f       	subi	r16, 0xFE	; 254
    2a88:	1f 4f       	sbci	r17, 0xFF	; 255
    2a8a:	a3 01       	movw	r20, r6
    2a8c:	0e 94 2a 16 	call	0x2c54	; 0x2c54 <__ultoa_invert>
    2a90:	88 2e       	mov	r8, r24
    2a92:	86 18       	sub	r8, r6
    2a94:	fb 2d       	mov	r31, r11
    2a96:	ff 77       	andi	r31, 0x7F	; 127
    2a98:	3f 2e       	mov	r3, r31
    2a9a:	36 fe       	sbrs	r3, 6
    2a9c:	0d c0       	rjmp	.+26     	; 0x2ab8 <vfprintf+0x2ca>
    2a9e:	23 2d       	mov	r18, r3
    2aa0:	2e 7f       	andi	r18, 0xFE	; 254
    2aa2:	a2 2e       	mov	r10, r18
    2aa4:	89 14       	cp	r8, r9
    2aa6:	58 f4       	brcc	.+22     	; 0x2abe <vfprintf+0x2d0>
    2aa8:	34 fe       	sbrs	r3, 4
    2aaa:	0b c0       	rjmp	.+22     	; 0x2ac2 <vfprintf+0x2d4>
    2aac:	32 fc       	sbrc	r3, 2
    2aae:	09 c0       	rjmp	.+18     	; 0x2ac2 <vfprintf+0x2d4>
    2ab0:	83 2d       	mov	r24, r3
    2ab2:	8e 7e       	andi	r24, 0xEE	; 238
    2ab4:	a8 2e       	mov	r10, r24
    2ab6:	05 c0       	rjmp	.+10     	; 0x2ac2 <vfprintf+0x2d4>
    2ab8:	b8 2c       	mov	r11, r8
    2aba:	a3 2c       	mov	r10, r3
    2abc:	03 c0       	rjmp	.+6      	; 0x2ac4 <vfprintf+0x2d6>
    2abe:	b8 2c       	mov	r11, r8
    2ac0:	01 c0       	rjmp	.+2      	; 0x2ac4 <vfprintf+0x2d6>
    2ac2:	b9 2c       	mov	r11, r9
    2ac4:	a4 fe       	sbrs	r10, 4
    2ac6:	0f c0       	rjmp	.+30     	; 0x2ae6 <vfprintf+0x2f8>
    2ac8:	fe 01       	movw	r30, r28
    2aca:	e8 0d       	add	r30, r8
    2acc:	f1 1d       	adc	r31, r1
    2ace:	80 81       	ld	r24, Z
    2ad0:	80 33       	cpi	r24, 0x30	; 48
    2ad2:	21 f4       	brne	.+8      	; 0x2adc <vfprintf+0x2ee>
    2ad4:	9a 2d       	mov	r25, r10
    2ad6:	99 7e       	andi	r25, 0xE9	; 233
    2ad8:	a9 2e       	mov	r10, r25
    2ada:	09 c0       	rjmp	.+18     	; 0x2aee <vfprintf+0x300>
    2adc:	a2 fe       	sbrs	r10, 2
    2ade:	06 c0       	rjmp	.+12     	; 0x2aec <vfprintf+0x2fe>
    2ae0:	b3 94       	inc	r11
    2ae2:	b3 94       	inc	r11
    2ae4:	04 c0       	rjmp	.+8      	; 0x2aee <vfprintf+0x300>
    2ae6:	8a 2d       	mov	r24, r10
    2ae8:	86 78       	andi	r24, 0x86	; 134
    2aea:	09 f0       	breq	.+2      	; 0x2aee <vfprintf+0x300>
    2aec:	b3 94       	inc	r11
    2aee:	a3 fc       	sbrc	r10, 3
    2af0:	11 c0       	rjmp	.+34     	; 0x2b14 <vfprintf+0x326>
    2af2:	a0 fe       	sbrs	r10, 0
    2af4:	06 c0       	rjmp	.+12     	; 0x2b02 <vfprintf+0x314>
    2af6:	b2 14       	cp	r11, r2
    2af8:	88 f4       	brcc	.+34     	; 0x2b1c <vfprintf+0x32e>
    2afa:	28 0c       	add	r2, r8
    2afc:	92 2c       	mov	r9, r2
    2afe:	9b 18       	sub	r9, r11
    2b00:	0e c0       	rjmp	.+28     	; 0x2b1e <vfprintf+0x330>
    2b02:	b2 14       	cp	r11, r2
    2b04:	60 f4       	brcc	.+24     	; 0x2b1e <vfprintf+0x330>
    2b06:	b6 01       	movw	r22, r12
    2b08:	80 e2       	ldi	r24, 0x20	; 32
    2b0a:	90 e0       	ldi	r25, 0x00	; 0
    2b0c:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <fputc>
    2b10:	b3 94       	inc	r11
    2b12:	f7 cf       	rjmp	.-18     	; 0x2b02 <vfprintf+0x314>
    2b14:	b2 14       	cp	r11, r2
    2b16:	18 f4       	brcc	.+6      	; 0x2b1e <vfprintf+0x330>
    2b18:	2b 18       	sub	r2, r11
    2b1a:	02 c0       	rjmp	.+4      	; 0x2b20 <vfprintf+0x332>
    2b1c:	98 2c       	mov	r9, r8
    2b1e:	21 2c       	mov	r2, r1
    2b20:	a4 fe       	sbrs	r10, 4
    2b22:	10 c0       	rjmp	.+32     	; 0x2b44 <vfprintf+0x356>
    2b24:	b6 01       	movw	r22, r12
    2b26:	80 e3       	ldi	r24, 0x30	; 48
    2b28:	90 e0       	ldi	r25, 0x00	; 0
    2b2a:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <fputc>
    2b2e:	a2 fe       	sbrs	r10, 2
    2b30:	17 c0       	rjmp	.+46     	; 0x2b60 <vfprintf+0x372>
    2b32:	a1 fc       	sbrc	r10, 1
    2b34:	03 c0       	rjmp	.+6      	; 0x2b3c <vfprintf+0x34e>
    2b36:	88 e7       	ldi	r24, 0x78	; 120
    2b38:	90 e0       	ldi	r25, 0x00	; 0
    2b3a:	02 c0       	rjmp	.+4      	; 0x2b40 <vfprintf+0x352>
    2b3c:	88 e5       	ldi	r24, 0x58	; 88
    2b3e:	90 e0       	ldi	r25, 0x00	; 0
    2b40:	b6 01       	movw	r22, r12
    2b42:	0c c0       	rjmp	.+24     	; 0x2b5c <vfprintf+0x36e>
    2b44:	8a 2d       	mov	r24, r10
    2b46:	86 78       	andi	r24, 0x86	; 134
    2b48:	59 f0       	breq	.+22     	; 0x2b60 <vfprintf+0x372>
    2b4a:	a1 fe       	sbrs	r10, 1
    2b4c:	02 c0       	rjmp	.+4      	; 0x2b52 <vfprintf+0x364>
    2b4e:	8b e2       	ldi	r24, 0x2B	; 43
    2b50:	01 c0       	rjmp	.+2      	; 0x2b54 <vfprintf+0x366>
    2b52:	80 e2       	ldi	r24, 0x20	; 32
    2b54:	a7 fc       	sbrc	r10, 7
    2b56:	8d e2       	ldi	r24, 0x2D	; 45
    2b58:	b6 01       	movw	r22, r12
    2b5a:	90 e0       	ldi	r25, 0x00	; 0
    2b5c:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <fputc>
    2b60:	89 14       	cp	r8, r9
    2b62:	38 f4       	brcc	.+14     	; 0x2b72 <vfprintf+0x384>
    2b64:	b6 01       	movw	r22, r12
    2b66:	80 e3       	ldi	r24, 0x30	; 48
    2b68:	90 e0       	ldi	r25, 0x00	; 0
    2b6a:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <fputc>
    2b6e:	9a 94       	dec	r9
    2b70:	f7 cf       	rjmp	.-18     	; 0x2b60 <vfprintf+0x372>
    2b72:	8a 94       	dec	r8
    2b74:	f3 01       	movw	r30, r6
    2b76:	e8 0d       	add	r30, r8
    2b78:	f1 1d       	adc	r31, r1
    2b7a:	80 81       	ld	r24, Z
    2b7c:	b6 01       	movw	r22, r12
    2b7e:	90 e0       	ldi	r25, 0x00	; 0
    2b80:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <fputc>
    2b84:	81 10       	cpse	r8, r1
    2b86:	f5 cf       	rjmp	.-22     	; 0x2b72 <vfprintf+0x384>
    2b88:	22 20       	and	r2, r2
    2b8a:	09 f4       	brne	.+2      	; 0x2b8e <vfprintf+0x3a0>
    2b8c:	42 ce       	rjmp	.-892    	; 0x2812 <vfprintf+0x24>
    2b8e:	b6 01       	movw	r22, r12
    2b90:	80 e2       	ldi	r24, 0x20	; 32
    2b92:	90 e0       	ldi	r25, 0x00	; 0
    2b94:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <fputc>
    2b98:	2a 94       	dec	r2
    2b9a:	f6 cf       	rjmp	.-20     	; 0x2b88 <vfprintf+0x39a>
    2b9c:	f6 01       	movw	r30, r12
    2b9e:	86 81       	ldd	r24, Z+6	; 0x06
    2ba0:	97 81       	ldd	r25, Z+7	; 0x07
    2ba2:	02 c0       	rjmp	.+4      	; 0x2ba8 <vfprintf+0x3ba>
    2ba4:	8f ef       	ldi	r24, 0xFF	; 255
    2ba6:	9f ef       	ldi	r25, 0xFF	; 255
    2ba8:	2b 96       	adiw	r28, 0x0b	; 11
    2baa:	e2 e1       	ldi	r30, 0x12	; 18
    2bac:	0c 94 d2 16 	jmp	0x2da4	; 0x2da4 <__epilogue_restores__>

00002bb0 <strnlen_P>:
    2bb0:	fc 01       	movw	r30, r24
    2bb2:	05 90       	lpm	r0, Z+
    2bb4:	61 50       	subi	r22, 0x01	; 1
    2bb6:	70 40       	sbci	r23, 0x00	; 0
    2bb8:	01 10       	cpse	r0, r1
    2bba:	d8 f7       	brcc	.-10     	; 0x2bb2 <strnlen_P+0x2>
    2bbc:	80 95       	com	r24
    2bbe:	90 95       	com	r25
    2bc0:	8e 0f       	add	r24, r30
    2bc2:	9f 1f       	adc	r25, r31
    2bc4:	08 95       	ret

00002bc6 <strnlen>:
    2bc6:	fc 01       	movw	r30, r24
    2bc8:	61 50       	subi	r22, 0x01	; 1
    2bca:	70 40       	sbci	r23, 0x00	; 0
    2bcc:	01 90       	ld	r0, Z+
    2bce:	01 10       	cpse	r0, r1
    2bd0:	d8 f7       	brcc	.-10     	; 0x2bc8 <strnlen+0x2>
    2bd2:	80 95       	com	r24
    2bd4:	90 95       	com	r25
    2bd6:	8e 0f       	add	r24, r30
    2bd8:	9f 1f       	adc	r25, r31
    2bda:	08 95       	ret

00002bdc <fputc>:
    2bdc:	0f 93       	push	r16
    2bde:	1f 93       	push	r17
    2be0:	cf 93       	push	r28
    2be2:	df 93       	push	r29
    2be4:	fb 01       	movw	r30, r22
    2be6:	23 81       	ldd	r18, Z+3	; 0x03
    2be8:	21 fd       	sbrc	r18, 1
    2bea:	03 c0       	rjmp	.+6      	; 0x2bf2 <fputc+0x16>
    2bec:	8f ef       	ldi	r24, 0xFF	; 255
    2bee:	9f ef       	ldi	r25, 0xFF	; 255
    2bf0:	2c c0       	rjmp	.+88     	; 0x2c4a <fputc+0x6e>
    2bf2:	22 ff       	sbrs	r18, 2
    2bf4:	16 c0       	rjmp	.+44     	; 0x2c22 <fputc+0x46>
    2bf6:	46 81       	ldd	r20, Z+6	; 0x06
    2bf8:	57 81       	ldd	r21, Z+7	; 0x07
    2bfa:	24 81       	ldd	r18, Z+4	; 0x04
    2bfc:	35 81       	ldd	r19, Z+5	; 0x05
    2bfe:	42 17       	cp	r20, r18
    2c00:	53 07       	cpc	r21, r19
    2c02:	44 f4       	brge	.+16     	; 0x2c14 <fputc+0x38>
    2c04:	a0 81       	ld	r26, Z
    2c06:	b1 81       	ldd	r27, Z+1	; 0x01
    2c08:	9d 01       	movw	r18, r26
    2c0a:	2f 5f       	subi	r18, 0xFF	; 255
    2c0c:	3f 4f       	sbci	r19, 0xFF	; 255
    2c0e:	31 83       	std	Z+1, r19	; 0x01
    2c10:	20 83       	st	Z, r18
    2c12:	8c 93       	st	X, r24
    2c14:	26 81       	ldd	r18, Z+6	; 0x06
    2c16:	37 81       	ldd	r19, Z+7	; 0x07
    2c18:	2f 5f       	subi	r18, 0xFF	; 255
    2c1a:	3f 4f       	sbci	r19, 0xFF	; 255
    2c1c:	37 83       	std	Z+7, r19	; 0x07
    2c1e:	26 83       	std	Z+6, r18	; 0x06
    2c20:	14 c0       	rjmp	.+40     	; 0x2c4a <fputc+0x6e>
    2c22:	8b 01       	movw	r16, r22
    2c24:	ec 01       	movw	r28, r24
    2c26:	fb 01       	movw	r30, r22
    2c28:	00 84       	ldd	r0, Z+8	; 0x08
    2c2a:	f1 85       	ldd	r31, Z+9	; 0x09
    2c2c:	e0 2d       	mov	r30, r0
    2c2e:	09 95       	icall
    2c30:	89 2b       	or	r24, r25
    2c32:	e1 f6       	brne	.-72     	; 0x2bec <fputc+0x10>
    2c34:	d8 01       	movw	r26, r16
    2c36:	16 96       	adiw	r26, 0x06	; 6
    2c38:	8d 91       	ld	r24, X+
    2c3a:	9c 91       	ld	r25, X
    2c3c:	17 97       	sbiw	r26, 0x07	; 7
    2c3e:	01 96       	adiw	r24, 0x01	; 1
    2c40:	17 96       	adiw	r26, 0x07	; 7
    2c42:	9c 93       	st	X, r25
    2c44:	8e 93       	st	-X, r24
    2c46:	16 97       	sbiw	r26, 0x06	; 6
    2c48:	ce 01       	movw	r24, r28
    2c4a:	df 91       	pop	r29
    2c4c:	cf 91       	pop	r28
    2c4e:	1f 91       	pop	r17
    2c50:	0f 91       	pop	r16
    2c52:	08 95       	ret

00002c54 <__ultoa_invert>:
    2c54:	fa 01       	movw	r30, r20
    2c56:	aa 27       	eor	r26, r26
    2c58:	28 30       	cpi	r18, 0x08	; 8
    2c5a:	51 f1       	breq	.+84     	; 0x2cb0 <__ultoa_invert+0x5c>
    2c5c:	20 31       	cpi	r18, 0x10	; 16
    2c5e:	81 f1       	breq	.+96     	; 0x2cc0 <__ultoa_invert+0x6c>
    2c60:	e8 94       	clt
    2c62:	6f 93       	push	r22
    2c64:	6e 7f       	andi	r22, 0xFE	; 254
    2c66:	6e 5f       	subi	r22, 0xFE	; 254
    2c68:	7f 4f       	sbci	r23, 0xFF	; 255
    2c6a:	8f 4f       	sbci	r24, 0xFF	; 255
    2c6c:	9f 4f       	sbci	r25, 0xFF	; 255
    2c6e:	af 4f       	sbci	r26, 0xFF	; 255
    2c70:	b1 e0       	ldi	r27, 0x01	; 1
    2c72:	3e d0       	rcall	.+124    	; 0x2cf0 <__ultoa_invert+0x9c>
    2c74:	b4 e0       	ldi	r27, 0x04	; 4
    2c76:	3c d0       	rcall	.+120    	; 0x2cf0 <__ultoa_invert+0x9c>
    2c78:	67 0f       	add	r22, r23
    2c7a:	78 1f       	adc	r23, r24
    2c7c:	89 1f       	adc	r24, r25
    2c7e:	9a 1f       	adc	r25, r26
    2c80:	a1 1d       	adc	r26, r1
    2c82:	68 0f       	add	r22, r24
    2c84:	79 1f       	adc	r23, r25
    2c86:	8a 1f       	adc	r24, r26
    2c88:	91 1d       	adc	r25, r1
    2c8a:	a1 1d       	adc	r26, r1
    2c8c:	6a 0f       	add	r22, r26
    2c8e:	71 1d       	adc	r23, r1
    2c90:	81 1d       	adc	r24, r1
    2c92:	91 1d       	adc	r25, r1
    2c94:	a1 1d       	adc	r26, r1
    2c96:	20 d0       	rcall	.+64     	; 0x2cd8 <__ultoa_invert+0x84>
    2c98:	09 f4       	brne	.+2      	; 0x2c9c <__ultoa_invert+0x48>
    2c9a:	68 94       	set
    2c9c:	3f 91       	pop	r19
    2c9e:	2a e0       	ldi	r18, 0x0A	; 10
    2ca0:	26 9f       	mul	r18, r22
    2ca2:	11 24       	eor	r1, r1
    2ca4:	30 19       	sub	r19, r0
    2ca6:	30 5d       	subi	r19, 0xD0	; 208
    2ca8:	31 93       	st	Z+, r19
    2caa:	de f6       	brtc	.-74     	; 0x2c62 <__ultoa_invert+0xe>
    2cac:	cf 01       	movw	r24, r30
    2cae:	08 95       	ret
    2cb0:	46 2f       	mov	r20, r22
    2cb2:	47 70       	andi	r20, 0x07	; 7
    2cb4:	40 5d       	subi	r20, 0xD0	; 208
    2cb6:	41 93       	st	Z+, r20
    2cb8:	b3 e0       	ldi	r27, 0x03	; 3
    2cba:	0f d0       	rcall	.+30     	; 0x2cda <__ultoa_invert+0x86>
    2cbc:	c9 f7       	brne	.-14     	; 0x2cb0 <__ultoa_invert+0x5c>
    2cbe:	f6 cf       	rjmp	.-20     	; 0x2cac <__ultoa_invert+0x58>
    2cc0:	46 2f       	mov	r20, r22
    2cc2:	4f 70       	andi	r20, 0x0F	; 15
    2cc4:	40 5d       	subi	r20, 0xD0	; 208
    2cc6:	4a 33       	cpi	r20, 0x3A	; 58
    2cc8:	18 f0       	brcs	.+6      	; 0x2cd0 <__ultoa_invert+0x7c>
    2cca:	49 5d       	subi	r20, 0xD9	; 217
    2ccc:	31 fd       	sbrc	r19, 1
    2cce:	40 52       	subi	r20, 0x20	; 32
    2cd0:	41 93       	st	Z+, r20
    2cd2:	02 d0       	rcall	.+4      	; 0x2cd8 <__ultoa_invert+0x84>
    2cd4:	a9 f7       	brne	.-22     	; 0x2cc0 <__ultoa_invert+0x6c>
    2cd6:	ea cf       	rjmp	.-44     	; 0x2cac <__ultoa_invert+0x58>
    2cd8:	b4 e0       	ldi	r27, 0x04	; 4
    2cda:	a6 95       	lsr	r26
    2cdc:	97 95       	ror	r25
    2cde:	87 95       	ror	r24
    2ce0:	77 95       	ror	r23
    2ce2:	67 95       	ror	r22
    2ce4:	ba 95       	dec	r27
    2ce6:	c9 f7       	brne	.-14     	; 0x2cda <__ultoa_invert+0x86>
    2ce8:	00 97       	sbiw	r24, 0x00	; 0
    2cea:	61 05       	cpc	r22, r1
    2cec:	71 05       	cpc	r23, r1
    2cee:	08 95       	ret
    2cf0:	9b 01       	movw	r18, r22
    2cf2:	ac 01       	movw	r20, r24
    2cf4:	0a 2e       	mov	r0, r26
    2cf6:	06 94       	lsr	r0
    2cf8:	57 95       	ror	r21
    2cfa:	47 95       	ror	r20
    2cfc:	37 95       	ror	r19
    2cfe:	27 95       	ror	r18
    2d00:	ba 95       	dec	r27
    2d02:	c9 f7       	brne	.-14     	; 0x2cf6 <__ultoa_invert+0xa2>
    2d04:	62 0f       	add	r22, r18
    2d06:	73 1f       	adc	r23, r19
    2d08:	84 1f       	adc	r24, r20
    2d0a:	95 1f       	adc	r25, r21
    2d0c:	a0 1d       	adc	r26, r0
    2d0e:	08 95       	ret

00002d10 <eeprom_read_word>:
    2d10:	a8 e1       	ldi	r26, 0x18	; 24
    2d12:	b0 e0       	ldi	r27, 0x00	; 0
    2d14:	42 e0       	ldi	r20, 0x02	; 2
    2d16:	50 e0       	ldi	r21, 0x00	; 0
    2d18:	0c 94 96 16 	jmp	0x2d2c	; 0x2d2c <eeprom_read_blraw>

00002d1c <eeprom_update_word>:
    2d1c:	01 96       	adiw	r24, 0x01	; 1
    2d1e:	27 2f       	mov	r18, r23
    2d20:	0e 94 a5 16 	call	0x2d4a	; 0x2d4a <eeprom_update_r18>
    2d24:	0c 94 a4 16 	jmp	0x2d48	; 0x2d48 <eeprom_update_byte>

00002d28 <eeprom_read_block>:
    2d28:	dc 01       	movw	r26, r24
    2d2a:	cb 01       	movw	r24, r22

00002d2c <eeprom_read_blraw>:
    2d2c:	fc 01       	movw	r30, r24
    2d2e:	f9 99       	sbic	0x1f, 1	; 31
    2d30:	fe cf       	rjmp	.-4      	; 0x2d2e <eeprom_read_blraw+0x2>
    2d32:	06 c0       	rjmp	.+12     	; 0x2d40 <eeprom_read_blraw+0x14>
    2d34:	f2 bd       	out	0x22, r31	; 34
    2d36:	e1 bd       	out	0x21, r30	; 33
    2d38:	f8 9a       	sbi	0x1f, 0	; 31
    2d3a:	31 96       	adiw	r30, 0x01	; 1
    2d3c:	00 b4       	in	r0, 0x20	; 32
    2d3e:	0d 92       	st	X+, r0
    2d40:	41 50       	subi	r20, 0x01	; 1
    2d42:	50 40       	sbci	r21, 0x00	; 0
    2d44:	b8 f7       	brcc	.-18     	; 0x2d34 <eeprom_read_blraw+0x8>
    2d46:	08 95       	ret

00002d48 <eeprom_update_byte>:
    2d48:	26 2f       	mov	r18, r22

00002d4a <eeprom_update_r18>:
    2d4a:	f9 99       	sbic	0x1f, 1	; 31
    2d4c:	fe cf       	rjmp	.-4      	; 0x2d4a <eeprom_update_r18>
    2d4e:	92 bd       	out	0x22, r25	; 34
    2d50:	81 bd       	out	0x21, r24	; 33
    2d52:	f8 9a       	sbi	0x1f, 0	; 31
    2d54:	01 97       	sbiw	r24, 0x01	; 1
    2d56:	00 b4       	in	r0, 0x20	; 32
    2d58:	02 16       	cp	r0, r18
    2d5a:	39 f0       	breq	.+14     	; 0x2d6a <eeprom_update_r18+0x20>
    2d5c:	1f ba       	out	0x1f, r1	; 31
    2d5e:	20 bd       	out	0x20, r18	; 32
    2d60:	0f b6       	in	r0, 0x3f	; 63
    2d62:	f8 94       	cli
    2d64:	fa 9a       	sbi	0x1f, 2	; 31
    2d66:	f9 9a       	sbi	0x1f, 1	; 31
    2d68:	0f be       	out	0x3f, r0	; 63
    2d6a:	08 95       	ret

00002d6c <__prologue_saves__>:
    2d6c:	2f 92       	push	r2
    2d6e:	3f 92       	push	r3
    2d70:	4f 92       	push	r4
    2d72:	5f 92       	push	r5
    2d74:	6f 92       	push	r6
    2d76:	7f 92       	push	r7
    2d78:	8f 92       	push	r8
    2d7a:	9f 92       	push	r9
    2d7c:	af 92       	push	r10
    2d7e:	bf 92       	push	r11
    2d80:	cf 92       	push	r12
    2d82:	df 92       	push	r13
    2d84:	ef 92       	push	r14
    2d86:	ff 92       	push	r15
    2d88:	0f 93       	push	r16
    2d8a:	1f 93       	push	r17
    2d8c:	cf 93       	push	r28
    2d8e:	df 93       	push	r29
    2d90:	cd b7       	in	r28, 0x3d	; 61
    2d92:	de b7       	in	r29, 0x3e	; 62
    2d94:	ca 1b       	sub	r28, r26
    2d96:	db 0b       	sbc	r29, r27
    2d98:	0f b6       	in	r0, 0x3f	; 63
    2d9a:	f8 94       	cli
    2d9c:	de bf       	out	0x3e, r29	; 62
    2d9e:	0f be       	out	0x3f, r0	; 63
    2da0:	cd bf       	out	0x3d, r28	; 61
    2da2:	09 94       	ijmp

00002da4 <__epilogue_restores__>:
    2da4:	2a 88       	ldd	r2, Y+18	; 0x12
    2da6:	39 88       	ldd	r3, Y+17	; 0x11
    2da8:	48 88       	ldd	r4, Y+16	; 0x10
    2daa:	5f 84       	ldd	r5, Y+15	; 0x0f
    2dac:	6e 84       	ldd	r6, Y+14	; 0x0e
    2dae:	7d 84       	ldd	r7, Y+13	; 0x0d
    2db0:	8c 84       	ldd	r8, Y+12	; 0x0c
    2db2:	9b 84       	ldd	r9, Y+11	; 0x0b
    2db4:	aa 84       	ldd	r10, Y+10	; 0x0a
    2db6:	b9 84       	ldd	r11, Y+9	; 0x09
    2db8:	c8 84       	ldd	r12, Y+8	; 0x08
    2dba:	df 80       	ldd	r13, Y+7	; 0x07
    2dbc:	ee 80       	ldd	r14, Y+6	; 0x06
    2dbe:	fd 80       	ldd	r15, Y+5	; 0x05
    2dc0:	0c 81       	ldd	r16, Y+4	; 0x04
    2dc2:	1b 81       	ldd	r17, Y+3	; 0x03
    2dc4:	aa 81       	ldd	r26, Y+2	; 0x02
    2dc6:	b9 81       	ldd	r27, Y+1	; 0x01
    2dc8:	ce 0f       	add	r28, r30
    2dca:	d1 1d       	adc	r29, r1
    2dcc:	0f b6       	in	r0, 0x3f	; 63
    2dce:	f8 94       	cli
    2dd0:	de bf       	out	0x3e, r29	; 62
    2dd2:	0f be       	out	0x3f, r0	; 63
    2dd4:	cd bf       	out	0x3d, r28	; 61
    2dd6:	ed 01       	movw	r28, r26
    2dd8:	08 95       	ret

00002dda <_exit>:
    2dda:	f8 94       	cli

00002ddc <__stop_program>:
    2ddc:	ff cf       	rjmp	.-2      	; 0x2ddc <__stop_program>
